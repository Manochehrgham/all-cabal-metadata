changelog-type: ''
hash: 35caf471f471142f7727196904415cd00cbf885e684c5a6ca4c6875e373b0c1a
synopsis: Haskell web framework (because Scotty had trouble yodeling)
changelog: ''
all-versions:
- '0.1.0.0'
latest: '0.1.0.0'
description-type: haddock
description: ! 'A Haskell web framework heavily influenced by the excellent Scotty,

  which was in turn influenced by Ruby''s Sinatra.


  Welshy strives to make it easier to do error handling without overly

  complicating the control flow. An example:


  @&#123;-&#35; LANGUAGE OverloadedStrings &#35;-&#125;@


  > import Control.Applicative

  > import Control.Monad

  > import qualified Data.Text.Lazy as T

  > import Network.HTTP.Types

  > import Web.Welshy

  >

  > fibs :: [Int]

  > fibs = 0 : 1 : zipWith (+) fibs (tail fibs)

  >

  > main :: IO ()

  > main = welshy 3000 $ do

  >     get "/fibs" $ do

  >         offset <- queryParam "offset" <|> return 0

  >         length <- queryParam "length"

  >

  >         when (offset < 0 || length < 0)

  >              (halt $ status badRequest400)

  >

  >         when (offset + length > 1000)

  >              (halt $ status requestedRangeNotSatisfiable416)

  >

  >         let result = take length $ drop offset fibs

  >         text $ T.pack $ show result


  Some of the features demonstrated here:


  * You can ''halt'' the current action at any point and continue

  with a different one.


  * Functions like ''queryParam'' and ''jsonParam'' have built-in error handling.


  * Welshy''s ''Action'' monad is an instance of ''Alternative''.'
