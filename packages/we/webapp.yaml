homepage: https://github.com/fhsjaagshs/webapp
changelog-type: ''
hash: 3ac6bbb27bcb1cca79578d01ab1f4aba55b3edc5642ed5667500ebc5a53bf36a
test-bench-deps: {}
maintainer: Nathaniel Symer <nate@symer.io>
synopsis: Haskell web scaffolding using Scotty, WAI, and Warp
changelog: ''
basic-deps:
  warp: -any
  bytestring: -any
  wai: -any
  unix: -any
  stm: -any
  base: ! '>=4.8.0.0 && <=4.8.1.0'
  time: -any
  unordered-containers: -any
  text: -any
  hjsmin: -any
  filepath: -any
  bcrypt: -any
  data-default: -any
  blaze-builder: -any
  hashtables: -any
  warp-tls: -any
  mime-types: -any
  zlib: -any
  mtl: -any
  base16-bytestring: -any
  attoparsec: -any
  wai-extra: -any
  transformers: -any
  optparse-applicative: -any
  css-text: -any
  fsnotify: -any
  scotty: -any
  http-types: -any
  directory: -any
  cryptohash: -any
all-versions:
- '0.0.1'
author: Nathaniel Symer <nate@symer.io>
latest: '0.0.1'
description-type: markdown
description: ! "# webapp - simple webapp scaffolding with state\n\nBasic example:\n\n
  \   module Main where\n    \n    import Web.App\n    import Web.Scotty.Trans\n    \n
  \   instance WebAppState Integer where\n      initState = return 0\n      destroyState
  st = do\n        putStr \"Counted: \"\n        print st\n\n    main = webappMain
  app \"My Web App\" \"This is a demo web app\"\n\n    app :: (ScottyError e) => ScottyT
  e (WebAppM Integer) ()\n    app = do\n      get \"/add\" $ do\n      \tmodifyState
  (+1)\n        \n      get \"/subtract\" $ do\n        (State count) <- getState\n
  \       putState (State count-1)\n        \n      get \"/assets/:file\" $ param
  \"file\" >>= loadAsset\n    \n    \nThere is also a module called `FileCache` which
  is available for loading cached files. It loads files into memory, MD5 sums them,
  compresses them, and then stores them in the cache."
license-name: MIT
