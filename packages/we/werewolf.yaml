homepage: https://github.com/hjwylde/werewolf
changelog-type: markdown
hash: ab4ff8e1cf36e5391b3f13816a3b6ebac0b952cbb1d558e9b9de73cfb7ac3c70
test-bench-deps:
  werewolf: -any
  extra: ! '>=1.4'
  base: ! '>=4.8 && <5'
  text: ! '>=1.2'
  containers: ! '>=0.5'
  lens: ! '>=4.12'
  tasty-quickcheck: ! '>=0.8'
  mtl: ! '>=2.2'
  tasty: ! '>=0.10 && <0.12'
  QuickCheck: ! '>=2.8'
maintainer: public@hjwylde.com
synopsis: A game engine for running werewolf in a chat client
changelog: ! '## Changelog


  #### Upcoming


  #### v0.3.1.1


  *Revisions*


  * Tidied up the help text to be smaller. ([#26](https://github.com/hjwylde/werewolf/issues/26))

  * Fixed a bug where the turn was advanced to Werewolves when no Werewolves were
  alive. ([#26](https://github.com/hjwylde/werewolf/issues/26))


  #### v0.3.1.0


  *Minor*


  * Added a message to say the names of all the players at the start of a game. ([#23](https://github.com/hjwylde/werewolf/issues/23))

  * Added a message to say the roles in play at the start of a game. ([#16](https://github.com/hjwylde/werewolf/issues/16))


  #### v0.3.0.3


  *Revisions*


  * Tidied up the help text to be smaller. ([#26](https://github.com/hjwylde/werewolf/issues/26))

  * Fixed a bug where the turn was advanced to Werewolves when no Werewolves were
  alive. ([#26](https://github.com/hjwylde/werewolf/issues/26))


  #### v0.3.0.2


  *Revisions*


  * Tidied up the help text to be smaller. ([#26](https://github.com/hjwylde/werewolf/issues/26))

  * Fixed a bug where the turn was advanced to Werewolves when no Werewolves were
  alive. ([#26](https://github.com/hjwylde/werewolf/issues/26))


  #### v0.3.0.1


  *Revisions*


  * Fixed `interpret` to display the commands help messages when given invalid arguments.
  ([#22](https://github.com/hjwylde/werewolf/issues/22))


  #### v0.3.0.0


  *Major*


  * Added `--extra-roles` option to `start`. ([#12](https://github.com/hjwylde/werewolf/issues/12))

  * Removed Seer from being included by default. ([#12](https://github.com/hjwylde/werewolf/issues/12))


  *Minor*


  * Allowed `start` to work when the game has ended but `end` hasn''t been called.
  ([#15](https://github.com/hjwylde/werewolf/issues/15))

  * Added `quit` command. ([#13](https://github.com/hjwylde/werewolf/issues/13))


  #### v0.2.0.1


  *Revisions*


  * Tidied up the help text to be smaller. ([#26](https://github.com/hjwylde/werewolf/issues/26))

  * Fixed a bug where the turn was advanced to Werewolves when no Werewolves were
  alive. ([#26](https://github.com/hjwylde/werewolf/issues/26))


  #### v0.2.0.0


  *Major*


  * Added the Seer role. ([#4](https://github.com/hjwylde/werewolf/issues/4))

  * Removed the need to encode / decode to JSON for the state file. ([#9](https://github.com/hjwylde/werewolf/issues/9))


  #### v0.1.0.0


  *Major*


  * Initial implementation with Villagers and Werewolves. ([#1](https://github.com/hjwylde/werewolf/issues/1))

'
basic-deps:
  werewolf: -any
  MonadRandom: ! '>=0.4'
  extra: ! '>=1.4'
  base: ! '>=4.8 && <5'
  text: ! '>=1.2'
  filepath: ! '>=1.4'
  random-shuffle: -any
  containers: ! '>=0.5'
  lens: ! '>=4.12'
  mtl: ! '>=2.2'
  transformers: ! '>=0.4'
  optparse-applicative: ! '>=0.11'
  aeson: ! '>=0.8'
  directory: ! '>=1.2'
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.2.0.1'
- '0.3.0.0'
- '0.3.0.1'
- '0.3.0.3'
- '0.3.1.0'
- '0.3.1.1'
author: Henry J. Wylde
latest: '0.3.1.1'
description-type: markdown
description: ! "# werewolf\n\n[![Project Status: Wip - Initial development is in progress,
  but there has not yet been a stable, usable release suitable for the public.](http://www.repostatus.org/badges/1.0.0/wip.svg)](http://www.repostatus.org/#wip)\n[![Build
  Status](https://travis-ci.org/hjwylde/werewolf.svg?branch=master)](https://travis-ci.org/hjwylde/werewolf)\n[![Release](https://img.shields.io/github/release/hjwylde/werewolf.svg)](https://github.com/hjwylde/werewolf/releases/latest)\n\nA
  game engine for running werewolf in a chat client.\nThis engine is based off of
  [Werewolves of Millers Hollow](http://www.games-wiki.org/wiki/Werewolves_of_Millers_Hollow/).\n\n###
  Game description\n\nDeep in the American countryside, the little town of Millers
  Hollow has recently been infiltrated by Werewolves.\nEach night, murders are committed
  by the Villagers, who due to some mysterious phenomenon (possibly the greenhouse
  effect) have become Werewolves.\nIt is now time to take control and eliminate this
  ancient evil, before the town loses its last few inhabitants.\n\nObjective of the
  Game:  \nFor the Villagers: kill all of the Werewolves.  \nFor the Werewolves: kill
  all of the Villagers.\n\n#### Roles\n\nThe current implemented roles are:\n* Seer.\n*
  Villager.\n* Werewolf.\n\n### Installing\n\nInstalling werewolf is easiest done
  using either\n    [stack](https://github.com/commercialhaskell/stack) (recommended)
  or\n    [Cabal](https://github.com/haskell/cabal).\n\n**Using stack:**\n\n```bash\nstack
  install werewolf\nexport PATH=$PATH:~/.local/bin\n```\n\n**Using Cabal:**\n\n```bash\ncabal-install
  werewolf\nexport PATH=$PATH:~/.cabal/bin\n```\n\n### Usage\n\nThis section covers
  how a chat client interacts with the werewolf game engine.\n\nAll werewolf commands
  are designed to be run by a user from the chat client.\nE.g., to start a game:\n```bash\n>
  werewolf --caller @foo start @foo @bar @baz @qux @quux @corge @grault\n{\"ok\":true,\"messages\":[\n
  \   {\"to\":[\"@foo\"],\"message\":\"You're a Villager.\\nAn ordinary townsperson
  humbly living in Millers Hollow.\\n\"},\n    ...,\n    {\"to\":null,\"message\":\"Night
  falls, the townsfolk are asleep.\"},\n    {\"to\":null,\"message\":\"The Seers wake
  up.\"},\n    {\"to\":[\"@grault\"],\"message\":\"Who's allegiance would you like
  to see?\"}\n    ]}\n```\n\nIn this example, user _@foo_ ran the `start` command
  with the player names as arguments.\nNote that the calling user, _@foo_ was passed
  in to the `--caller` option.\nAll commands require this option.\n\nAny command ran
  returns a JSON result.\nThe result contains a boolean for whether the command was
  successful and a list of messages.\nThe `to` header on a message may either be `null`
  for a public message or have a list of intended\n    recipients.\n\nIt's the Seers'
  turn now.\n```bash\n> werewolf --caller @grault see @qux\n{\"ok\":true,\"messages\":[\n
  \   {\"to\":[\"@grault\"],\"message\":\"@qux is a Villager.\"},\n    {\"to\":null,\"message\":\"The
  Werewolves wake up, recognise one another and choose a new victim.\"},\n    {\"to\":[\"@bar\",\"@corge\"],\"message\":\"Who
  would you like to kill?\"}\n    ]}\n```\n\nLet's have _@bar_, a Werewolf, vote to
  kill a Villager.\n```bash\n> werewolf --caller @bar vote @foo\n{\"ok\":true,\"messages\":[]}\n```\n\nThis
  time, even though the command was successful, there are no messages.\nIn this implementation
  of werewolf votes are only revealed once tallied.\n\n```bash\n> werewolf --caller
  @bar vote @foo\n{\"ok\":false,\"messages\":[{\"to\":[\"@bar\"],\"message\":\"You've
  already voted!\"}]}\n```\n\nHere the command was unsuccessful and an error message
  is sent to _@bar_.\nNote that even though the command was unsuccessful, the chat
  client interface probably won't need to\n    do anything special.\nRelaying the
  error message back to the user should suffice.\n\n```bash\n> werewolf --caller @corge
  vote @foo\n{\"ok\":true,\"messages\":[\n    {\"to\":[\"@bar\",\"@corge\"],\"message\":\"@bar
  voted to kill @foo.\"},\n    {\"to\":[\"@bar\",\"@corge\"],\"message\":\"@corge
  voted to kill @foo.\"},\n    {\"to\":null,\"message\":\"The sun rises. Everybody
  wakes up and opens their eyes...\"},\n    {\"to\":null,\"message\":\"As you open
  them you notice a door broken down and @foo's guts spilling out over the cobblestones.
  From the look of their personal effects, you deduce they were a Villager.\"}\n    ]}\n```\n\nAnd
  so on.\n\nThus a chat client interface must implement the following:\n* The ability
  to call werewolf commands. This includes passing the `--caller` option and arguments\n
  \ correctly. Note that it is possible to just implement the `interpret` command,
  which interprets\n  the caller's input.\n* The ability to send resultant messages.
  Resultant messages may be to everyone or to specific\n  users.\n\n#### Commands\n\nSee
  `werewolf --help`.\n\n#### Chat clients\n\n**Coming soon:**\n* Slack\n"
license-name: BSD3
