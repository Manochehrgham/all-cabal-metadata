homepage: http://haskell-servant.readthedocs.org/
changelog-type: markdown
hash: d3ac72d1b11dd6ebf86076237d8ffab3b87e8b6f04d2af1b28a2c5506faa82c5
test-bench-deps:
  warp: -any
  http-client: -any
  bytestring: -any
  wai: -any
  base: ==4.*
  servant-client: -any
  hspec: ==2.*
  text: -any
  http-api-data: -any
  network: ! '>=2.6'
  HUnit: -any
  servant-server: ==0.9.*
  servant: ==0.9.*
  base-compat: -any
  transformers: -any
  deepseq: -any
  QuickCheck: ! '>=2.7'
  http-types: -any
  aeson: -any
  http-media: -any
  transformers-compat: -any
maintainer: haskell-servant-maintainers@googlegroups.com
synopsis: automatical derivation of querying functions for servant webservices
changelog: ! "0.9.1.1\n-------\n\n* Add MonadThrow and MonadCatch instances for ClientM\n\n0.9\n---\n\n*
  BACKWARDS INCOMPATIBLE: `client` now returns a ClientM which is a Reader for\n  BasicEnv.
  BasicEnv comprises the HttpManager and BaseUrl that have had to be\n  passed to
  each method returned by `client`.\n\n0.7.1\n-----\n\n* Support GHC 8.0\n* `ServantError`
  has an `Eq` instance now.\n\n0.6\n---\n\n* `client` no longer takes `BaseUrl` and
  `Manager` arguments. Instead, each function returned by `client` requires these
  two arguments.\n\n0.5\n---\n\n* Use the `text` package instead of `String`.\n* Support
  for the `HttpVersion`, `IsSecure`, `RemoteHost` and `Vault` combinators\n* Added
  support for `path` on `BaseUrl`.\n* `client` now takes an explicit `Manager` argument.\n*
  Use `http-api-data` instead of `Servant.Common.Text`\n* Client functions now consider
  any 2xx successful.\n* Remove matrix params.\n* Added support for Basic authentication\n*
  Add generalized authentication support via the `AuthClientData` type family and\n
  \ `AuthenticateReq` data type\n\n0.4.1\n-----\n* The `HasClient` instance for `Delete
  cts ()` now does not care at all about content types provided.\n\n0.4\n---\n* `Delete`
  now is like `Get`, `Post`, `Put`, and `Patch` and returns a response body\n* Support
  content-type aware combinators and `Accept`/`Content-type` headers\n* Added a lot
  of tests\n* Support multiple concurrent threads\n* Use `ServantError` to report
  Errors instead of `String`\n* Make the clients for `Raw` endpoints return the whole
  `Response` value (to be able to access response headers for example)\n* Support
  for PATCH\n* Make () instances expect No Content status code, and not try to decode
  body.\n* Add support for response headers\n\n0.2.2\n-----\n* Add TLS support\n*
  Add matrix parameter support\n"
basic-deps:
  http-client: ! '>=0.4.18.1 && <0.6'
  exceptions: ! '>=0.8 && <0.9'
  bytestring: ! '>=0.10 && <0.11'
  base: ! '>=4.7 && <4.10'
  base64-bytestring: ! '>=1.0.0.1 && <1.1'
  text: ! '>=1.2 && <1.3'
  http-api-data: ! '>=0.3 && <0.4'
  servant: ==0.9.*
  base-compat: ! '>=0.9.1 && <0.10'
  http-client-tls: ! '>=0.2.2 && <0.4'
  network-uri: ! '>=2.6 && <2.7'
  mtl: -any
  attoparsec: ! '>=0.12 && <0.14'
  transformers: ! '>=0.3 && <0.6'
  string-conversions: ! '>=0.3 && <0.5'
  http-types: ! '>=0.8.6 && <0.10'
  aeson: ! '>=0.7 && <1.2'
  safe: ! '>=0.3.9 && <0.4'
  http-media: ! '>=0.6.2 && <0.7'
  transformers-compat: ! '>=0.4 && <0.6'
all-versions:
- '0.2'
- '0.2.1'
- '0.2.2'
- '0.4.0'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.4.3.1'
- '0.4.4'
- '0.4.4.2'
- '0.4.4.3'
- '0.4.4.4'
- '0.4.4.5'
- '0.4.4.6'
- '0.4.4.7'
- '0.5'
- '0.6'
- '0.6.1'
- '0.7'
- '0.7.1'
- '0.8'
- '0.8.1'
- '0.9'
- '0.9.0.1'
- '0.9.1'
- '0.9.1.1'
author: Servant Contributors
latest: '0.9.1.1'
description-type: markdown
description: ! "# servant-client\n\n![servant](https://raw.githubusercontent.com/haskell-servant/servant/master/servant.png)\n\nThis
  library lets you automatically derive Haskell functions that let you query each
  endpoint of a *servant* webservice.\n\n## Example\n\n``` haskell\ntype MyApi = \"books\"
  :> Get '[JSON] [Book] -- GET /books\n        :<|> \"books\" :> ReqBody Book :> Post
  '[JSON] Book -- POST /books\n\nmyApi :: Proxy MyApi\nmyApi = Proxy\n\ngetAllBooks
  :: Manager -> BaseUrl -> ExceptT String IO [Book]\npostNewBook :: Book -> Manager
  -> BaseUrl -> ExceptT String IO Book\n-- 'client' allows you to produce operations
  to query an API from a client.\n(getAllBooks :<|> postNewBook) = client myApi\n```\n"
license-name: BSD3
