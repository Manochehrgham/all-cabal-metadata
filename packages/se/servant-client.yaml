homepage: http://haskell-servant.readthedocs.org/
changelog-type: markdown
hash: dae221734ded666c64189ffb0de68f0020f791a4faeb5c0efb92ec682ba2f645
test-bench-deps:
  warp: -any
  http-client: -any
  bytestring: -any
  wai: -any
  base: ==4.*
  servant-client: -any
  hspec: ==2.*
  text: -any
  network: ! '>=2.6'
  HUnit: -any
  servant-server: ==0.7.*
  servant: ==0.7.*
  transformers: -any
  deepseq: -any
  QuickCheck: ! '>=2.7'
  http-types: -any
  aeson: -any
  http-media: -any
  transformers-compat: -any
maintainer: haskell-servant-maintainers@googlegroups.com
synopsis: automatical derivation of querying functions for servant webservices
changelog: ! "0.7.1\n-----\n\n* Support GHC 8.0\n* `ServantError` has an `Eq` instance
  now.\n\n0.6\n---\n\n* `client` no longer takes `BaseUrl` and `Manager` arguments.
  Instead, each function returned by `client` requires these two arguments.\n\n0.5\n---\n\n*
  Use the `text` package instead of `String`.\n* Support for the `HttpVersion`, `IsSecure`,
  `RemoteHost` and `Vault` combinators\n* Added support for `path` on `BaseUrl`.\n*
  `client` now takes an explicit `Manager` argument.\n* Use `http-api-data` instead
  of `Servant.Common.Text`\n* Client functions now consider any 2xx successful.\n*
  Remove matrix params.\n* Added support for Basic authentication\n* Add generalized
  authentication support via the `AuthClientData` type family and\n  `AuthenticateReq`
  data type\n\n0.4.1\n-----\n* The `HasClient` instance for `Delete cts ()` now does
  not care at all about content types provided.\n\n0.4\n---\n* `Delete` now is like
  `Get`, `Post`, `Put`, and `Patch` and returns a response body\n* Support content-type
  aware combinators and `Accept`/`Content-type` headers\n* Added a lot of tests\n*
  Support multiple concurrent threads\n* Use `ServantError` to report Errors instead
  of `String`\n* Make the clients for `Raw` endpoints return the whole `Response`
  value (to be able to access response headers for example)\n* Support for PATCH\n*
  Make () instances expect No Content status code, and not try to decode body.\n*
  Add support for response headers\n\n0.2.2\n-----\n* Add TLS support\n* Add matrix
  parameter support\n"
basic-deps:
  http-client: -any
  exceptions: -any
  bytestring: -any
  base: ! '>=4.7 && <5'
  base64-bytestring: -any
  text: -any
  http-api-data: ! '>=0.1 && <0.3'
  servant: ==0.7.*
  http-client-tls: -any
  network-uri: ! '>=2.6'
  attoparsec: -any
  transformers: -any
  string-conversions: -any
  http-types: -any
  aeson: -any
  safe: -any
  http-media: -any
  transformers-compat: -any
all-versions:
- '0.2'
- '0.2.1'
- '0.2.2'
- '0.4.0'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.4.3.1'
- '0.4.4'
- '0.4.4.2'
- '0.4.4.3'
- '0.4.4.4'
- '0.4.4.5'
- '0.4.4.6'
- '0.4.4.7'
- '0.5'
- '0.6'
- '0.6.1'
- '0.7'
- '0.7.1'
author: Servant Contributors
latest: '0.7.1'
description-type: markdown
description: ! "# servant-client\n\n![servant](https://raw.githubusercontent.com/haskell-servant/servant/master/servant.png)\n\nThis
  library lets you automatically derive Haskell functions that let you query each
  endpoint of a *servant* webservice.\n\n## Example\n\n``` haskell\ntype MyApi = \"books\"
  :> Get '[JSON] [Book] -- GET /books\n        :<|> \"books\" :> ReqBody Book :> Post
  '[JSON] Book -- POST /books\n\nmyApi :: Proxy MyApi\nmyApi = Proxy\n\ngetAllBooks
  :: ExceptT String IO [Book]\npostNewBook :: Book -> ExceptT String IO Book\n-- 'client'
  allows you to produce operations to query an API from a client.\n(getAllBooks :<|>
  postNewBook) = client myApi host\n  where host = BaseUrl Http \"localhost\" 8080\n```\n"
license-name: BSD3
