homepage: http://haskell-servant.github.io/
changelog-type: markdown
hash: 1228b3bc73cdb5e0f8a7ac0330c4eb06f637c7fcfe526c9db02a842fcaa356df
test-bench-deps:
  warp: -any
  exceptions: -any
  bytestring: -any
  wai: -any
  bytestring-conversion: -any
  filemanip: -any
  base: ==4.*
  hspec: ==2.*
  text: -any
  filepath: -any
  network: ! '>=2.6'
  parsec: -any
  doctest: -any
  servant-server: -any
  servant: -any
  base-compat: -any
  hspec-wai: -any
  should-not-typecheck: ==2.*
  mtl: -any
  wai-extra: -any
  transformers: -any
  temporary: -any
  QuickCheck: -any
  string-conversions: -any
  http-types: -any
  aeson: -any
  safe: -any
  transformers-compat: -any
  directory: -any
maintainer: haskell-servant-maintainers@googlegroups.com
synopsis: A family of combinators for defining webservices APIs and serving them
changelog: ! "0.6\n---\n\n* Query parameters that can't be parsed result in a `400`
  (was `404`).\n\n0.5\n---\n\n* Add `Config` machinery (https://github.com/haskell-servant/servant/pull/327).\n
  \ This is a breaking change, as the signatures of both `route`, `serve` and the\n
  \ typeclass `HasServer` now take an additional parameter.\n* Support for the `HttpVersion`,
  `IsSecure`, `RemoteHost` and `Vault` combinators\n* Drop `EitherT` in favor of `ExceptT`\n*
  Use `http-api-data` instead of `Servant.Common.Text`\n* Remove matrix params.\n*
  Remove `RouteMismatch`.\n* Redefined constructors of `RouteResult`.\n* Added `Delayed`
  and related functions (`addMethodCheck`, `addAcceptCheck`, `addBodyCheck`, `runDelayed`)\n*
  Added support for Basic Authentication\n* Add generalized authentication support
  via the `AuthServerData` type family and `AuthHandler` handler\n\n0.4.1\n-----\n*
  Bump attoparsec upper bound to < 0.14\n* Bump wai-app-static upper bound to < 3.2\n*
  Bump either upper bound to < 4.5\n\n0.4\n---\n* `Delete` now is like `Get`, `Post`,
  `Put`, and `Patch` and returns a response body\n* Add a `RouteMismatch` constructor
  for arbitrary HTTP response codes (https://github.com/haskell-servant/servant-server/pull/22)\n*
  Add support for the `Patch` combinator\n* Support for `Accept`/`Content-type` headers
  and for the content-type aware combinators in *servant-0.4*\n* Export `toApplication`
  from `Servant.Server` (https://github.com/haskell-servant/servant-server/pull/29)\n*
  Support other Monads than just `EitherT (Int, String) IO` (https://github.com/haskell-servant/servant-server/pull/21)\n*
  Make methods return status code 204 if they return () (https://github.com/haskell-servant/servant-server/issues/28)\n*
  Add server support for response headers\n* Use `ServantErr` instead of `(Int,String)`
  in `EitherT` handlers\n* Add `errXXX` functions for HTTP errors with sensible default
  reason strings\n* Add `enter` function for applying natural transformations to handlers\n\n0.2.4\n-----\n*
  Added support for matrix parameters, see e.g. http://www.w3.org/DesignIssues/MatrixURIs.html\n*
  Add support for serializing based on Accept header\n  (https://github.com/haskell-servant/servant-server/issues/9)\n*
  Ignore trailing slashes\n  (https://github.com/haskell-servant/servant-server/issues/5)\n\n\n0.2.3\n-----\n\n*
  Fix consuming request body issue\n  (https://github.com/haskell-servant/servant/issues/3)\n*
  Make code sample in Servant.Server complete\n"
basic-deps:
  warp: ! '>=3.0 && <3.3'
  bytestring: ! '>=0.10 && <0.11'
  wai: ! '>=3.0 && <3.3'
  split: ! '>=0.2 && <0.3'
  base: ! '>=4.7 && <5'
  base64-bytestring: ==1.0.*
  text: ==1.2.*
  http-api-data: ! '>=0.1 && <0.3'
  filepath: ! '>=1'
  network: ! '>=2.6 && <2.7'
  word8: ==0.1.*
  servant-server: -any
  servant: ==0.6.*
  containers: ! '>=0.5 && <0.6'
  base-compat: ! '>=0.9'
  network-uri: ! '>=2.6 && <2.7'
  mtl: ! '>=2 && <3'
  mmorph: ! '>=1'
  attoparsec: ! '>=0.12 && <0.14'
  transformers: ! '>=0.3 && <0.5'
  string-conversions: ! '>=0.3 && <0.5'
  system-filepath: ! '>=0.4 && <0.5'
  http-types: ! '>=0.8 && <0.10'
  wai-app-static: ! '>=3.0 && <3.2'
  aeson: ! '>=0.7 && <0.12'
  safe: ! '>=0.3 && <0.4'
  transformers-compat: ! '>=0.4'
all-versions:
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.2.4'
- '0.4.0'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.4.3.1'
- '0.4.4'
- '0.4.4.1'
- '0.4.4.2'
- '0.4.4.3'
- '0.4.4.4'
- '0.4.4.5'
- '0.4.4.6'
- '0.4.4.7'
- '0.5'
- '0.6'
author: Servant Contributors
latest: '0.6'
description-type: markdown
description: ! '# servant-server


  ![servant](https://raw.githubusercontent.com/haskell-servant/servant/master/servant.png)


  This library lets you *implement* an HTTP server with handlers for each endpoint
  of a servant API, handling most of the boilerplate for you.


  ## Getting started


  We''ve written a [tutorial](http://haskell-servant.github.io/tutorial/) guide that
  introduces the core types and features of servant. After this article, you should
  be able to write your first servant webservices, learning the rest from the haddocks''
  examples.


'
license-name: BSD3
