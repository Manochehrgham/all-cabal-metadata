homepage: http://haskell-servant.github.io/
changelog-type: markdown
hash: 95fcc0ca11fbc84a6b2b3af919e0f244d05110b158c0cf64c67294f251cb19e2
test-bench-deps:
  warp: -any
  exceptions: -any
  either: -any
  bytestring: -any
  wai: -any
  bytestring-conversion: -any
  filemanip: -any
  base: ==4.*
  hspec: ==2.*
  text: -any
  filepath: -any
  network: ! '>=2.6'
  parsec: -any
  doctest: -any
  servant-server: -any
  servant: -any
  hspec-wai: -any
  mtl: -any
  wai-extra: -any
  transformers: -any
  temporary: -any
  QuickCheck: -any
  string-conversions: -any
  http-types: -any
  aeson: -any
  directory: -any
maintainer: alpmestan@gmail.com
synopsis: A family of combinators for defining webservices APIs and serving them
changelog: ! "0.4.1\n-----\n* Bump attoparsec upper bound to < 0.14\n* Bump wai-app-static
  upper bound to < 3.2\n* Bump either upper bound to < 4.5\n\n0.4\n---\n* `Delete`
  now is like `Get`, `Post`, `Put`, and `Patch` and returns a response body\n* Add
  a `RouteMismatch` constructor for arbitrary HTTP response codes (https://github.com/haskell-servant/servant-server/pull/22)\n*
  Add support for the `Patch` combinator\n* Support for `Accept`/`Content-type` headers
  and for the content-type aware combinators in *servant-0.4*\n* Export `toApplication`
  from `Servant.Server` (https://github.com/haskell-servant/servant-server/pull/29)\n*
  Support other Monads than just `EitherT (Int, String) IO` (https://github.com/haskell-servant/servant-server/pull/21)\n*
  Make methods return status code 204 if they return () (https://github.com/haskell-servant/servant-server/issues/28)\n*
  Add server support for response headers\n* Use `ServantErr` instead of `(Int,String)`
  in `EitherT` handlers\n* Add `errXXX` functions for HTTP errors with sensible default
  reason strings\n* Add `enter` function for applying natural transformations to handlers\n\n0.2.4\n-----\n*
  Added support for matrix parameters, see e.g. http://www.w3.org/DesignIssues/MatrixURIs.html\n*
  Add support for serializing based on Accept header\n  (https://github.com/haskell-servant/servant-server/issues/9)\n*
  Ignore trailing slashes\n  (https://github.com/haskell-servant/servant-server/issues/5)\n\n\n0.2.3\n-----\n\n*
  Fix consuming request body issue\n  (https://github.com/haskell-servant/servant/issues/3)\n*
  Make code sample in Servant.Server complete\n"
basic-deps:
  warp: ! '>=3.0 && <3.2'
  either: ! '>=4.3 && <4.5'
  bytestring: ! '>=0.10 && <0.11'
  wai: ==3.0.*
  split: ! '>=0.2 && <0.3'
  base: ! '>=4.7 && <5'
  text: ==1.2.*
  filepath: ! '>=1'
  servant-server: -any
  servant: ==0.4.*
  network-uri: ! '>=2.6 && <2.7'
  mtl: ! '>=2 && <3'
  mmorph: ! '>=1'
  attoparsec: ! '>=0.12 && <0.14'
  transformers: ! '>=0.3 && <0.5'
  string-conversions: ! '>=0.3 && <0.5'
  system-filepath: ! '>=0.4 && <0.5'
  http-types: ! '>=0.8 && <0.9'
  wai-app-static: ! '>=3.0 && <3.2'
  aeson: ! '>=0.7 && <0.10'
  safe: ! '>=0.3 && <0.4'
all-versions:
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.2.4'
- '0.4.0'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.4.3.1'
- '0.4.4'
- '0.4.4.1'
author: Alp Mestanogullari, SÃ¶nke Hahn, Julian K. Arni
latest: '0.4.4.1'
description-type: markdown
description: ! '# servant-server


  ![servant](https://raw.githubusercontent.com/haskell-servant/servant/master/servant.png)


  This library lets you *implement* an HTTP server with handlers for each endpoint
  of a servant API, handling most of the boilerplate for you.


  ## Tutorial


  We''ve written a [tutorial](http://haskell-servant.github.io/tutorial/)  that introduces
  the core types and features of servant.


  ## Repositories and Haddocks


  - The core [servant](http://github.com/haskell-servant/servant/tree/master/servant)
  package - [docs](http://hackage.haskell.org/package/servant)

  - Implementing an HTTP server for a webservice API with [servant-server](http://github.com/haskell-servant/servant/tree/master/servant-server)
  - [docs](http://hackage.haskell.org/package/servant-server)

  - (Haskell) client-side function generation with [servant-client](http://github.com/haskell-servant/servant/tree/master/servant-client)
  - [docs](http://hackage.haskell.org/package/servant-client)

  - (Javascript) client-side function generation with [servant-jquery](http://github.com/haskell-servant/servant/tree/master/servant-jquery)
  - [docs](http://hackage.haskell.org/package/servant-jquery)

  - API docs generation with [servant-docs](http://github.com/haskell-servant/servant/tree/master/servant-docs)
  - [docs](http://hackage.haskell.org/package/servant-docs)

'
license-name: BSD3
