homepage: https://github.com/dmjio/servant-swagger
changelog-type: ''
hash: 150a56a6bf87fefa07c5b353fa382edbf30847961009590ca6bdcee32f8305d3
test-bench-deps:
  base: ==4.*
  time: -any
  hspec: -any
  text: -any
  servant-swagger: -any
  servant: -any
  lens: -any
  swagger2: -any
  aeson-qq: -any
  aeson: -any
maintainer: djohnson.m@gmail.com
synopsis: Generate Swagger specification for your servant API.
changelog: ''
basic-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  unordered-containers: -any
  text: -any
  servant: -any
  lens: -any
  swagger2: -any
  aeson: -any
  http-media: -any
all-versions:
- '0.0.0.0'
- '0.0.0.1'
- '0.1'
author: David Johnson
latest: '0.1'
description-type: markdown
description: ! "<h1 align=\"center\">\n    <a href=\"https://github.com/dmjio/servant-swagger\">\n
  \       servant-swagger\n    </a>\n    <br/>\n    <a href=\"http://hackage.haskell.org/package/servant-swagger\">\n
  \     <img alt=\"Hackage\" src=\"https://img.shields.io/hackage/v/servant-swagger.svg\"
  />\n    </a>\n</h1>\n\n<p align=\"center\">\n  This project converts <a href=\"https://github.com/haskell-servant/servant\">servant</a>
  APIs into Swagger 2.0 conforming JSON.\n</p>\n\n<p align=\"center\">\n  <img src=\"http://s16.postimg.org/rndz1wbyt/servant.png\"
  />\n</p>\n\n<hr>\n\nGiven the following `servant` API, `servant-swagger` generates
  the following json.\n\n### [Input](example/File.hs)\n\n```haskell\n{-# LANGUAGE
  DataKinds                  #-}\n{-# LANGUAGE DeriveGeneric              #-}\n{-#
  LANGUAGE GeneralizedNewtypeDeriving #-}\n{-# LANGUAGE OverloadedStrings          #-}\n{-#
  LANGUAGE TypeOperators              #-}\nmodule Main where\n\nimport Control.Lens\nimport
  Data.Aeson\nimport qualified Data.ByteString.Lazy.Char8 as BL8\nimport Data.Proxy\nimport
  Data.Swagger\nimport GHC.Generics\nimport Servant\nimport Servant.Swagger\n\n--
  Types\ndata Todo = Todo\n  { created     :: Int\n  , description :: String\n  }
  deriving (Show, Eq, Generic)\n\ninstance ToJSON Todo\n\nnewtype TodoId = TodoId
  String deriving (FromText, Generic)\n\n-- API\ntype API = \"todo\" :> Capture \"id\"
  TodoId :> Get '[JSON] Todo\n\n-- Swagger Doc\nswagDoc :: Swagger\nswagDoc = toSwagger
  (Proxy :: Proxy API)\n  & info.infoTitle   .~ \"Todo API\"\n  & info.infoVersion
  .~ \"1.0\"\n  & info.infoDescription ?~ \"This is an API that tests servant-swagger
  support for a Todo\"\n  & info.infoLicense ?~ License \"MIT\" (Just (URL \"http://mit.com\"))\n\n--
  Documentation and annotations\ninstance ToParamSchema TodoId\n\ninstance ToSchema
  Todo where\n  declareNamedSchema proxy = do\n    (name, schema) <- genericDeclareNamedSchema
  defaultSchemaOptions proxy\n    return (name, schema\n      & schemaDescription
  ?~ \"This is some real Todo right here\"\n      & schemaExample ?~ toJSON (Todo
  100 \"get milk\"))\n\n-- Main, create swaggger.json\nmain :: IO ()\nmain = BL8.writeFile
  \"swagger.json\" (encode swagDoc)\n```\n\n### Output\n\n```json\n{\n   \"swagger\":\"2.0\",\n
  \  \"info\":{\n      \"version\":\"1.0\",\n      \"title\":\"Todo API\",\n      \"license\":{\n
  \        \"url\":\"http://mit.com\",\n         \"name\":\"MIT\"\n      },\n      \"description\":\"This
  is an API that tests servant-swagger support for a Todo\"\n   },\n   \"definitions\":{\n
  \     \"Todo\":{\n         \"example\":{\n            \"created\":100,\n            \"description\":\"get
  milk\"\n         },\n         \"required\":[\n            \"created\",\n            \"description\"\n
  \        ],\n         \"type\":\"object\",\n         \"description\":\"This is some
  real Todo right here\",\n         \"properties\":{\n            \"created\":{\n
  \              \"maximum\":9223372036854775807,\n               \"minimum\":-9223372036854775808,\n
  \              \"type\":\"integer\"\n            },\n            \"description\":{\n
  \              \"type\":\"string\"\n            }\n         }\n      }\n   },\n
  \  \"paths\":{\n      \"/todo/{id}\":{\n         \"get\":{\n            \"responses\":{\n
  \              \"404\":{\n                  \"description\":\"id not found\"\n               },\n
  \              \"200\":{\n                  \"schema\":{\n                     \"$ref\":\"#/definitions/Todo\"\n
  \                 },\n                  \"description\":\"\"\n               }\n
  \           },\n            \"produces\":[\n               \"application/json\"\n
  \           ],\n            \"parameters\":[\n               {\n                  \"required\":true,\n
  \                 \"in\":\"path\",\n                  \"name\":\"id\",\n                  \"type\":\"string\"\n
  \              }\n            ]\n         }\n      }\n   }\n}\n```\n\n## Try it
  out\n\nAll generated swagger specifications can be interactively viewed on [Swagger
  Editor](http://editor.swagger.io/).\n\nReady-to-use specification can be served
  as JSON and interactive API documentation\ncan be displayed using [Swagger UI](https://github.com/swagger-api/swagger-ui).\n\nMany
  Swagger tools, including server and client code generation for many languages, can
  be found on\n[Swagger's Tools and Integrations page](http://swagger.io/open-source-integrations/).\n\n##
  FAQ\n- Q: How is this project different from the `swagger` package on `hackage`
  ?\n  - A: This package is based on the latest Swagger 2.0 API\n\n## Contributing\n\nWe
  are happy to receive bug reports, fixes, documentation enhancements, and other improvements.\n\nPlease
  report bugs via the [github issue tracker](https://github.com/dmjio/servant-swagger/issues).\n\n"
license-name: BSD3
