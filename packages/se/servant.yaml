changelog-type: ''
hash: b9f6399d21ba876a4e30cb8e48cb040a972fe82dbac93c62691dc6eae530c25b
test-bench-deps:
  bytestring: -any
  filemanip: -any
  base: ==4.*
  hspec: ==2.*
  text: -any
  url: -any
  parsec: -any
  doctest: -any
  servant: -any
  quickcheck-instances: -any
  attoparsec: -any
  QuickCheck: -any
  string-conversions: -any
  aeson: -any
synopsis: A family of combinators for defining webservices APIs
changelog: ''
basic-deps:
  bytestring: ==0.10.*
  bytestring-conversion: ==0.3.*
  case-insensitive: ! '>=1.2'
  base: ! '>=4.7 && <5'
  text: ! '>=1 && <2'
  network-uri: ! '>=2.6'
  attoparsec: ! '>=0.12'
  string-conversions: ! '>=0.3 && <0.4'
  http-types: ==0.8.*
  aeson: ! '>=0.7'
  http-media: ! '>=0.4 && <0.7'
all-versions:
- '0.1'
- '0.2'
- '0.2.1'
- '0.2.2'
- '0.4.0'
latest: '0.4.0'
description-type: haddock
description: ! 'A family of combinators for defining webservices APIs and serving
  them


  You can learn about the basics in this <http://haskell-servant.github.io/tutorial
  tutorial>.


  <https://github.com/haskell-servant/servant-server/blob/master/example/greet.hs
  Here>''s a runnable example, with comments, that defines a dummy API and

  implements a webserver that serves this API, using the <http://hackage.haskell.org/package/servant-server
  servant-server> package.


  <https://github.com/haskell-servant/servant/blob/master/servant/CHANGELOG.md CHANGELOG>'
