homepage: https://github.com/ncrashed/servant-auth-token-api#readme
changelog-type: markdown
hash: 1ebfbdeb0b498bc20506e169f53b29769a00fe7e1a6ef00bf539ab4a448bf6a6
test-bench-deps: {}
maintainer: ncrashed@gmail.com
synopsis: Servant based API for token based authorisation
changelog: ! '0.1.1.0

  =======


  * `PagedList` schema name now contains names of parameters.'
basic-deps:
  servant-docs: ! '>=0.7 && <0.9'
  base: ! '>=4.7 && <5'
  text: ! '>=1.2 && <2'
  servant-swagger: ! '>=1.0 && <2'
  servant: ! '>=0.7 && <0.9'
  aeson-injector: ! '>=1.0.3 && <1.1'
  lens: ! '>=4.13 && <5'
  swagger2: ! '>=2.0 && <=3'
  aeson: ! '>=0.11 && <0.12'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.1.0'
- '0.1.2.0'
author: NCrashed
latest: '0.1.2.0'
description-type: markdown
description: ! '# servant-auth-token-api


  [![Build Status](https://travis-ci.org/NCrashed/servant-auth-token-api.svg?branch=master)](https://travis-ci.org/NCrashed/servant-auth-token-api)


  The package provides abstract RESTful API for token based authorisation using [servant](http://haskell-servant.readthedocs.io/en/stable/).
  It contains only generic types and [servant-swagger](https://hackage.haskell.org/package/servant-swagger)
  instances. You may be interested in server/client side implementations:


  - [servant-auth-token](https://github.com/NCrashed/servant-auth-token) - server
  side implementation using SQL subdomain of [persistent](http://hackage.haskell.org/package/persistent).


  - servant-auth-token-client (not yet published) - client side implementation using
  [GHCJS](https://github.com/ghcjs/ghcjs) and [reflex-dom](https://hackage.haskell.org/package/reflex-dom)


  Also you can explore [swagger documentation](https://ncrashed.github.io/servant-auth-token-api/swagger-ui)
  for the API and view [markdown version of docs](https://github.com/NCrashed/servant-auth-token-api/blob/gh-pages/docs.markdown).'
license-name: BSD3
