homepage: https://github.com/well-typed/cborg
changelog-type: markdown
hash: 8aa537710e1c5eb6bcee49eb73177c2a3a14ac3d3613e2c722dd3030624e9563
test-bench-deps:
  cereal: ! '>=0.5.2.0 && <0.6'
  serialise: -any
  bytestring: ! '>=0.10.4 && <0.11'
  base: ! '>=4.6 && <5.0'
  time: ==1.4.*
  base64-bytestring: ! '>=1.0 && <1.1'
  unordered-containers: ! '>=0.2 && <0.3'
  text: ! '>=1.1 && <1.3'
  cborg: -any
  filepath: ! '>=1.0 && <1.5'
  criterion: ! '>=1.0 && <1.2'
  array: ! '>=0.4 && <0.6'
  containers: ==0.5.*
  quickcheck-instances: ! '>=0.3.12 && <0.4'
  tar: ! '>=0.4 && <0.6'
  binary: ! '>=0.7 && <0.9'
  store: ==0.4.*
  ghc-prim: ! '>=0.3 && <0.6'
  old-locale: -any
  zlib: ! '>=0.5 && <0.7'
  tasty-quickcheck: ! '>=0.8 && <0.9'
  hashable: ! '>=1.2 && <2.0'
  tasty-hunit: ! '>=0.9 && <0.10'
  base16-bytestring: ! '>=0.1 && <0.2'
  cereal-vector: ! '>=0.2 && <0.3'
  tasty: ! '>=0.11 && <0.12'
  deepseq: ! '>=1.0 && <1.5'
  scientific: ! '>=0.3 && <0.4'
  QuickCheck: ! '>=2.9 && <2.10'
  half: ! '>=0.2.2.3 && <0.3'
  pretty: ! '>=1.0 && <1.2'
  aeson: ! '>=0.7 && <1.2'
  vector: ! '>=0.10 && <0.13'
  directory: ! '>=1.0 && <1.4'
maintainer: duncan@community.haskell.org, ben@smart-cactus.org
synopsis: A binary serialisation library for Haskell values.
changelog: ! '# Revision history for serialise


  ## 0.1.0.0  -- YYYY-mm-dd


  * First version. Released on an unsuspecting world.

'
basic-deps:
  bytestring: ! '>=0.10.4 && <0.11'
  base: ! '>=4.6 && <5.0'
  time: ! '>=1.4 && <1.5'
  unordered-containers: ! '>=0.2 && <0.3'
  text: ! '>=1.1 && <1.3'
  cborg: ==0.1.*
  array: ! '>=0.4 && <0.6'
  containers: ! '>=0.5 && <0.6'
  ghc-prim: ! '>=0.3 && <0.6'
  old-locale: -any
  hashable: ! '>=1.2 && <2.0'
  half: ! '>=0.2.2.3 && <0.3'
  primitive: ! '>=0.5 && <0.7'
  vector: ! '>=0.10 && <0.13'
all-versions:
- '0.1.0.0'
author: Duncan Coutts
latest: '0.1.0.0'
description-type: haddock
description: ! 'This package (formerly @binary-serialise-cbor@) provides pure, efficient

  serialization of Haskell values directly into @ByteString@s for storage or

  transmission purposes. By providing a set of type class instances, you can

  also serialise any custom data type you have as well.


  The underlying binary format used is the ''Concise Binary Object

  Representation'', or CBOR, specified in RFC 7049. As a result,

  serialised Haskell values have implicit structure outside of the

  Haskell program itself, meaning they can be inspected or analyzed

  with custom tools.'
license-name: BSD3
