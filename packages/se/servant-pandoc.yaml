homepage: ''
changelog-type: text
hash: 7f73980e553e702d868bb63e20b10d3352fcf3b9b04713089d493d25da2f621d
test-bench-deps: {}
maintainer: Ivan.Miljenovic@gmail.com
synopsis: Use Pandoc to render servant API documentation
changelog: ! '- 0.4.1.4


  Supports servant-docs 0.11.  Changed behaviour means that this release

  can no longer support older versions.


  New maintainer: Ivan Miljenovic


  - 0.4.1.3


  Updated dependencies for http-media, pandoc-types and servant-docs.


  - 0.4.1.2


  Explicit import list for lens to hopefully avoid dependency problems.


  - 0.4.1.1


  Modify version bounds


  - 0.4.1


  Put end points in canonical order.


  - 0.4


  Update for servant 0.4


  - 0.1.0.2


  Fix breaking interface change from servant-docs 0.3


  - 0.1.0.1


  Fix trailing "," when rendering list of values


  - 0.1


  * Initial release

'
basic-deps:
  servant-docs: ==0.11.*
  bytestring: ! '>=0.10 && <0.11'
  case-insensitive: ! '>=0.2 && <1.3'
  base: ! '>=4.7 && <5'
  unordered-containers: ! '>=0.2 && <0.3'
  text: ! '>=1.2 && <1.3'
  pandoc-types: ! '>=1.12 && <1.18'
  lens: ! '>=4.9 && <5'
  string-conversions: ! '>=0.1 && <0.5'
  http-media: ! '>=0.6 && <0.8'
all-versions:
- '0.1'
- '0.1.0.1'
- '0.1.0.2'
- '0.4.0'
- '0.4.1'
- '0.4.1.1'
- '0.4.1.2'
- '0.4.1.3'
- '0.4.1.4'
author: Matthew Pickering, Ivan Miljenovic
latest: '0.4.1.4'
description-type: markdown
description: ! "There are two ways in which to use this module.\n\nThe first is to
  use the renderer directly with the pandoc API. A very\nsimple program to render
  the API documentation as a mediawiki document\nmight look as follows.\n\n```\n import
  Text.Pandoc import Servant.Docs.Pandoc import Servant.Docs\n import Data.Default
  (def)\n\n myApi :: Proxy MyAPI myApi = Proxy\n\n writeDocs :: API -\\> IO () writeDocs
  api = writeFile \"api.mw\"\n (writeMediaWiki def (pandoc api))\n```\n\nThe second
  approach is to use `makeFilter` to make a filter which can be\nused directly with
  pandoc from the command line. This filter will just\nappend the API documentation
  to the end of the document. Example usage\n\n```\n-- api.hs\nmain :: IO ()\nmain
  = makeFilter (docs myApi)\n\n> pandoc -o api.pdf --filter=api.hs manual.md\n````\n"
license-name: MIT
