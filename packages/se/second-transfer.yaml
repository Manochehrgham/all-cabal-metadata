homepage: https://www.httptwo.com/second-transfer/
changelog-type: markdown
hash: 86e19348ae80bbaddf91a42de7b808f1677ac5fd3bda7cf85c68aab95156b97d
test-bench-deps:
  exceptions: ! '>=0.8 && <0.9'
  bytestring: ! '>=0.10.4.0'
  http2: -any
  stm: ! '>=2.3'
  base: ! '>=4.7 && <=4.9'
  time: ! '>=1.5.0 && <1.8'
  unordered-containers: -any
  text: ! '>=1.2 && <1.3'
  clock: ! '>=0.4'
  SafeSemaphore: ! '>=0.10'
  network: ! '>=2.6 && <2.7'
  second-transfer: -any
  conduit: ! '>=1.2.4'
  HUnit: ! '>=1.2 && <1.5'
  pqueue: ! '>=1.3.0'
  containers: ! '>=0.5.5'
  lens: ! '>=4.7'
  binary: ! '>=0.7.1.0'
  hashtables: ! '>=1.2 && <1.3'
  hslogger: ! '>=1.2.6'
  network-uri: ! '>=2.6 && <2.7'
  hashable: ! '>=1.2'
  base16-bytestring: ! '>=0.1.1'
  attoparsec: ! '>=0.12'
  transformers: ! '>=0.3 && <=0.5'
  deepseq: ! '>=1.4.1'
maintainer: alcidesv@zunzun.se
synopsis: Second Transfer HTTP/2 web server
changelog: ! "- 0.7.1.0 :\n    * A few important memory leaks got fixed\n    * Changed
  I/O interface to live in IOCallbacks\n    * Working now around congestion window.\n\n-
  0.6.1.0 :\n    * Improved documentation.\n    * Improved ALPN negotiation handling.\n
  \   * Messages with a body are now handled by the HTTP/1.1 speaking part of this\n
  \     library.\n\n- 0.6.0.0 :\n    * Changed the interface to provide more information
  to and from workers\n    * Implemented HTTP/2 push\n    * Upgraded dependencies
  to 1.0. for http2 package\n    * Extended channel interface in such a way that latency
  is reduced, as a result,\n      the test suite is completely broken. Please wait
  for 0.6.0.1 release.\n\n- 0.5.5.1 :\n    * Restricted HTTP2 package version.\n    *
  Fixes #2\n\n- 0.5.5.0 :\n    * Made HeaderEditor a Monoid instance\n    * Trying
  to WINDOW_UPDATE an unexistent stream aborts the session, as it should\n\n- 0.5.4.0
  :\n    * Added the type HTTP500PrecursorException and corresponding test\n    *
  Improved test suite so that requests can be simulated a little bit more easily\n
  \   * Re-export type Headers from module HTTPHeaders\n\n- 0.5.3.2 :\n    * Added
  this changelog.\n    * Fixed the lower limit for the time package.\n    * Enforce
  first frame being a settings frame when receiving.\n    * Added a couple of tests.\n"
basic-deps:
  exceptions: ! '>=0.8 && <0.9'
  bytestring: ! '>=0.10.4'
  http2: ! '>=1.0.2'
  stm: ! '>=2.3'
  base: ! '>=4.7 && <=4.9'
  time: ! '>=1.5.0 && <1.8'
  text: ! '>=1.2 && <1.3'
  clock: ! '>=0.4'
  SafeSemaphore: ! '>=0.10'
  network: ! '>=2.6 && <2.7'
  conduit: ! '>=1.2.4 && <1.3'
  pqueue: ! '>=1.3.0'
  containers: ! '>=0.5.5'
  lens: ! '>=4.7'
  binary: ! '>=0.7.1.0'
  hashtables: ! '>=1.2 && <1.3'
  hslogger: ! '>=1.2.6'
  network-uri: ! '>=2.6 && <2.7'
  hashable: ! '>=1.2'
  base16-bytestring: ! '>=0.1.1'
  attoparsec: ! '>=0.12'
  transformers: ! '>=0.3 && <=0.5'
  deepseq: ! '>=1.4.1'
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.3.0.2'
- '0.3.0.3'
- '0.3.0.4'
- '0.4.0.0'
- '0.5.0.0'
- '0.5.2.2'
- '0.5.3.1'
- '0.5.3.2'
- '0.5.4.0'
- '0.5.5.0'
- '0.5.5.1'
- '0.6.0.0'
- '0.6.1.0'
- '0.7.1.0'
author: Alcides Viamontes Esquivel
latest: '0.7.1.0'
description-type: markdown
description: ! "\nDeveloper README\n================\n\nIntroduction\n------------\n\nThis
  is an early-stage and very experimental library to create HTTP/2 servers\nusing
  Haskell.\n\nTo see the package docs, please check the Hackage page or\nthe file
  hs-src/SecondTransfer.hs.\n\nBuilding and installing\n-----------------------\n\nYou
  need Haskell GHC compiler installed (version 7.8.3 at least). You also\nneed OpenSSL
  1.0.2, since the ALPN feature and some very recent cypher-suites\nare needed by
  HTTP/2. this source distribution will try to find them at\ndirectory `/opt/openssl-1.0.2`,
  but you should be able to\nalter the options using `cabal configure`. This package
  uses Haskell's FFI to interface with OpenSSL.\n\nProvided that you have all the
  dependencies, you should be able to just do:\n\n    $ cabal install second-transfer\n\nRunning
  the tests\n-----------------\n\n    $ cabal test\n\n\nDebugging complicated scenarios\n-------------------------------\n\nTo
  access full debugging capabilities, for example from the test suite, use the\nfollowing
  command from the project's directory:\n\n    $ cabal exec -- ghci -ihs-src -itests/tests-hs-src
  -itests/support -XCPP -Imacros/ dist/build/cbits/tlsinc.o\n\nExample\n-------\n\nThere
  is a very basic example at `tests/tests-hs-src/compiling_ok.hs`, and a somewhat
  more complicated one at\n`examples/attempt_bust`; that one shows how to do HTTP/2.0
  push from the library.\n\n\nDevelopment\n-----------\n\nUploading documentation
  (provided you have access to the package in Hackage):\n\n    $ ./hackage-upload-docs.sh
  second-transfer 0.5.4.0 <hackage-user> <hackage-password>\n"
license-name: BSD3
