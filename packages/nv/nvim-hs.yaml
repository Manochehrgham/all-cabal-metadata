homepage: https://github.com/saep/nvim-hs
changelog-type: markdown
hash: 4f73f386ad83a216430e3a1e122e06fa0c0a3508913923f55194f19be5f4a21b
test-bench-deps:
  cereal: -any
  streaming-commons: -any
  bytestring: -any
  cereal-conduit: -any
  dyre: -any
  stm: -any
  base: -any
  time: -any
  hspec: ==2.*
  text: -any
  filepath: -any
  process: -any
  network: -any
  lifted-base: -any
  parsec: -any
  conduit: -any
  data-default: -any
  HUnit: -any
  conduit-extra: -any
  containers: -any
  utf8-string: -any
  hslogger: -any
  messagepack: ! '>=0.4'
  nvim-hs: -any
  mtl: ! '>=2.2.1 && <2.3'
  transformers: -any
  optparse-applicative: -any
  QuickCheck: ! '>=2.6'
  hspec-discover: -any
  resourcet: -any
  template-haskell: -any
  directory: -any
maintainer: woozletoff@gmail.com
synopsis: Haskell plugin backend for neovim
changelog: ! "# 0.0.2\n\n* Add handling for special command options\n\n  This breaks
  code that used `command` or `command'` to export\n  functionality. You should replace
  the options with a list\n  of `CommandOptions`.\n\n  An export like `$(command'
  foo) def { cmdSync = Async }` must be redefined\n  to `$(command' foo) [CmdSync
  Async]`.\n\n# 0.0.1\n\n* Usable prototype implementation\n"
basic-deps:
  cereal: -any
  streaming-commons: -any
  bytestring: -any
  cereal-conduit: -any
  dyre: -any
  stm: -any
  base: ==4.*
  time: -any
  text: -any
  monad-control: -any
  filepath: -any
  process: -any
  network: -any
  lifted-base: -any
  parsec: ==3.*
  conduit: -any
  data-default: -any
  conduit-extra: -any
  containers: -any
  utf8-string: -any
  hslogger: -any
  messagepack: ! '>=0.4'
  nvim-hs: -any
  mtl: ! '>=2.2.1 && <2.3'
  transformers-base: -any
  transformers: -any
  optparse-applicative: -any
  resourcet: -any
  template-haskell: -any
  directory: -any
all-versions:
- '0.0.1'
- '0.0.2'
author: Sebastian Witte
latest: '0.0.2'
description-type: haddock
description: ! 'This package provides a plugin provider for neovim. It allows you
  to write

  plugins for one of the great editors of our time in the best programming

  language of our time! ;-)


  You should find all the documentation you need inside the "Neovim" module. All

  other modules are considered internal, so don''t be annoyed if using things

  from there may break your code.


  If you spot any errors or if you have great ideas, feel free to open an issue

  on github.'
license-name: Apache-2.0
