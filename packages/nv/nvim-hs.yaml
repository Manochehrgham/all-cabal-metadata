homepage: https://github.com/neovimhaskell/nvim-hs
changelog-type: markdown
hash: e466089482206746708e48124231aead3ab12def38916555f3f8ba8cff6b1207
test-bench-deps:
  foreign-store: -any
  exceptions: -any
  cereal: -any
  streaming-commons: -any
  bytestring: -any
  cereal-conduit: -any
  setenv: ! '>=0.1.1.3'
  dyre: -any
  stm: -any
  base: ! '>=4.6 && <5'
  time: -any
  hspec: ==2.*
  text: -any
  filepath: -any
  process: -any
  network: -any
  lifted-base: -any
  parsec: ! '>=3.1.9'
  conduit: -any
  data-default: -any
  HUnit: -any
  conduit-extra: -any
  containers: -any
  utf8-string: -any
  hslogger: -any
  messagepack: ! '>=0.4'
  nvim-hs: -any
  mtl: ! '>=2.2.1 && <2.3'
  transformers-base: -any
  transformers: -any
  optparse-applicative: -any
  QuickCheck: ! '>=2.6'
  hspec-discover: -any
  resourcet: -any
  template-haskell: -any
  directory: -any
maintainer: woozletoff@gmail.com
synopsis: Haskell plugin backend for neovim
changelog: ! "# 0.0.4\n\n* Documentation received some love.\n\n* A few renames of
  repurposed internals.\n\n# 0.0.3\n\n* Debugging facilities for ghci have been added.
  Check out the\n  `Neovim.Debug` module! These few functions are very valuable to
  debug your\n  code or even the code of nvim-hs itself.\n\n* Startup code now has
  a special `Neovim` environment which has access to\n  some of the internals that
  may or may not be useful. This change allowed\n  the ConfigHelper plugin to be included
  as a normal, separable plugin.\n  Unfortunately, this potentially breaks the plugin
  startup code of some\n  existing plugins.\n\n* Neovim context is no longer a type
  synonym, but a newtype wrapper around\n  the previous type synonym with an added
  `ResourceT` wrapper. The functions\n  from `MonadReader` are now actually exported
  as those.\n\n  As a consequence, some of your code may break if you lack some specific\n
  \ instances which were auto-derived before. Send a PR or open a ticket to\n  resolve
  this.\n\n* Add handling for some kind of variadic arguments handling.\n\n  A command
  or function will be passed `Nothing` as it's\n  last arguments if the argument type
  is wrapped in `Maybe`\n  and the invocation on the side of neovim did not pass those\n
  \ arguments.\n\n# 0.0.2\n\n* Add handling for special command options\n\n  This
  breaks code that used `command` or `command'` to export\n  functionality. You should
  replace the options with a list\n  of `CommandOptions`.\n\n  An export like `$(command'
  foo) def { cmdSync = Async }` must be redefined\n  to `$(command' foo) [CmdSync
  Async]`.\n\n# 0.0.1\n\n* Usable prototype implementation\n"
basic-deps:
  foreign-store: -any
  exceptions: -any
  cereal: -any
  streaming-commons: -any
  bytestring: -any
  cereal-conduit: -any
  setenv: ! '>=0.1.1.3'
  dyre: -any
  stm: -any
  base: ! '>=4.6 && <5'
  time: -any
  text: -any
  monad-control: -any
  filepath: -any
  process: -any
  network: -any
  lifted-base: -any
  parsec: ! '>=3.1.9'
  conduit: -any
  data-default: -any
  conduit-extra: -any
  containers: -any
  utf8-string: -any
  hslogger: -any
  messagepack: ! '>=0.4'
  nvim-hs: -any
  mtl: ! '>=2.2.1 && <2.3'
  transformers-base: -any
  transformers: -any
  optparse-applicative: -any
  resourcet: -any
  template-haskell: -any
  directory: -any
all-versions:
- '0.0.1'
- '0.0.2'
- '0.0.3'
- '0.0.5'
author: Sebastian Witte
latest: '0.0.5'
description-type: haddock
description: ! 'This package provides a plugin provider for neovim. It allows you
  to write

  plugins for one of the great editors of our time in the best programming

  language of our time! ;-)


  You should find all the documentation you need inside the "Neovim" module.

  Most other modules are considered internal, so don''t be annoyed if using

  things from there may break your code!


  The following modules may also be of interest and they should not change

  their API: "Neovim.Quickfix"


  If you want to write unit tests that interact with neovim, "Neovim.Test"

  provides some useful functions for that.


  If you are keen to debug /nvim-hs/ or a module you are writing, take a look

  at the "Neovim.Debug" module.


  If you spot any errors or if you have great ideas, feel free to open an issue

  on github.'
license-name: Apache-2.0
