homepage: https://github.com/tmcdonell/nvvm
changelog-type: markdown
hash: e7259209ffb97c2c468e82fbffd087dcbb672fbe3bff33f513fd162d420fb283
test-bench-deps: {}
maintainer: Trevor L. McDonell <tmcdonell@cse.unsw.edu.au>
synopsis: FFI bindings to NVVM
changelog: ! '# Revision history for nvvm


  ## 0.7.5.1  -- 2016-11-08


  * Add support for Cabal-1.22


  ## 0.7.5.0  -- 2016-10-08


  * First version. Released on an unsuspecting world.


'
basic-deps:
  bytestring: -any
  base: ! '>=4.6 && <5'
  cuda: ! '>=0.7'
  template-haskell: -any
all-versions:
- '0.7.5.0'
- '0.7.5.1'
author: Trevor L. McDonell
latest: '0.7.5.1'
description-type: markdown
description: ! "Haskell FFI Bindings to NVVM\n============================\n\n[![Build
  status](https://travis-ci.org/tmcdonell/nvvm.svg?branch=master)](https://travis-ci.org/tmcdonell/nvvm)\n\nThe
  NVVM library compiles [NVVM IR][nvvm-ir-spec] (a subset of LLVM IR) into PTX code
  which can\nthen be executed on NVIDIA GPUs.\n\nIn contrast to the standard [NVPTX][nvptx-spec]
  target built in to the LLVM\ntoolchain, NVVM includes a set of proprietary optimisations
  which are otherwise\nonly available by compiling CUDA code with the `nvcc` compiler.
  On the other\nhand, the version of LLVM that NVVM is internally based on typically
  lags the\npublic release by several generations (years), so these secret optimisations
  may\nor may not be worthwhile to your application.\n\nThe resulting PTX code can
  be loaded onto the GPU and executed using the [cuda\npackage][hs-cuda].\n\nThe NVVM
  library is a compiler component available a part of the CUDA toolkit:\n\n  <https://developer.nvidia.com/cuda-toolkit>\n\nThe
  configure step will look for your CUDA installation in the standard places,\nand
  if the `nvcc` compiler is found in your `PATH`, relative to that.\n\n\n[nvptx-spec]:
  \    http://llvm.org/docs/NVPTXUsage.html\n[nvvm-ir-spec]:   http://docs.nvidia.com/cuda/nvvm-ir-spec/index.html\n[hs-cuda]:
  \       https://github.com/tmcdonell/cuda\n\n"
license-name: BSD3
