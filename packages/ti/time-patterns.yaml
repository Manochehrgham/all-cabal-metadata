changelog-type: ''
hash: 9cb363b554edbbd5a31f01076f37a894d54d7f89832e268506cda806df2220c2
test-bench-deps: {}
synopsis: Patterns for recurring events.
changelog: ''
basic-deps:
  base: ! '>=4.6 && <4.8'
  vector-space: ! '>=0.9 && <1.0'
  intervals: ! '>=0.7 && <0.8'
  lens: ! '>=3.9 && <4.8'
  thyme: ! '>=0.3 && <0.4'
all-versions:
- '0.1.0.2'
- '0.1.1.0'
- '0.1.2.0'
- '0.1.3.0'
- '0.1.3.1'
latest: '0.1.3.1'
description-type: haddock
description: ! 'This package contains a set of primitives and combinators for event
  patterns. Example:


  > >> import qualified Prelude as P

  > >> let sundays = every 2 sunday

  > >> let today = (YearMonthDay 2013 12 01)^.from gregorian

  > >> P.take 2 $ instancesFrom today sundays

  > [2013-12-08, 2013-12-22]


  See @Data.Time.Patterns@ for more examples.'
