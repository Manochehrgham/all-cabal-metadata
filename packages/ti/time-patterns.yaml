homepage: https://bitbucket.org/jfmueller/time-patterns
changelog-type: ''
hash: 07f750e2c52644f5d3c193c227bdbc496892bc7ac44ae35cd3f302654c3a57cd
test-bench-deps: {}
maintainer: j.mueller.11@ucl.ac.uk
synopsis: Patterns for recurring events.
changelog: ''
basic-deps:
  base: ! '>=4.6 && <5'
  vector-space: ! '>=0.9 && <1.0'
  intervals: ! '>=0.7 && <0.8'
  lens: ! '>=4 && <5'
  thyme: ! '>=0.3 && <0.4'
all-versions:
- '0.1.0.2'
- '0.1.1.0'
- '0.1.2.0'
- '0.1.3.0'
- '0.1.3.1'
- '0.1.3.2'
author: Jann MÃ¼ller, Moritz Kiefer
latest: '0.1.3.2'
description-type: haddock
description: ! 'This package contains a set of primitives and combinators for event
  patterns. Example:


  > >> import qualified Prelude as P

  > >> let sundays = every 2 sunday

  > >> let today = (YearMonthDay 2013 12 01)^.from gregorian

  > >> P.take 2 $ instancesFrom today sundays

  > [2013-12-08, 2013-12-22]


  See @Data.Time.Patterns@ for more examples.'
license-name: BSD3
