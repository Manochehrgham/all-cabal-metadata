homepage: https://github.com/jaspervdj/acme-cofunctor
changelog-type: ''
hash: a06a1cfb5204d1b12446f14c6c5401dd117c5722266ab3d37833e9907478b2d4
test-bench-deps: {}
maintainer: Jasper Van der Jeugt <m@jaspervdj.be>
synopsis: A Cofunctor is a structure from category theory dual to Functor
changelog: ''
basic-deps:
  base: ! '>=4 && <5'
all-versions:
- '0.1.0.0'
author: Jasper Van der Jeugt <m@jaspervdj.be>
latest: '0.1.0.0'
description-type: haddock
description: ! 'A ''Cofunctor'' is a structure from category theory dual to ''Functor''.


  A ''Functor'' is defined by the operation ''fmap'':


  > fmap :: (a -> b) -> (f a -> f b)


  This means that its dual must be defined by the following operation:


  > cofmap :: (b -> a) -> (f b -> f a)


  Since beginning his investigations, the author of this package has discovered

  that this pattern is /at least/ as commonly used as ''Functor''. In fact, many

  ubiquitous Haskell types (e.g. @[]@, ''Maybe'', @((->) a)@ turn out to have a

  ''Cofunctor'' instance.'
license-name: BSD3
