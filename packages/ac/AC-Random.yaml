changelog-type: ''
hash: 1dbece02aa85986741b63ed59aa8086a22fd91a640a35b3669a410fb4be932f1
synopsis: A pure Haskell PRNG.
changelog: ''
all-versions:
- '0.1'
latest: '0.1'
description-type: haddock
description: ! 'This is a psuedo-random number generator (PRNG). It is designed to

  replace the standard Haskell ''98 PRNG from the @random@ package. It

  has the following properties:


  * Nicer API than @random@. (Supports all sizes of @Int@ and

  @Word@, for example.)


  * Much faster than @random@. (In my tests, roughly 14x faster.)


  * Comparable quality to @random@. (Both libraries pass the \"Die

  Harder\" suite of statistical randomness tests. In other words,

  neither has any overly obvious pattern to the \"random\" numbers

  it produces. Both libraries pass Die Harder with similar scores.)


  * 100% Haskell ''98 code. No compiler-specific features. No

  external dependencies. Builds everywhere.


  * Pure functions and simple ADTs. No mutable state, no @IO@ monad.

  Simple API.


  The actual algorithm is a lag-4 Multiply With Carry (MWC)

  generator, using 32-bit arithmetic. (Should be fast on 32-bit and

  64-bit platforms.) If my algebra is correct, its period should be

  roughly 1.46 * 10^48. (By constrast, @random@ claims to have a

  period of only 2.30 * 10^18.)


  Note that this algorithm, by itself, is /not/ cryptographically

  secure.


  Changes:


  * Initial release.'
