changelog-type: markdown
hash: b6ad55fe5a1744f83dde34f0f7ad603313f28d30e0f3a41f8aaea4b0a955bc71
test-bench-deps:
  stm: -any
  base: ! '>=4 && <5'
  lifted-base: -any
  immortal: -any
  tasty-hunit: -any
  transformers: -any
  tasty: ! '>=0.8'
synopsis: Spawn threads that never die (unless told to do so)
changelog: ! 'CHANGES

  =======


  Version 0.2

  -----------


  * Pass a `Thread` handle to the thread itself

  * Add `mortalize`, `immortalize`

'
basic-deps:
  base: ! '>=4.5 && <5'
  monad-control: ! '>=0.3'
  lifted-base: ! '>=0.2'
  transformers-base: ! '>=0.4'
all-versions:
- '0.1'
- '0.2'
latest: '0.2'
description-type: markdown
description: ! "immortal\n========\n\nA small library to create threads that never
  die. This is useful e.g. for\nwriting servers.\n\n``` haskell\nimport qualified
  System.Immortal as Immortal\nimport Control.Concurrent (threadDelay)\nimport Control.Monad
  (forever)\n\nmain = do\n  -- start an immortal thread\n  _ <- Immortal.create $
  do\n    -- do stuff\n\n  -- in the main thread, sleep until interrupted\n  -- (e.g.
  with Ctrl-C)\n  forever $ threadDelay maxBound\n```\n"
