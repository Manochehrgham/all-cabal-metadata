changelog-type: ''
hash: f622a9dedea626ad74572132f455b14fb1bb4d1a103695cd8c8e792b2d5d23f4
synopsis: Generate code for importing directories automatically
changelog: ''
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.1.2.0'
- '0.1.2.1'
latest: '0.1.2.1'
description-type: haddock
description: ! 'This module helps to automatically generate code for importing all
  the haskell files from directories.


  = Synopsis


  For <https://www.haskell.org/cabal/ cabal> inited project, we customize @Setup.hs@
  file to generate the importing code.


  * Be sure to modify the @build-type@ field in the @.cabal@ file from @Simple@ to
  @Custom@.


  * Then modify the @main@ function in @Setup.hs@ to generate importing code by either
  header file or a module file.


  Setup.hs:


  > import Distribution.Simple

  > import System.Imports (writeImportsHeader, writeImportsModule)

  >

  > main = do

  >   writeImportsHeader "imports.header" "Export" "Some.Where" "Some/Where"

  >   -- or

  >   writeImportsModule "ImportAll.hs" "ImportAll" "Some.Where" "Some/Where"

  >

  >   defaultMain


  Target.hs: (by header)


  @

  &#123;\-\# LANGUAGE CPP \#\-&#125;

  module Target where


  #include "imports.header"


  func = Export.funcFromSomeWhere

  @


  Target.hs: (by module)


  @

  module Target where


  import qualified ImportAll


  func = ImportAll.funcFromSomeWhere

  @'
