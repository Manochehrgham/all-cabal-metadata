changelog-type: markdown
hash: d89a40558ad7fac3d47e5f2f7a2473d97209d86fd1cd573ee73335b4f4a5a34b
test-bench-deps:
  srcloc: -any
  base: ! '>=4 && <5'
  tasty-hunit: ! '>=0.9'
  regex-applicative: -any
  tasty: ! '>=0.10'
  deepseq: -any
  lexer-applicative: -any
synopsis: Simple lexer based on applicative regular expressions
changelog: ! 'Changelog

  =========


  1.0.0.1

  -------


  Signal a lexical error (instead of looping) when a regex does not consume any

  characters

'
basic-deps:
  srcloc: ! '>=0.5'
  base: ! '>=4.5 && <5'
  regex-applicative: ! '>=0.3.1'
all-versions:
- '1.0'
- '1.0.0.1'
- '1.1'
latest: '1.1'
description-type: markdown
description: ! 'Simple applicative lexer based on the article

  [Lexical analysis with parser combinators][1]

  and the [regex-applicative][2] library.


  [1]: https://ro-che.info/articles/2015-01-02-lexical-analysis>

  [2]: http://hackage.haskell.org/package/regex-applicative-0.3.1/docs/Text-Regex-Applicative.html

'
