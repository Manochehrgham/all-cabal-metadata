homepage: https://github.com/owensmurray/legion-discovery#readme
changelog-type: ''
hash: 788b1b9717e11a4236974379c64420f57fbde15232a59ce3c2240af097584f6f
test-bench-deps:
  base: -any
  legion-discovery: -any
maintainer: rick@owensmurray.com
synopsis: A discovery service based on Legion.
changelog: ''
basic-deps:
  warp: ! '>=3.2.8 && <3.3'
  bytestring: ! '>=0.10.6.0 && <0.11'
  wai: ! '>=3.2.1.1 && <3.3'
  SHA: ! '>=1.6.4.1 && <1.7'
  Cabal: ! '>=1.22.5.0 && <1.25'
  base: ==4.9.*
  data-default-class: ! '>=0.0.1 && <0.2'
  time: ! '>=1.5.0.1 && <1.7'
  canteven-http: ! '>=0.1.1.1 && <0.2'
  text: ! '>=1.2.2.1 && <1.3'
  scotty-format: ! '>=0.1.1 && <0.2'
  conduit: ! '>=1.2.7 && <1.3'
  canteven-log: ! '>=1.0.0.0 && <2.1'
  ekg: ! '>=0.4.0.11 && <0.5'
  graphviz: ! '>=2999.18.1.2 && <2999.19'
  containers: ! '>=0.5.6.2 && <0.6'
  binary: ! '>=0.7.5.0 && <0.9'
  monad-logger: ! '>=0.3.19 && <0.4'
  attoparsec: ! '>=0.13.1.0 && <0.14'
  wai-extra: ! '>=3.0.17 && <3.1'
  transformers: ! '>=0.4.2.0 && <0.6'
  legion: ! '>=0.8 && <0.9'
  scotty: ! '>=0.11.0 && <0.12'
  http-types: ! '>=0.9.1 && <0.10'
  aeson: ! '>=0.11.2.1 && <0.12'
  scotty-resource: ! '>=0.1.1.0 && <0.3'
  legion-extra: ! '>=0.1.0.3 && <0.2'
  legion-discovery: -any
all-versions:
- '0.2.1.0'
- '0.2.1.1'
- '0.2.2.0'
- '0.2.2.1'
- '0.2.2.2'
author: Rick Owens
latest: '0.2.2.2'
description-type: markdown
description: ! "# legion-discovery\n\nA simple service discovery service based on
  Legion, that natively supports\nthe idea of interface versions, and the idea that
  clients may only be\ninterested in finding certain (compatible) versions of the
  services they\nare looking for.\n\nThe initial motivation for this project is to
  act as a test driver for the\n[Legion](https://github.com/owensmurray/legion#readme)
  framework. Since the\nstatus of that framework is still experimental, the status
  of this service is\nalso experimental.\n\n- [API](#api)\n    - [`POST /v1/ping/:serviceId/:version`](#post-v1pingserviceidversion)\n
  \   - [`GET /v1/services/:serviceId`](#get-v1servicesserviceid)\n    - [`GET /v1/services/:serviceId/:versionRange`](#get-v1servicesserviceidversionrange)\n
  \   - [`GET /v1/graph`](#get-v1graph)\n- [Content Types](#content-types)\n    -
  [`application/vnd.legion-discovery.instance-list+json`](#applicationvndlegion-discoveryinstance-listjson)\n
  \   - [`application/vnd.legion-discovery.ping-request+json`](#applicationvndlegion-discoveryping-requestjson)\n\n##
  API\n\n### `POST /v1/ping/:serviceId/:version`\n\nRegister a service. Registration
  expires in 30 seconds.\n\n- Request\n    - Content-Type: [`application/vnd.legion-discovery.ping-request+json`](#applicationvndlegion-discoveryping-requestjson)\n-
  Response `204 No Content`: indicates a successful registration.\n\n### `GET /v1/services/:serviceId`\n\nReturns
  all current instances of a service, regardless of version.\n\n- Response `200 Ok`\n
  \   - Content-Type: [`application/vnd.legion-discovery.instance-list+json`](#applicationvndlegion-discoveryinstance-listjson)\n\n\n###
  `GET /v1/services/:serviceId/:versionRange`\n\nReturns the service instances that
  match the requested version range. The\nversion range syntax is the same as what
  cabal understands\n(e.g. `>= 0.1 && < 0.2`). You are really going to want to make
  sure and url\nencode this segment of the url.\n\n- Response `200 Ok`\n    - Content-Type:
  [`application/vnd.legion-discovery.instance-list+json`](#applicationvndlegion-discoveryinstance-listjson)\n\n###
  `GET /v1/graph`\n\nReturns a visualization of the service interactions. This endpoint
  supports\nmultiple content types via the `Accept` header.\n\n- Response `200 Ok`\n
  \   - Content-Type [`image/svg+xml`](https://www.w3.org/TR/SVG11/)\n    - Content-Type
  [`text/vnd.graphviz`](http://www.graphviz.org/content/dot-language)\n\n\n## Content
  Types\n\n### `application/vnd.legion-discovery.instance-list+json`\n\n    {\n        \"https://host1:8080\":
  {\n            \"version\": \"1.0.2.0\"\n        },\n        \"https://host2:8080\":
  {\n            \"version\": \"1.0.2.0\"\n        },\n        \"https://host3:8080\":
  {\n            \"version\": \"1.0.2.0\"\n        }\n    }\n\n### `application/vnd.legion-discovery.ping-request+json`\n\n
  \   {\n        \"serviceAddress\": \"https://host3:8080\"\n    }\n\n\n"
license-name: Apache-2.0
