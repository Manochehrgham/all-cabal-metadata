changelog-type: ''
hash: f532765dccd29a6228d674e9eb371b41bd9579ae6b9785fb083df96c25a5f1eb
synopsis: References which can be joined and on which lenses can be applied
changelog: ''
all-versions:
- '0.1'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.5'
- '0.2'
latest: '0.2'
description-type: haddock
description: ! 'The lensref package provides and interface an two implementation

  for references which can be joined and on which lenses can be applied.


  -The pure implementation is slow and has memory leaks but probably easier to follow.

  This is the reference implementation, so if the the other implementation

  differs this has the right behaviour.


  -The fast implementation is intended for real usage.


  Status:


  -The interface is getting stable. You can expect more functionality and minor changes
  on current functionality.


  -There are test cases for the first half of the interface.

  Both implementations fulfil the test cases.


  -The pure implementation is ready.


  -The fast implementation is much faster than the pure implementation,

  but it is far from being as fast as possible.

  Probably it also leaks memory.


  To see what is possible to do with lens references, look at the test cases in "Data.LensRef.Test"


  For more information visit the following links:


  -<http://www.haskell.org/haskellwiki/LGtk haskell.org wiki page>


  -<http://lgtk.wordpress.com/ Wordpress blog>


  -<https://github.com/divipp/lensref GitHub repository>


  -<http://hackage.haskell.org/package/lensref Haddock documentation (this page)>'
