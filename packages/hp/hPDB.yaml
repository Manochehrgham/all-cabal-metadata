homepage: https://github.com/BioHaskell/hPDB
changelog-type: text
hash: aaf8781bd924c24a9cefac60b4e3e9779dc4918e3b57e36cc4bf97081b31cb99
test-bench-deps: {}
maintainer: mjgajda@googlemail.com
synopsis: Protein Databank file format library
changelog: ! "-*-Changelog-*-\n\n1.2.0.2  Apr 2015\n\t* Update for zlib version 0.6.1.0.\n\n1.2.0.1
  \ Dec 2014\n\t* Relaxed upper bounds\n\n1.2.0  May 2014\n\t* Iterable 3.0\n\n1.1.1
  \ Jan 2014\n\t* Exposed PDBWritable class for all objects that can be written to
  PDB\n\tfile.\n\n1.1\tJan 2014\n\t* Octree building with Bio.PDB.Structure.Neighbours.\n\n0.9999.1
  Sep 2013\n\t* Removed most compilation options and replaced them with conditionals\n\ton
  library versions.\n\n0.9999  Sep 2013\n\t* Parallel parsing.\n\t* Change of Iterable
  interface from imap -> itmap etc.\n\n0.99   Sep 2013\n\t* First public release.\n"
basic-deps:
  bytestring: -any
  Octree: ! '>=0.5'
  base: ! '>=4.0 && <4.9'
  text: ! '>=0.11.1.13'
  AC-Vector: -any
  mmap: -any
  tagged: ! '>=0.7'
  containers: -any
  ghc-prim: -any
  zlib: -any
  mtl: -any
  iterable: ! '>=3.0'
  parallel: ! '>=3.0.0.0'
  deepseq: -any
  QuickCheck: ! '>=2.5.0.0'
  template-haskell: -any
  vector: -any
  directory: -any
all-versions:
- '0.99'
- '0.999'
- '0.9999'
- '0.9999.1'
- '1.0'
- '1.1'
- '1.1.1'
- '1.1.2'
- '1.2.0'
- '1.2.0.1'
- '1.2.0.2'
- '1.2.0.3'
author: Michal J. Gajda
latest: '1.2.0.3'
description-type: markdown
description: ! "hPDB\n====\nHaskell PDB file format parser.\n\n[![Build Status](https://api.travis-ci.org/BioHaskell/hPDB.svg?branch=master)](https://travis-ci.org/BioHaskell/hPDB)\n[![Hackage](https://budueba.com/hackage/hPDB)](https://hackage.haskell.org/package/hPDB)\n\n\nProtein
  Data Bank file format is a most popular format for holding biomolecule data.\n\nThis
  is a very fast parser:\n\n - below 7s for the largest entry in PDB - 1HTQ which
  is over 70MB\n - as compared with 11s of RASMOL 2.7.5,\n - or 2m15s of BioPython
  with Python 2.6 interpreter.\n\nIt is aimed to not only deliver event-based interface,
  but also a high-level data structure for manipulating data in spirit of BioPython's
  PDB parser. \n\nDetails on official releases are on [Hackage](https://hackage.haskell.org/package/hPDB)\n\nThis
  package is also a part of [Stackage](http://www.stackage.org/package/hPDB) - a stable
  subset of Hackage.\n\nProjects for the future:\n------------------------\n\nPlease
  let me know if you would be willing to push the project further.\n\nIn particular
  one may considering these features:\n\n* Migrate out of `text-format`, since it
  gives portability trouble, and slows things down when printing.\n* Migrate from
  `AC-Vector` to another vector library:\n    - `vector-space`\n    - or `linear`\n*
  Use `lens` to facilitate access to the data structures.\n    - torsion angles within
  protein/RNA chain.\n* Add Octree to the default data structure (with automatic update.)\n*
  Write a combinator library for generic fast parsing.\n* Checking whether GHC 7.8
  improved efficiency of fixed point arithmetic,\nsince PDB coordinates have dynamic
  range of just ~2^20 bits, with smallest\nstep of 0.001.\n* Implement basic spatial
  operations of RMS superposition (with SVD),\naffine transform on a substructure.\n*
  Class-based wrappers showing Structure-Model-Chain-Residue-Atom interface\nwith
  possible wrapping of Repa/Accelerate arrays for fast computation.\n\n"
license-name: BSD3
