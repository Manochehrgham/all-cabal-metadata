changelog-type: ''
hash: b942d26e9bc37fbf0c8096a0e6401d139ee911dcb3a5a5506b47d7ba4cd4e952
synopsis: An implementation of the Twofish Symmetric-key cipher.
changelog: ''
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.3.1'
- '0.3.2'
latest: '0.3.2'
description-type: haddock
description: ! 'Implements the Twofish symmetric block cipher, designed by:

  Bruce Schneier, John Kelsey, Doug Whiting, David Wagner, Chris Hall,

  and Niels Ferguson.


  As well, this module includes some generic definitions for

  ciphers and cipher-block-chaining mode in the Data.Cipher

  module.  In the future, these should probably either be

  moved to their own package, or all of this should be merged

  into the Crypto package.


  Acknowledgments:


  Dominic Steinitz, Caylee Hogg and Thomas DuBuisson for their work

  on the Crypto package, upon which this package depends.


  Stephen Tetley for his advice and code examples provided on

  the Haskell-Beginners mailing list in response to a question

  I had, which helped me to create a transformer version of the

  Cbc monad. (now deprecated in favor of the CBC definitions in

  crypto-api)'
