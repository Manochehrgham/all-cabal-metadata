changelog-type: ''
hash: cb38fdd5077e31ce87820efd2269b8afe6166067c7be5661f3254a8344629206
synopsis: Emulation of subkinds and subkind polymorphism
changelog: ''
all-versions:
- '0.0.0.0'
- '0.0.1.0'
- '0.0.1.1'
- '0.0.1.2'
- '0.0.1.4'
- '0.0.1.5'
latest: '0.0.1.5'
description-type: haddock
description: ! 'Subkinds are the kind-level analog to subtypes. A kind denotes a set
  of types, and a

  subkind of some base kind denotes a subset of the base kind&#x2019;s set of types.

  Haskell has no support for subkinds and subkind polymorphism. However, this package

  can be used to emulate subkinds of kind&#xA0;@*@ and subkind variables.


  To define a new subkind, the user declares a type that represents the subkind, and

  instantiates some classes. Afterwards, the user can declare types to be of that

  subkind and universally quantify over the inhabitants of the subkind. Since subkinds

  are represented by types, type-level polymorphism can be used to emulate kind-level

  polymorphism.


  For detailed information, please refer to Section&#xA0;6 of the paper

  /Generic Record Combinators with Static Type Checking/.'
