changelog-type: ''
hash: dab6344267acb9f7ed31ff9e33a527c0cc24d716258e4d9e85538ef57846ae45
synopsis: A Haskell client for the Riak decentralized data store
changelog: ''
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.3.0.1'
- '0.3.0.2'
- '0.3.1.0'
- '0.3.2.0'
- '0.3.2.1'
- '0.4.0.0'
- '0.4.1.0'
- '0.4.1.1'
- '0.5.0.0'
- '0.6.0.0'
- '0.6.0.1'
- '0.7.0.1'
- '0.7.0.2'
- '0.7.0.3'
- '0.7.2.0'
- '0.7.2.1'
latest: '0.7.2.1'
description-type: haddock
description: ! 'A Haskell client library for the Riak decentralized data

  store, designed for efficiency, ease of use, and flexibility.  Uses

  the Riak protocol buffers API for speed.


  This library is organized to allow a tradeoff between power

  and ease of use.  If you would like a different degree of

  automation with storage and conflict resolution, you may want to

  use one of the following modules (ranked from easiest to most

  tricky to use):


  [Network.Riak] JSON for storage, automatic conflict resolution.

  This is the easiest module to work with.


  [Network.Riak.JSON] JSON for storage, manual conflict resolution.


  [Network.Riak.Value.Resolvable] More complex (but still automatic)

  storage, automatic conflict resolution.


  [Network.Riak.Value] More complex (but still automatic) storage,

  manual conflict resolution.


  [Network.Riak.Basic] manual storage, manual conflict resolution.

  This is the most demanding module to work with, as you must encode

  and decode data yourself, and handle all conflict resolution

  yourself.'
