homepage: http://github.com/grwlf/vkhs
changelog-type: markdown
hash: 9531a1df71cfb2deba42bcc5065111bb41aab795267ecf0b2fdefe890a0c8a04
test-bench-deps: {}
maintainer: grrwlf@gmail.com
synopsis: Provides access to Vkontakte social network via public API
changelog: ! 'TODO

  ----


  * Decrypt ''RepeatedForm'' errors

  * Show capchas to users if required

  * Support simplified runhaskell-style scripting



  Version 1.7.1

  -------------


  * Support setting IDv2 tags for downloaded audio files

  * CLI: Fix ''call'' command output

  * CLI: Fix ''music'' command naming



  Version 1.6.0

  -------------


  * Use coroutine-based engine, offering smooth error handling

  * Use pipes-http as network backend


'
basic-deps:
  http-client: -any
  bytestring: -any
  case-insensitive: -any
  split: -any
  base: ! '>=4.6 && <5'
  data-default-class: -any
  time: -any
  aeson-pretty: -any
  text: -any
  clock: -any
  filepath: -any
  parsec: -any
  containers: -any
  regexpr: -any
  pipes: -any
  utf8-string: -any
  http-client-tls: -any
  pipes-http: -any
  network-uri: -any
  mtl: -any
  taglib: -any
  pretty-show: -any
  optparse-applicative: -any
  tagsoup: -any
  http-types: -any
  aeson: -any
  vector: -any
  directory: -any
all-versions:
- '0.0.1'
- '0.0.2'
- '0.0.3'
- '0.1.0'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.1.4'
- '0.1.5'
- '0.1.6'
- '0.2.0'
- '0.3.0'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.5.0'
- '0.5.1'
- '0.5.2'
- '0.5.3'
- '0.5.4'
- '0.5.5'
- '0.5.6'
- '0.5.7'
- '1.6.0'
- '1.6.1'
- '1.6.2'
- '1.6.3'
- '1.6.4'
- '1.7.0'
- '1.7.1'
author: Sergey Mironov
latest: '1.7.1'
description-type: markdown
description: ! "VKHS\n====\n\nVKHS provides access to [Vkontakte][1] social network,
  popular mainly in Russia.\nLibrary can be used to login into the network as a standalone
  application (OAuth\nimplicit flow as they call it). Having the access token, it
  is possible to call\nvarious API methods to query audio files or retrieve wall messages.
  For now,\nvkhs offers limited error detection and no captcha support.\n\nInstalling\n==========\n\nIn
  order to install VKHS, type:\n\n    $ cabal update\n    $ cabal install VKHS\n\nNote,
  that VKHS uses curlhs and should be linked with libcurl.so. Normally,\ncabal handles
  it without problems.\n\nVKQ\n===\n\nVKQ is a command line tool which demonstrates
  API usage. It can be used for\nlogging in, downloading music and reading wall messages.\n\n\nLog
  in\n------\n\nHere is an example session: Login first\n\n    ]$ vkq login user@mail.org
  pass123\n    d8a41221616ef5ba19537125dc0349bad9d529fa15314ad765911726fe98b15185ac41a7ca2c62f3bf4b9\n\nVKQ
  returns three values. First is a access token which is required to execute\nfuture
  API requests. VKQ reads it from VKQ\\_ACCESS\\_TOKEN environment variable so\nwe
  have to set it up\n\n    $ export VKQ_ACCESS_TOKEN=d785932b871f096bd73aac6a35d7a7c469dd788d796463a871e5beb5c61bc6c96788ec2\n\nDownload
  audio\n--------------\n\nNow, lets list first 10 audio files I have:\n\n    $ vkq
  music -l | head -n 10\n    910727_456939044 http://cs1-29v4.vk-cdn.net/p36/d36d0fac4baf0d.mp3
  Алёнушка 1989 муз Никиты Богословского - ст Александра Коваленкова\n    910727_456939043
  http://cs1-35v4.vk-cdn.net/p7/2629cc1c9e82d7.mp3 Первое апреля\n    910727_456939042
  http://cs5078.vk.me/u39450508/audios/b65093a7caea.mp3 Травы травы травы не успели
  от росы серебрянной согнуться и такие нежные напевы почему-то прямо в сердце льются\n
  \   910727_456939041 http://cs1-35v4.vk-cdn.net/p12/423bca91340edc.mp3 Moving On\n
  \   910727_456939038 http://cs1-37v4.vk-cdn.net/p5/23c658ff1d9a43.mp3  Не для меня
  придёт весна\n    910727_456939037 http://cs1-17v4.vk-cdn.net/p4/e67571789b026e.mp3
  Каждый выбирает для себя\n    910727_456939034 http://cs536114.vk.me/u262757964/audios/8b0e36ee4ad5.mp3
  Black Fortress Kings Bounty Dark Side OST\n    910727_456939031 http://cs613118.vk.me/u911727/audios/7bd0a650905e.mp3
  Вокализ минус пример\n    910727_456939040 http://cs611628.vk.me/u911727/audios/d5a8eff365aa.mp3
  \ Без названия\n    910727_456939028 http://cs536217.vk.me/u64604046/audios/a4ab2075af94.mp3
  The Extasy of Gold\n\nOk, the link can be used to download the file using wget,
  but vkq offers\nsome renaming options, so lets use the latter instead:\n\n    $
  vkq music -o . 910727_456939043 910727_456939031\n    910727_456939043\n    Polite
  Dance Song\n    ./The Bird And The Bee - Polite Dance Song.mp3\n    910727_456939031\n
  \   L'estasi Dell'oro (The Ecstasy Of Gold)\n    ./Ennio Morricone - Lestasi Delloro
  The Ecstasy Of Gold.mp3\n\nPolite dance song and Ecstasy of gold mp3s will appear
  in the current folder.\n\nCustom API calls\n----------------\n\nvkq allows user
  to call arbitrary API method. The format is as follows:\n\n    Usage: vkq call [--verbose]
  [--req-per-sec N] [--interactive] [--appid APPID]\n                    [--user USER]
  [--pass PASS] [-a ACCESS_TOKEN] METHOD PARAMS\n\n\nFor example, lets call ausio.search
  method to get some Beatles records:\n\n    $ vkq call audio.search q=Beatles --pretty\n\n
  \     { \"response\": [\n        614751,\n        {\n            \"lyrics_id\":
  \"6604412\",\n            \"url\": \"http://cs1-36v4.vk-cdn.net/p16/59674dd8717db2.mp3?extra=k0s2ja3l6pq6aIDOEW5y5XUCs2--JLX9wZpzOT3iuSnZPR-DNhJSF075NUhICB_szMOKKlVJFFlqLlg691q6cKhwiGZgTRU1oAimXzXY396cfNAHnotc8--7w-0xnvoPK6qVoI8\",\n
  \           \"aid\": 85031440,\n            \"title\": \"Twist and Shout  \",\n
  \           \"genre\": 1,\n            \"owner_id\": 9559206,\n            \"duration\":
  156,\n            \"artist\": \"The Beatles\"\n        },\n    ...\n\n\nVKHS library\n============\n\nPlease,
  consult the source code of the vkq application.\n\n_Note: Outdated content below_\n\nFollowing
  example illustrates basic usage (please fill client\\_id, email and\npassword with
  correct values):\n\n    import Web.VKHS.Login\n    import Web.VKHS.API\n\n    main
  = do\n        let client_id = \"111111\"\n        let e = env client_id \"user@example.com\"
  \"password\" [Photos,Audio,Groups]\n        (Right at) <- login e\n\n        let
  user_of_interest = \"222222\"\n        (Right ans) <- api e at \"users.get\" [\n
  \             (\"uids\",user_of_interest)\n            , (\"fields\",\"first_name,last_name,nickname,screen_name\")\n
  \           , (\"name_case\",\"nom\")\n            ]\n        putStrLn ans\n\nclient\\_id
  is an application identifier, provided by vk.com. Users receive it\nafter registering
  their applications after SMS confirmation. Registration form is\nlocated [here](http://vk.com/editapp?act=create).\n\nInternally,
  library uses small curl-based HTTP automata and tagsoup for jumping\nover relocations
  and submitting various 'Yes I agree' forms. Curl .so library is\nrequired for vkhs
  to work. I am using curl-7.26.0 on my system.\n\nDebugging\n=========\n\n`RepatedForm`
  message means that VKHS tries to fill the web form with available\ndata, but the
  form appears again. Typically, that means that the password wa\ninvalid or captcha
  is required.\n\n_Note: Outdated content below_\n\nTo authenticate the user, vkhs
  acts like a browser: it analyzes html but fills\nall forms by itself instead of
  displaying pages. Of cause, would vk.com change\nhtml design, things stop working.\n\nTo
  deal with that potential problem, Ive included some debugging facilities:\nchanging:\n\nwriting\n\n
  \   (Right at) <- login e { verbose = Debug }\n\nwill trigger curl output plus html
  dumping to the current directory. Please,\nmail those .html to me if problem appears.\n\nLimitations\n===========\n*
  Implicit-flow authentication, see [documentation in\n  Russian](http://vk.com/developers.php?oid=-1&p=Авторизация_клиентских_приложений)\n
  \ for details\n\nLicense\n=======\n\nBSD3 license\n\nCopyright (c) 2014, Sergey
  Mironov <grrwlf@gmail.com>\n\n[1]: http://vk.com\n\n"
license-name: BSD3
