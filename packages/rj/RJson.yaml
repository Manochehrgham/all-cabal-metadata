changelog-type: ''
hash: 96dec78357f2a29bb2b5467db1ac68a2db3fbd963e1b37d04f88001c0b7189d6
synopsis: A reflective JSON serializer/parser.
changelog: ''
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.3.4'
- '0.3.5'
- '0.3.6'
- '0.3.7'
latest: '0.3.7'
description-type: haddock
description: ! 'See included README for some examples.

  This package uses the Scrap Your Boilerplate With Class approach

  to generics to implement a reflective JSON serializer and deserializer.

  Nested record types are automatically converted to corresponding

  JSON objects and vice versa. In both cases, various aspects of

  serializing and deserializing can be customized by implementing instances of

  type classes. Note that only Haskell 98 types can be

  serialized and deserialized, and that the use of strict constructors will lead

  to runtime errors with the current implemetation. Apart from the

  reflective stuff, the package also provides a straightforward

  Haskell representation of JSON data, together with a unicode-safe

  parser and a suitable implementation of ''show''. The code hasn''t yet

  been tested for performance; it might be quite slow.'
