changelog-type: ''
hash: 6b5cc11c6f8a640a4ae284bd5bd27357ae5848129def5b74de8e6350f933f174
test-bench-deps:
  base: ! '>=4.5 && <5'
  cabal-helper: -any
synopsis: Simple interface to Cabal's configuration state used by ghc-mod
changelog: ''
basic-deps:
  bytestring: -any
  Cabal: ! '>=1.14 && <1.23'
  base: ! '>=4.5 && <5'
  filepath: -any
  process: -any
  data-default: -any
  ghc-prim: -any
  mtl: -any
  transformers: -any
  temporary: -any
  template-haskell: -any
  directory: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.2.0.0'
- '0.3.0.0'
- '0.3.1.0'
- '0.3.2.0'
- '0.3.2.1'
- '0.3.3.0'
- '0.3.4.0'
latest: '0.3.4.0'
description-type: haddock
description: ! '@cabal-helper@ provides a library which wraps the internal use of
  executables

  to lift the restrictions imposed by linking against versions of GHC before

  @7.10@.


  @cabal-helper@ uses a wrapper executable to compile the actual cabal-helper

  executable at runtime while linking against an arbitrary version of

  Cabal. This runtime-compiled helper executable is then used to extract

  various bits and peices from Cabal\''s on disk state (dist/setup-config)

  written by it''s configure command.


  In addition to this the wrapper executable also supports installing any

  version of Cabal from hackage in case it cannot be found in any available

  package database. The wrapper installs these instances of the Cabal library

  into a private package database so as to not interfere with the user''s

  packages.


  Furthermore the wrapper supports one special case namely reading a state

  file for Cabal itself. This is needed as Cabal compiles it''s Setup.hs using

  itself and not using any version of Cabal installed in any package database.


  @cabal-helper@ can compile with @Cabal >= 1.14@ but requires @Cabal >= 1.16@

  at runtime.'
