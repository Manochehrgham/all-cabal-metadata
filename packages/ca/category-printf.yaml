homepage: ''
changelog-type: ''
hash: 9377a02f30f6ae87f341c4a8e84f58d2adaba59aea16d68a2f944c259e77fd99
test-bench-deps: {}
maintainer: cgibbard@gmail.com
synopsis: Highbrow approach to type-safe printf format specifications.
changelog: ''
basic-deps:
  bytestring: ! '>=0.10 && <0.11'
  base: ==4.*
  comonad: ! '>=5 && <5.1'
  text: ! '>=1.1 && <1.3'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
author: Cale Gibbard
latest: '0.1.0.1'
description-type: haddock
description: ! 'We use the co-Kleisli category for the comonad of

  functions out of a fixed monoid to implement a generic

  combinator library for type-safe format specifications.

  Works with pretty much anything that''s a monoid, with

  specific support for String, Text (strict/lazy), and

  ByteString (strict/lazy). Credit to Daniel Patterson

  for introducing me to something that looked just enough

  like it ought to be the composition for a category, and

  Ryan Trinkle for the IsString instance. :)'
license-name: BSD3
