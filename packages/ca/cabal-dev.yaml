changelog-type: ''
hash: eefa71fa1424dfa9e1c451a829d382a3462a96bc95a698fc258c27c4bcb1b953
test-bench-deps: {}
synopsis: Manage sandboxed Haskell build environments
changelog: ''
basic-deps:
  Cabal: ! '>=1.2 && <1.17'
  base: <5
  process: ! '>=1.0 && <1.2'
  Win32: ! '>=2.1 && <2.4'
all-versions:
- '0.7'
- '0.7.1'
- '0.7.2'
- '0.7.2.1'
- '0.7.3.1'
- '0.7.3.2'
- '0.7.4.0'
- '0.7.4.1'
- '0.8'
- '0.9'
- '0.9.1'
- '0.9.2'
latest: '0.9.2'
description-type: haddock
description: ! 'cabal-dev is a tool for managing development builds of

  Haskell projects. It supports maintaining sandboxed

  cabal-install repositories, and sandboxed ghc package

  databases.


  By default, it uses a cabal-dev directory under

  the current working directory as the sandbox.


  For most packages, just use @cabal-dev@ instead of

  @cabal@, and you will get a sandboxed build that

  will not install anything (even automatically installed

  dependencies) into the user or global ghc package

  databases.


  If your build depends on patched or unreleased libraries,

  you can add them to your sandboxed build environment by

  installing them to the sandbox directly:so


  > cd /path/to/dependency

  > cabal-dev install --sandbox=/path/to/sandbox


  Then build your library/application with the specified

  sandbox.



  Additional documentation can be found in the README.md on

  github:


  <http://github.com/creswick/cabal-dev/blob/master/README.md>'
