homepage: https://github.com/nixos/cabal2nix#readme
changelog-type: ''
hash: e6acae0371766401c55f4cba3bf2f40fb24ce76836d34343db59ee1c645fb55a
test-bench-deps:
  bytestring: -any
  ansi-wl-pprint: -any
  SHA: -any
  split: -any
  Cabal: ! '>1.24'
  base: <5
  text: -any
  language-nix: -any
  filepath: -any
  process: -any
  doctest: -any
  hackage-db: -any
  containers: -any
  lens: -any
  distribution-nixpkgs: -any
  transformers: -any
  optparse-applicative: -any
  deepseq: ! '>=1.4'
  pretty: ! '>=1.1.2'
  aeson: -any
  yaml: -any
  directory: -any
maintainer: Peter Simons <simons@cryp.to>
synopsis: Convert Cabal files into Nix build instructions.
changelog: ''
basic-deps:
  bytestring: -any
  monad-par: -any
  ansi-wl-pprint: -any
  SHA: -any
  split: -any
  Cabal: ! '>1.24'
  base: <5
  time: -any
  text: -any
  language-nix: -any
  monad-par-extras: -any
  filepath: -any
  process: -any
  hackage-db: -any
  containers: -any
  lens: -any
  distribution-nixpkgs: -any
  utf8-string: -any
  mtl: -any
  cabal2nix: -any
  transformers: -any
  optparse-applicative: -any
  deepseq: ! '>=1.4'
  pretty: ! '>=1.1.2'
  aeson: -any
  yaml: -any
  directory: -any
all-versions:
- '1.0'
- '1.1'
- '1.2'
- '1.3'
- '1.4'
- '1.5'
- '1.6'
- '1.7'
- '1.8'
- '1.9'
- '1.10'
- '1.11'
- '1.12'
- '1.13'
- '1.14'
- '1.15'
- '1.16'
- '1.17'
- '1.18'
- '1.19'
- '1.20'
- '1.21'
- '1.23'
- '1.24'
- '1.25'
- '1.26'
- '1.27'
- '1.28'
- '1.29'
- '1.30'
- '1.31'
- '1.32'
- '1.33'
- '1.34'
- '1.35'
- '1.37'
- '1.38'
- '1.39'
- '1.40'
- '1.41'
- '1.42'
- '1.43'
- '1.44'
- '1.45'
- '1.46'
- '1.47'
- '1.48'
- '1.49'
- '1.50'
- '1.51'
- '1.52'
- '1.53'
- '1.54'
- '1.55'
- '1.56'
- '1.57'
- '1.58'
- '1.59'
- '1.60'
- '1.61'
- '1.63'
- '1.64'
- '1.65'
- '1.66'
- '1.67'
- '1.68'
- '1.69'
- '1.70'
- '1.71'
- '1.72'
- '1.73'
- '2.0'
- '2.0.1'
- '2.0.2'
- '2.0.3'
- '2.0.4'
- '2.1'
- '2.1.1'
author: ! 'Peter Simons,

  Andres Loeh,

  Benno Fünfstück,

  Mateusz Kowalczyk,

  Mathijs Kwik,

  Michael Alan Dorman,

  Shea Levy,

  Dmitry Malikov,

  Eric Seidel,

  Nikolay Amiantov,

  Aycan iRiCAN,

  John Wiegley,

  Philipp Hausmann,

  Spencer Janssen,

  William Casarin,

  Adam Vogt,

  Bryan Gardiner,

  Corey O''Connor,

  Cray Elliott,

  Felix Kunzmann,

  Gabriel Ebner,

  Gergely Risko,

  John Albietz,

  John Chee,

  Jussi Maki,

  Mark Laws,

  Mark Wotton,

  Matvey Aksenov,

  Nicolas Rolland,

  Oliver Charles,

  Pascal Wittmann,

  Patrick John Wheeler,

  Raymond Gauthier,

  Renzo Carbonara,

  Sibi,

  Tanner Doshier,

  Tom Hunger,

  Viktar Basharymau,

  danbst,

  karsten gebbert,

  laMudri,

  Александр Цамутали'
latest: '2.1.1'
description-type: markdown
description: ! "Cabal2nix\n=========\n\n`cabal2nix` converts a single Cabal file into
  a single Nix build expression.\nFor example:\n\n    $ cabal2nix cabal://mtl\n    {
  mkDerivation, base, stdenv, transformers }:\n    mkDerivation {\n      pname = \"mtl\";\n
  \     version = \"2.2.1\";\n      sha256 = \"1icdbj2rshzn0m1zz5wa7v3xvkf6qw811p4s7jgqwvx1ydwrvrfa\";\n
  \     buildDepends = [ base transformers ];\n      homepage = \"http://github.com/ekmett/mtl\";\n
  \     description = \"Monad classes, using functional dependencies\";\n      license
  = stdenv.lib.licenses.bsd3;\n    }\n\n\nCabal files can be referred to using the
  magic URL `cabal://NAME-VERSION`,\nwhich will automatically download the file from
  Hackage. Alternatively, a\ndirect `http://host/path/pkg.cabal` URL can be provided,
  as well as a\n`file:///local/path/pkg.cabal` URI that doesn't depend on network
  access.\nHowever, if the source hash is not already in `cabal2nix`'s cache or provided\nusing
  the `--sha256` option, `cabal2nix` still needs to download the source\ncode to compute
  the hash, which obviously still causes network traffic. Run the\nutility with `--help`
  to see the complete list of supported command line flags.\n\nDetailed instructions
  how to use those generated files with Nix can be found at\nhttp://nixos.org/nixpkgs/manual/#users-guide-to-the-haskell-infrastructure.\n\n`cabal2nix`
  can also build derivations for projects from other sources than\nhackage. You only
  need to provide an URI that points to a cabal project. The\nmost common usecase
  for this is probably to generate a derivation for a project\non the local file system:\n\n
  \   $ cabal get mtl-2.2.1 && cd mtl-2.2.1\n    $ cabal2nix .\n    { mkDerivation,
  base, stdenv, transformers }:\n    mkDerivation {\n      pname = \"mtl\";\n      version
  = \"2.2.1\";\n      src = ./.;\n      buildDepends = [ base transformers ];\n      homepage
  = \"http://github.com/ekmett/mtl\";\n      description = \"Monad classes, using
  functional dependencies\";\n      license = stdenv.lib.licenses.bsd3;\n    }\n\nThis
  derivation will not fetch from hackage, but instead use the directory which\ncontains
  the derivation as the source repository.\n\n`cabal2nix` currently supports the following
  respository types:\n\n* directory\n* source archive (zip, tar.gz, ...) from http
  or https URL or local file.\n* git, mercurial, svn or bazaar repository\n\nHow to
  compile this package\n---------------------------\n\nThe `cabal2nix.cabal` file
  for this package is automatically generated by the\n`generate-cabal-file.hs` program.
  The easiest way to accomplish that is to run\n\n    nix-shell release.nix -A cabal2nix.ghc7102.x86_64-linux.env
  --run \"runhaskell generate-cabal-file.hs >cabal2nix.cabal\"\n\nwhere `x86_64-linux`
  should be replaced with whatever system ID is appropriate\nfor your local machine.
  Basically, `generate-cabal-file.hs` requires the\n[cartel](http://hackage.haskell.org/package/cartel)
  library and `git` to run.\n\nWith the Cabal file in place, this is a normal Haskell
  project that can be\ncompiled with `cabal-install`.\n\nUsers of Nix can build this
  package by running\n\n    nix-build release.nix -A cabal2nix.ghc7102.x86_64-linux\n\nwhere,
  again, `x86_64-linux` should be replaced with the appropriate value.\nThis gives
  you an executable at `result/bin/cabal2nix`. If you'd like to\ninstall the latest
  release version, then\n\n    nix-env -f \"<nixpkgs>\" -iA cabal2nix\n\nis the way
  to go.\n"
license-name: BSD3
