changelog-type: ''
hash: 8c9bbd370023117908538e5c4b83bb1e712b0acf724d7aa87afba1af747574f0
test-bench-deps:
  base: ! '>=4.5 && <4.9'
  hspec: -any
  parsec: ! '>=3.1.0 && <=3.2'
  parseerror-eq: -any
  base-compat: ! '>=0.4'
synopsis: Loads environment variables from dotenv files
changelog: ''
basic-deps:
  base: ! '>=4.5 && <4.9'
  process: -any
  parsec: ! '>=3.1.0 && <=3.2'
  base-compat: ! '>=0.4'
  optparse-applicative: ! '>=0.11 && <0.12'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.5'
- '0.1.0.6'
- '0.1.0.7'
- '0.1.0.8'
latest: '0.1.0.8'
description-type: haddock
description: ! '

  In most applications,

  <http://12factor.net/config configuration should be separated from code>.

  While it usually works well to keep configuration in the

  environment, there are cases where you may want to store

  configuration in a file outside of version control.


  "Dotenv" files have become popular for storing configuration,

  especially in development and test environments. In

  <https://github.com/bkeepers/dotenv Ruby>,

  <https://github.com/theskumar/python-dotenv Python> and

  <https://www.npmjs.com/package/dotenv Javascript> there are libraries

  to facilitate loading of configuration options from configuration

  files. This library loads configuration to environment variables for

  programs written in Haskell.


  To use, call `loadFile` from your application:


  > import Configuration.Dotenv

  > loadFile False "/my/dotenvfile"


  This package also includes an executable that can be used

  to inspect the results of applying one or more Dotenv files

  to the environment, or for invoking your executables with

  an environment after one or more Dotenv files is applied.


  See the <https://github.com/stackbuilders/dotenv-hs Github>

  page for more information on this package.'
