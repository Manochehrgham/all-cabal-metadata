homepage: https://github.com/tserduke/do-list
changelog-type: ''
hash: cfc1fd3fdfc00b58b67b73b33b83e739e7b350cf9e01702e40bfdf77d3adfd51
test-bench-deps:
  base: <5
  hspec: -any
  do-list: -any
maintainer: taras.serduke@gmail.com
synopsis: List construction with do notation
changelog: ''
basic-deps:
  base: <5
  criterion: -any
  dlist: -any
  do-list: -any
all-versions:
- '0.8.0'
author: Taras Serduke
latest: '0.8.0'
description-type: markdown
description: ! "# do-list\nDoList makes it easy to use do notation syntatic sugar
  for defining list structures.\n\n## Example\n```haskell\nmodule Main (main) where\n\nimport
  Criterion.Main\nimport Data.DoList (DoList, item, toList)\n\nmain :: IO ()\nmain
  = defaultMain $ toList $ do\n  doBench \"plus\"  $ whnf (2 +) (1 :: Int)\n  doBench
  \"minus\" $ whnf (2 -) (1 :: Int)\n\n-- Now we can define benchmarks with do notation.\ndoBench
  :: String -> Benchmarkable -> DoList Benchmark ()\ndoBench name = item . bench name\n```\n"
license-name: BSD3
