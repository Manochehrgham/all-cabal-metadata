homepage: https://github.com/futurice/haskell-tdigest#readme
changelog-type: ''
hash: 8fc05b3af8245b845a4d139f1e98b4ffdbc83e7fc2151928340a8f64313c0da3
test-bench-deps:
  tdigest: -any
  Chart: ! '>=1.8.1 && <1.9'
  mwc-random: ! '>=0.13.4.0 && <0.14'
  Chart-diagrams: ! '>=1.8.1 && <1.9'
  base: -any
  time: ! '>=1.4.2 && <1.8'
  filepath: ! '>=1.2'
  doctest: ! '>=0.11.1 && <0.12'
  semigroups: -any
  base-compat: -any
  binary: -any
  tasty-quickcheck: ! '>=0.8.4 && <0.9'
  statistics: ! '>=0.13.3.0 && <0.14'
  vector-algorithms: -any
  optparse-applicative: ! '>=0.12.1.0 && <0.14'
  tasty: ! '>=0.11.0.4 && <0.12'
  parallel: ! '>=3.2.0.6 && <3.3'
  deepseq: -any
  machines: ! '>=0.6.1 && <0.7'
  vector: -any
  bytes: -any
  directory: ! '>=1.0'
maintainer: Oleg Grenrus <oleg.grenrus@iki.fi>
synopsis: On-line accumulation of rank-based statistics
changelog: ''
basic-deps:
  base: ! '>=4.7 && <4.10'
  semigroups: ! '>=0.18.2 && <0.19'
  base-compat: ! '>=0.9.1 && <0.10'
  binary: ! '>=0.7.1.0 && <0.9'
  vector-algorithms: ! '>=0.7.0.1 && <0.8'
  deepseq: ! '>=1.3.0.2 && <1.5'
  reducers: ! '>=3.12.1 && <3.13'
  vector: ! '>=0.11 && <0.13'
all-versions:
- '0'
author: Oleg Grenrus <oleg.grenrus@iki.fi>
latest: '0'
description-type: markdown
description: ! '# tdigest


  A new data structure for accurate on-line accumulation of rank-based statistics
  such as quantiles and trimmed means.


  See original paper: ["Computing extremely accurate quantiles using t-digest"](https://github.com/tdunning/t-digest/blob/master/docs/t-digest-paper/histo.pdf)
  by Ted Dunning and Otmar Ertl


  ## Synopsis


  ```hs

  Î» *Data.TDigest > median (tdigest [1..1000] :: TDigest 3)

  Just 499.0090729817737

  ```


  ## Benchmarks



  Using 50M exponentially distributed numbers:


  - average: **16s**; incorrect approximation of median, mostly to measure prng speed

  - sorting using `vector-algorithms`: **33s**; using 1000MB of memory

  - sparking t-digest (using some `par`): **53s**

  - buffered t-digest: **68s**

  - sequential t-digest: **65s**


  ### Example histogram


  ```

  tdigest-simple -m tdigest -d standard -s 100000 -c 10 -o output.svg -i 34

  inkscape --export-png=example.png --export-dpi=80 --export-background-opacity=0
  --without-gui example.svg

  ```


  ![Example](https://raw.githubusercontent.com/futurice/haskell-tdigest/master/example.png)

'
license-name: BSD3
