changelog-type: markdown
hash: 6a05f58a782c24365df882812d647037dbc7e8a00a85aa80f7de3e0a0e433cc2
test-bench-deps:
  base: ! '>=4.8 && <4.9'
  ghc-typelits-natnormalise: ! '>=0.1'
  tasty-hunit: ! '>=0.9'
  tasty: ! '>=0.10'
synopsis: GHC typechecker plugin for types of kind GHC.TypeLits.Nat
changelog: ! "# Changelog for the [`ghc-typelits-natnormalise`](http://hackage.haskell.org/package/ghc-typelits-natnormalise)
  package\n\n## 0.2.1 *May 6th 2015*\n* Update `Eq` instance of `SOP`: Empty SOP is
  equal to 0\n\n## 0.2 *April 22nd 2015*\n* Finds more unifications:\n  * `(2 + a)
  ~ 5  ==>  [a := 3]`\n  * `(3 * a) ~ 0  ==>  [a := 0]`\n\n## 0.1.2 *April 21st 2015*\n*
  Don't simplify expressions with negative exponents\n\n## 0.1.1 *April 17th 2015*\n*
  Add workaround for https://ghc.haskell.org/trac/ghc/ticket/10301\n\n## 0.1 *March
  30th 2015*\n* Initial release\n"
basic-deps:
  ghc: ! '>=7.10 && <7.12'
  base: ! '>=4.8 && <5'
all-versions:
- '0.1'
- '0.1.1'
- '0.1.2'
- '0.2'
- '0.2.1'
latest: '0.2.1'
description-type: markdown
description: ! "# ghc-tynat-normalise\n\n[![Build Status](https://secure.travis-ci.org/christiaanb/ghc-typelits-natnormalise.png?branch=master)](http://travis-ci.org/christiaanb/ghc-typelits-natnormalise)\n[![Hackage](https://img.shields.io/hackage/v/ghc-typelits-natnormalise.svg)](https://hackage.haskell.org/package/ghc-typelits-natnormalise)\n[![Hackage
  Dependencies](https://img.shields.io/hackage-deps/v/ghc-typelits-natnormalise.svg?style=flat)](http://packdeps.haskellers.com/feed?needle=exact%3Aghc-typelits-natnormalise)\n\nA
  type checker plugin for GHC that can solve _equalities_ \nof types of kind `Nat`,
  where these types are either:\n\n* Type-level naturals\n* Type variables\n* Applications
  of the arithmetic expressions `(+,-,*,^)`.\n\nIt solves these equalities by normalising
  them to _sort-of_\n`SOP` (Sum-of-Products) form, and then perform a\nsimple syntactic
  equality.\n\nFor example, this solver can prove the equality between:\n\n```\n(x
  + 2)^(y + 2)\n```\n\nand\n\n```\n4*x*(2 + x)^y + 4*(2 + x)^y + (2 + x)^y*x^2\n```\n\nBecause
  the latter is actually the `SOP` normal form\nof the former.\n\nTo use the plugin,
  add\n\n```\n{-# OPTIONS_GHC -fplugin GHC.TypeLits.Normalise #-}\n```\n\nTo the header
  of your file.\n"
