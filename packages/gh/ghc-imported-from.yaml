homepage: https://github.com/carlohamalainen/ghc-imported-from
changelog-type: markdown
hash: f77d012b9e4c800c640df10c3216edb5f689c594eeab4533c0eac763284bf36f
test-bench-deps:
  ghc: -any
  ghc-mod: ! '>=4.1.1'
  Cabal: ! '>=1.18'
  base: <4.8
  hspec: -any
  syb: -any
  ghc-syb-utils: -any
  filepath: -any
  process: -any
  parsec: -any
  containers: -any
  ghc-paths: -any
  mtl: -any
  transformers: -any
  optparse-applicative: -any
  safe: -any
  directory: -any
maintainer: carlo@carlo-hamalainen.net
synopsis: Find the Haddock documentation for a symbol.
changelog: ! "2015-08-17 v0.2.0.7\n\n* Added a fall-back case when our resolved qualified
  name\n  does not match anything.\n\n2014-07-05 v0.2.0.6\n\n* Use optparse-applicative
  for argument parsing.\n* Allow digits and underscores in module names.\n\n2014-06-01
  v0.2.0.5\n\n* Version bound on ghc-mod.\n\n2014-05-22 v0.2.0.4\n\n* Speedup: factor
  out calls to getGhcOptionsViaCabalRepl.\n* Bug fix: filter out haskell module names
  from the cabal options list.\n\n2014-05-19 v0.2.0.3\n\n* Fixed test cases.\n* Added
  alternative heuristic for lookup.\n\n2014-05-16 v0.2.0.2\n\n* Catch GHC panics.\n*
  Verbose debug output.\n* Handle case where source file may not have a validly define
  module name\n  but parses correctly regardless. https://github.com/carlohamalainen/ghc-imported-from/issues/15\n\n2014-05-15
  v0.2.0.1\n\n* Link to changelog.md.\n\n2014-05-15 v0.2.0.0\n\n* Builds with GHC
  7.6.3 and 7.8.2.\n* Reduced dependencies on ghc-mod and Cabal internals.\n* GHC
  option discovery using a fake GHC binary.\n* Various tidyups via hlint.\n* Removed
  cabal constraints file.\n\n2014-05-02 v0.1.0.4\n\n* Fix for hashed directory in
  sandbox dist/build; see also\n  https://github.com/carlohamalainen/ghc-imported-from/issues/10\n\n2014-03-03
  v0.1.0.3\n\n* Fix build failure by pinning all package dependencies.\n\n2014-01-26
  v0.1.0.2\n\n* Use more of ghc-mod's API to set the correct GHC command\n  line arguments.\n\n2014-01-24
  v0.1.0.1\n\n* Change module layout to Language.Haskell.GhcImportedFrom\n  to comply
  with hackage.haskell.org guidelines.\n\n2014-01-21 v0.1.0.0\n\n* First version on
  hackage.haskell.org\n"
basic-deps:
  ghc: -any
  ghc-mod: ! '>=4.1.1'
  Cabal: ! '>=1.18'
  base: <4.8
  hspec: -any
  syb: -any
  ghc-syb-utils: -any
  filepath: -any
  process: -any
  parsec: -any
  containers: -any
  ghc-paths: -any
  mtl: -any
  transformers: -any
  optparse-applicative: -any
  ghc-imported-from: -any
  safe: -any
  directory: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.2.0.0'
- '0.2.0.1'
- '0.2.0.2'
- '0.2.0.3'
- '0.2.0.4'
- '0.2.0.5'
- '0.2.0.6'
- '0.2.0.7'
author: Carlo Hamalainen
latest: '0.2.0.7'
description-type: markdown
description: ! "# ghc-imported-from\n\nFor a given Haskell source file, determine
  the path to the Haddock documentation for a symbol at a particular line/col location.\n\nExample:
  on the file [src/Main.hs](https://github.com/carlohamalainen/ghc-imported-from/blob/master/src/Main.hs),\n\n
  \   ghc-imported-from haddock-url src/Main.hs Main getArgs 69 13\n\nsays\n\n    SUCCESS:
  file:///home/carlo/opt/ghc-7.6.3_build/share/doc/ghc/html/libraries/base-4.6.0.1/System-Environment.html\n\nsince
  the usage of ```getArgs``` at line 160, column 13, is from the ```System.Environment```
  module.\n\nDifficulties arise because some symbols are exported from a certain\npackage
  but defined in another, for example ```String``` is defined in\n```GHC.Base``` but
  is exported from the standard prelude, the module\n```Prelude```. There are other
  cases to deal with including qualified\nimports, selective imports, imports with
  hidden components, etc.\n\nPreference is given to any locally available Haddock
  documentation,\nand then to the generic url at hackage.org.\n\n## Beware\n\nYou
  may have to run\n\n    cabal build\n\nor\n\n    cabal repl\n\nin a project directory
  to sort out some of the ```dist/build/autogen```\nfiles. At the moment ```ghc-imported-from```
  has no functionality to\ndo this boot process automatically. To run ```cabal repl```
  you might need\nthe latest Cabal from [https://github.com/haskell/cabal](https://github.com/haskell/cabal).\n\nIf
  you see\n\n    <command line>: cannot satisfy -package hspec\n        (use -v for
  more information)\n\nthen you may need the hspec and/or doctest packages:\n\n    cabal
  install hspec doctest\n\nFeedback and pull requests most welcome!\n\n## Install\n\n###
  ghc-imported-from\n\nInstall into ```~/.cabal```:\n\n    git clone https://github.com/carlohamalainen/ghc-imported-from\n
  \   cd ghc-imported-from\n    cabal install\n\nOr, install into a sandbox:\n\n    git
  clone https://github.com/carlohamalainen/ghc-imported-from\n    cd ghc-imported-from\n
  \   ./build_in_sandbox.sh\n\nEither way, ensure that ```ghc-imported-from``` and
  ```fake-ghc-for-ghc-imported-from``` are in the current PATH.\n\n### Tests\n\nRun
  the tests using cabal:\n\n    cabal test\n\nIf the tests hang, check that your version
  of Cabal/cabal-install has this\nfix: https://github.com/haskell/cabal/issues/1810\n\n###
  ghcimportedfrom-vim\n\nFor Vim users,\nfollow the instructions at\n[https://github.com/carlohamalainen/ghcimportedfrom-vim](https://github.com/carlohamalainen/ghcimportedfrom-vim)\nto
  install the Vim plugin.\n\n### ghc-imported-from-el\n\nFor Emacs users, David Christiansen
  has written [ghc-imported-from-el](https://github.com/david-christiansen/ghc-imported-from-el).\n\n##
  Usage\n\nSee the ```tests``` subdirectory for some examples. Or load your favourite
  Haskell project and hit F4.\n\nOr watch the screencast (be sure to set 720p HD and
  then fullscreen):\n\n[https://www.youtube.com/watch?v=7yO_VGCWMu8](https://www.youtube.com/watch?v=7yO_VGCWMu8)\n\n##
  Notes\n\n```ghc-imported-from``` uses both GHC and ghc-pkg, which\naccept arguments
  in differing formats.  For example GHC takes\n```-package-db``` while ghc-pkg takes
  ```--package-db=```. For more\ndetails: http://www.vex.net/~trebla/haskell/sicp.xhtml\n\n##
  Debugging\n\nTo see the GHC options that have been automatically detected, change
  into your project's directory and run:\n\n    $ cd ~/ghc-imported-from\n    $ cabal
  repl --with-ghc=fake-ghc-for-ghc-imported-from\n    Preprocessing library ghc-imported-from-0.2.0.2...\n
  \   --interactive -fbuilding-cabal-package -O0 -outputdir dist/build -odir dist/build
  -hidir dist/build -stubdir dist/build -i -idist/build -i. -idist/build/autogen -Idist/build/autogen
  -Idist/build -optP-include -optPdist/build/autogen/cabal_macros.h -package-name
  ghc-imported-from-0.2.0.2 -hide-all-packages -no-user-package-db -package-db /home/user/ghc-imported-from/.cabal-sandbox/x86_64-linux-ghc-7.6.3-packages.conf.d
  -package-db dist/package.conf.inplace -package-id Cabal-1.16.0-c6e09e008cd04cf255c1ce0c59aba905
  -package-id base-4.6.0.1-8aa5d403c45ea59dcd2c39f123e27d57 -package-id containers-0.5.0.0-ab1dae9a94cd3cc84e7b2805636ebfa2
  -package-id directory-1.2.0.1-91a788fd88acd7f149f0f10f5f1e23f2 -package-id filepath-1.3.0.1-b12cbe18566fe1532a1fda4c85e31cbe
  -package-id ghc-7.6.3-18957ddbb817289f604552aa2da2e879 -package-id ghc-mod-4.1.0-a87501f2667239b3f0bef3e0f3753496
  -package-id ghc-paths-0.1.0.9-3817f31ae510ed3b58554933ea527b74 -package-id ghc-syb-utils-0.2.1.2-bf72c1e71339c52f0af404a12449c9d2
  -package-id mtl-2.2.0.1-ef91e0abcf7a4fb581ecb7fe83cdcba1 -package-id process-1.1.0.2-76e05340eb66705981411022731ca84a
  -package-id safe-0.3.4-ba52ca348aecad429ba90450e3aba4c4 -package-id syb-0.4.1-9469ffdd9c6a7ebbf035421c915a08ee
  -package-id transformers-0.4.1.0-42810d723884ebf2a2dd638e5b22e523 -XHaskell2010
  Language.Haskell.GhcImportedFrom Language.Haskell.GhcImportedFrom.UtilsFromGhcMod
  Language.Haskell.GhcImportedFrom.Types -Wall\n\n## Alternatives\n\nAs far as I know
  the only alternative is the ```fpco/hoogle-doc``` function in\n[https://www.fpcomplete.com/page/api](https://www.fpcomplete.com/page/api).
  Or try Ctrl-i\nin the web version of FP Complete.\n"
license-name: BSD3
