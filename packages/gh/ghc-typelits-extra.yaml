homepage: http://www.clash-lang.org/
changelog-type: markdown
hash: 0970b69c28fb46a6cd523d1ff50b303176404e9021f4a3428e360cd36c0cd644
test-bench-deps:
  base: ! '>=4.8 && <5'
  ghc-typelits-knownnat: ! '>=0.2'
  ghc-typelits-natnormalise: ! '>=0.4.1'
  ghc-typelits-extra: ! '>=0.1.1'
  tasty-hunit: ! '>=0.9'
  tasty: ! '>=0.10'
maintainer: christiaan.baaij@gmail.com
synopsis: Additional type-level operations on GHC.TypeLits.Nat
changelog: ! "# Changelog for the [`ghc-typelits-extra`](http://hackage.haskell.org/package/ghc-typelits-extra)
  package\n\n# 0.2 *August 19th 2016*\n* New type-level operations:\n  * `Max`: type-level
  `max`\n  * `Min`: type-level `min`\n  * `Div`: type-level `div`\n  * `Mod`: type-level
  `mod`\n  * `FLog`: floor of logBase\n  * `Log`: exact integer logBase (i.e. where
  `floor (logBase b x) ~ ceiling (logBase b x)` holds)\n  * `LCM`: type-level `lcm`\n*
  Fixes bugs:\n  * `CLog b 1` doesn't reduce to `0`\n\n## 0.1.3 *July 19th 2016*\n*
  Fixes bugs:\n  * Rounding error in `CLog` calculation\n\n## 0.1.2 *July 8th 2016*\n*
  Solve KnownNat constraints over CLog and GCD, i.e., KnownNat (CLog 2 4)\n\n## 0.1.1
  *January 20th 2016*\n* Compile on GHC 8.0+\n\n## 0.1 *October 21st 2015*\n* Initial
  release\n"
basic-deps:
  ghc: ! '>=7.10 && <8.2'
  base: ! '>=4.8 && <5'
  ghc-tcplugins-extra: ! '>=0.2'
  ghc-typelits-knownnat: ! '>=0.2 && <0.3'
  integer-gmp: ! '>=1.0 && <1.1'
  ghc-typelits-natnormalise: ! '>=0.5 && <0.6'
  singletons: ! '>=2.2 && <3'
  transformers: ! '>=0.4.2.0 && <0.6'
all-versions:
- '0.1'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.2'
author: Christiaan Baaij
latest: '0.2'
description-type: markdown
description: ! "# ghc-typelits-extra\n\n[![Build Status](https://secure.travis-ci.org/clash-lang/ghc-typelits-extra.png?branch=master)](http://travis-ci.org/clash-lang/ghc-typelits-extra)\n[![Hackage](https://img.shields.io/hackage/v/ghc-typelits-extra.svg)](https://hackage.haskell.org/package/ghc-typelits-extra)\n[![Hackage
  Dependencies](https://img.shields.io/hackage-deps/v/ghc-typelits-extra.svg?style=flat)](http://packdeps.haskellers.com/feed?needle=exact%3Aghc-typelits-extra)\n\nExtra
  type-level operations on GHC.TypeLits.Nat and a custom solver implemented\nas a
  GHC type-checker plugin:\n\n* `GHC.TypeLits.Extra.Max`: type-level [max](http://hackage.haskell.org/package/base-4.8.2.0/docs/Prelude.html#v:max)\n*
  `GHC.TypeLits.Extra.Min`: type-level [min](http://hackage.haskell.org/package/base-4.8.2.0/docs/Prelude.html#v:min)\n*
  `GHC.TypeLits.Extra.Div`: type-level [div](http://hackage.haskell.org/package/base-4.8.2.0/docs/Prelude.html#v:div)\n*
  `GHC.TypeLits.Extra.Mod`: type-level [mod](http://hackage.haskell.org/package/base-4.8.2.0/docs/Prelude.html#v:mod)\n*
  `GHC.TypeLits.Extra.FLog`: type-level equivalent of [integerLogBase#](https://hackage.haskell.org/package/integer-gmp/docs/GHC-Integer-Logarithms.html#v:integerLogBase-35-)\n
  \  .i.e. the exact integer equivalent to \"`floor (logBase x y)`\"\n* `GHC.TypeLits.Extra.CLog`:
  type-level equivalent of _the ceiling of_ [integerLogBase#](https://hackage.haskell.org/package/integer-gmp/docs/GHC-Integer-Logarithms.html#v:integerLogBase-35-)\n
  \  .i.e. the exact integer equivalent to \"`ceiling (logBase x y)`\"\n* 'GHC.TypeLits.Extra.Log':
  type-level equivalent of <https://hackage.haskell.org/package/integer-gmp/docs/GHC-Integer-Logarithms.html#v:integerLogBase-35-
  integerLogBase#>\n     where the operation only reduces when \"`floor (logBase b
  x) ~ ceiling (logBase b x)`\"\n* `GHC.TypeLits.Extra.GCD`: a type-level [gcd](http://hackage.haskell.org/package/base-4.8.2.0/docs/Prelude.html#v:gcd)\n*
  `GHC.TypeLits.Extra.LCM`: a type-level [lcm](http://hackage.haskell.org/package/base-4.8.2.0/docs/Prelude.html#v:lcm)\n"
license-name: BSD2
