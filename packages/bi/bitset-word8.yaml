homepage: https://github.com/nshimaza/bitset-word8#readme
changelog-type: markdown
hash: 16e6998b25769c954601f1da959b5f464c48d8d0a497cae6071c628fdff8c8c6
test-bench-deps:
  base: -any
  hspec: -any
  bitset-word8: -any
  QuickCheck: -any
maintainer: Naoto.Shimazaki@gmail.com
synopsis: Space efficient set of Word8 and some pre-canned sets useful for parsing
  HTTP
changelog: ! '## Bitset-word8 0.1.0.1


  * Minor modifications in documents.


  ## Bitset-word8 0.1.0.0


  * Initial release.

'
basic-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  th-lift-instances: -any
  containers: -any
  template-haskell: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
author: Naoto Shimazaki
latest: '0.1.0.1'
description-type: markdown
description: ! '# bitset-word8


  [![License: MIT](https://img.shields.io/badge/License-MIT-brightgreen.svg)](https://opensource.org/licenses/MIT)

  [![Build Status](https://travis-ci.org/nshimaza/bitset-word8.svg?branch=master)](https://travis-ci.org/nshimaza/bitset-word8)

  [![Hackage](https://img.shields.io/hackage/v/bitset-word8.svg?style=flat)](https://hackage.haskell.org/package/bitset-word8)


  Space efficient set of `Word8` and some pre-canned sets useful for parsing HTTP
  related `ByteString`.

  This package is intended to provide O(1) membership test on any subset of ASCII
  and Latin-1 character set

  in order to write efficient HTTP related parser.


  ### Creating your own set


  You can create your own set by `fromList`.


  ```haskell

  myCharSet :: BitSetWord8

  myCharSet = fromList [ ''Y'', ''y'', ''N'', ''n'' ]

  ```


  You can create pre-evaluated set using Template Haskell.


  ```haskell

  {-# LANGUAGE TemplateHaskell #-}

  import Language.Haskell.TH.Syntax (Lift, lift)


  myPreEvaluatedCharSet :: BitSetWord8

  myPreEvaluatedCharSet = $(lift myCharSet)

  ```


  ### Example Usage


  ```haskell

  import Data.Attoparsec.ByteString


  -- | Parse RFC7230 token.

  token :: Parser ByteString

  token = takeWhile1 (member rfc7230TChar)

  ```'
license-name: MIT
