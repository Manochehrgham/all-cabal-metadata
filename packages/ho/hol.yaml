homepage: ''
changelog-type: ''
hash: c437d84effcb5775bd25d4e16d6520a6857ff7eb79756b47be8b638c8b407a04
test-bench-deps:
  bytestring: ==0.9.*
  base: ! '>=4.0 && <5.0'
  text: ==0.11.*
  containers: ==0.5.*
  transformers: ==0.3.*
  QuickCheck: ! '>=2.4 && <2.5'
  pretty: ==1.1.*
maintainer: Joe Leslie-Hurd <joe@gilith.com>
synopsis: Higher order logic
changelog: ''
basic-deps:
  bytestring: ! '>=0.9 && <0.10'
  base: ! '>=4.0 && <5.0'
  text: ! '>=0.11 && <0.12'
  containers: ! '>=0.5 && <0.6'
  transformers: ! '>=0.3 && <0.4'
  pretty: ! '>=1.1 && <1.2'
all-versions:
- '1.0'
- '1.1'
author: Joe Leslie-Hurd <joe@gilith.com>
latest: '1.1'
description-type: markdown
description: ! "The hol package\n===============\n\nThe [hol package][] is a [Haskell][]
  library that implements a higher order logic kernel. It can read proof files in
  [OpenTheory][] format, and includes a pretty-printer compatible with the [standard
  theory library][].\n\nThis software is released under the [MIT License][].\n\nInstall\n-------\n\nInstalling
  the hol package requires [cabal][]:\n\n    git clone https://github.com/gilith/hol.git\n
  \   cd hol\n    cabal install\n\nTest\n----\n\nUse [cabal][] to run the test suite:\n\n
  \   cabal test\n\nProfile\n-------\n\nBefore starting, make sure the GHC system
  and the GHC text and transformers libraries are installed with profiling support.
  On a Debian system the following command installs them:\n\n     apt-get install
  ghc-prof libghc-text-prof libghc-transformers-prof\n\nNext use [cabal][] to install
  the other dependent libraries with profiling support:\n\n    cabal sandbox init\n
  \   cabal configure --enable-library-profiling --enable-profiling --enable-benchmarks\n
  \   cabal install --only-dependencies --enable-library-profiling\n\nBuild the hol
  package library and benchmark program:\n\n    cabal configure --enable-library-profiling
  --enable-profiling --enable-benchmarks\n    cabal build\n\nUse the [opentheory tool]
  to create a benchmark file:\n\n     opentheory info --article -o base.art base\n\nThen
  use [cabal][] to run the benchmark:\n\n    cabal bench\n\nThe time and memory allocation
  profile of the program can be viewed in text format:\n\n    less hol-profile.prof\n\nAlternatively
  the memory allocation profile can be viewed as a graph:\n\n    hp2ps -e8in -c hol-profile.hp\n
  \   ps2pdf hol-profile.ps\n    xpdf hol-profile.pdf\n\n[cabal]: https://www.haskell.org/cabal/
  \"Cabal\"\n[Haskell]: https://www.haskell.org/\n[hol package]: https://hackage.haskell.org/package/hol
  \"hol package\"\n[MIT License]: https://github.com/gilith/hol/blob/master/LICENSE
  \"MIT License\"\n[OpenTheory]: http://www.gilith.com/research/opentheory/ \"The
  OpenTheory project home page\"\n[opentheory tool]: http://www.gilith.com/software/opentheory/
  \"The opentheory tool\"\n[standard theory library]: http://opentheory.gilith.com/?pkg=base
  \"The OpenTheory standard theory library\"\n"
license-name: MIT
