homepage: https://github.com/glguy/irc-core
changelog-type: markdown
hash: 9a88e0ba6a116db4a27e308090ef06ad655fa1f38008ce9dd7fc983589c1709b
test-bench-deps:
  base: -any
  HUnit: ! '>=1.3 && <1.4'
  glirc: -any
maintainer: emertens@gmail.com
synopsis: Console IRC client
changelog: ! '# Revision history for glirc2


  ## 2.13


  * Add disconnect expansion, support expansions in connect-cmds

  * Add default expansion syntax `${var|default}`

  * Add support for multiple nicknames to try on connect

  * Add `ignores` section to configuration

  * Add `url-opener` section to configuration and `/url` command


  ## 2.12


  * Remove `tls-insecure` configuration option in favor of `tls: yes-insecure`

  * Implement fancy command placeholder rendering and argument parsing

  * Improved reconnect logic

  * Improved connection error messages


  ## 2.11


  * Add `M-S` to jump to previously focused window

  * Add `extra-highlights` section

  * Tab complete servernames in `/connect`

  * Add `/windows` command for listing active windows

  * Add `glirc_clear_window` C API procedure

  * Allow `process_message` callback to drop messages

  * Add optional network and channel arguments to `/clear` (intended to assist macros)

  * Automatically reconnect on ping timeout

  * Many commands will report message to client window on error


  ## 2.10


  * Fixes for multiline editing

  * Multiple, sequential kills all fill the same yank buffer


  ## 2.9


  * Dynamically loadable extensions

  * Implement Lua scripting extension

  * Enable support for batch messages

  * Grow metadata lines to the right


  ## 2.8


  * Support `vty-5.8`

  * Implement inital support for macros

  * Support `znc.in/self-message`


  ## 2.7


  * Switch to regex-tdfa (easier to install on macOS than text-icu)

  * Tab-complete starts with most recent nick

  * Add `/reload`

  * Add custom palette entry for self highlights

  * Add ability to set background colors and styles in palette


  ## 2.6


  * connect-cmds now use actual client commands instead of raw IRC messages. For example
  `msg user my message` or `join #mychannel`

  * Multiple lines can be held in the textbox at once. Pasting mutiple lines insert
  those lines into the textbox rather than sending them immediately.

  * Added `M-d` and `M-Enter` key bindings

  * Added `name` field to server configuration

  * Extract irc-core library again

  * Configurable self color


  ## 2.5


  * Add facilities for hooks that can alter the irc message stream.

  * Implement a hook that handles the znc buffextras plugin.

  * Implement configurable nick color highlight palette.

  * Resolve relative paths starting at the home directory.

  * Significantly configurable UI colors


  ## 2.4


  * Support XDG configuration directory, e.g. `~/.config/glirc/config`

  * Add more window names. Shift selects second set of names.

  * Add `/channel` and `/say`

  * Improve `/focus` tab completion


  ## 2.3


  * Add commands `/znc`

  * Add initial support for ZNC''s playback module and `/znc-playback` command

  * Don''t consider message seen when in masklist, userlist, or channelinfo windows

  * Add terminal bell on command error


  ## 2.2


  * Add commands `/ison`, `/userhost`, `/away`, `/notice`, `/ctcp`, `/links`, `/time`,
  `/stats`

  * Added context-sensitive completion to `/mode`

  * Render CTCP messages

  * Memory performance improvements

  * Improved logic on nick changes

  * Support for fractional flood settings

  * Fixed VTY formatting bug

  * Add counts to the mask and user lists


  ## 2.1


  * Add red highlighting for own nick

  * Synchronize reply codes with Freenode

  * Add textual interpretation of reply codes

  * Add SASL support

  * Add `/channelinfo` command


  ## 2.0


  * First version of glirc rewrite

'
basic-deps:
  regex-tdfa-text: ! '>=1.0 && <1.1'
  socks: ! '>=0.5.5 && <0.6'
  bytestring: ! '>=0.10.8 && <0.11'
  unix: ! '>=2.7 && <2.8'
  split: ! '>=0.2 && <0.3'
  stm: ! '>=2.4 && <2.5'
  base: ==4.9.*
  data-default-class: ! '>=0.1.2 && <0.2'
  time: ! '>=1.6 && <1.7'
  unordered-containers: ! '>=0.2.7 && <0.3'
  text: ! '>=1.2.2 && <1.3'
  vty: ! '>=5.10 && <5.11'
  tls: ! '>=1.3.8 && <1.4'
  filepath: ! '>=1.4.1 && <1.5'
  gitrev: ! '>=1.2 && <1.3'
  process: ! '>=1.4.2 && <1.5'
  network: ! '>=2.6.2 && <2.7'
  async: ! '>=2.1 && <2.2'
  x509-store: ! '>=1.6.1 && <1.7'
  connection: ! '>=0.2.6 && <0.3'
  containers: ! '>=0.5.7 && <0.6'
  x509: ! '>=1.6.3 && <1.7'
  lens: ==4.14.*
  config-value: ! '>=0.5 && <0.6'
  x509-system: ! '>=1.6.3 && <1.7'
  regex-tdfa: ! '>=1.2 && <1.3'
  hashable: ! '>=1.2.4 && <1.3'
  attoparsec: ! '>=0.13 && <0.14'
  transformers: ! '>=0.5.2 && <0.6'
  deepseq: ! '>=1.4 && <1.5'
  glirc: -any
  irc-core: ! '>=2.1.1 && <2.2'
  vector: ! '>=0.11 && <0.12'
  directory: ! '>=1.2.6 && <1.3'
all-versions:
- '2.0'
- '2.1'
- '2.2'
- '2.3'
- '2.4'
- '2.5'
- '2.6'
- '2.7'
- '2.8'
- '2.9'
- '2.10'
- '2.11'
- '2.12'
- '2.13'
author: Eric Mertens
latest: '2.13'
description-type: markdown
description: ! "My IRC client\n=============\n\n[![Build Status](https://secure.travis-ci.org/glguy/irc-core.svg)](http://travis-ci.org/glguy/irc-core)\n\n![](https://raw.githubusercontent.com/wiki/glguy/irc-core/images/screenshot.png)\n\nBuilding\n========\n\nNote
  that glirc currently requires GHC 8.0.1\n\nglirc uses recent versions of packages,
  make sure you package databases are\nup-to-date:\n\n```\n$ cabal update # if you're
  using cabal\n$ stack update # if you're using stack\n```\n\nTo install the latest
  version from Hackage using cabal-install:\n\n```\n$ cabal install glirc\n```\n\nBuilding
  with cabal-install from source checkout\n\n```\n$ cabal install --dep\n$ cabal build\n```\n\nBuilding
  with stack using ghc-8 resolver (nightly resolvers can work using --solver)\n\n```\n$
  stack init --resolver=ghc-8\n$ stack build\n```\n\nClient Features\n===============\n\n*
  Subsequent joins and parts fold into one line and do not scroll chat messages off
  the screen\n* Ignore support that folds ignored messages into the joins and parts.
  Toggle it off to see previously hidden messages\n* Detailed view to see all the
  messages in a channel in full detail with hostmask and timestamp (F2)\n* Nick tab
  completion\n* New message notification\n* View ban, quiet, invex, and exception
  lists\n* WYSIWYG mIRC formatting input\n* Chanserv integration\n* Each user's nick
  is assigned a consistent color, when a user's nick is rendered in a chat message
  it uses that same color.\n* Support for /STATUSMSG/ messages (messages only voice
  or op users can see)\n* Run commands upon connection\n* Ban lists don't obstruct
  chat messages\n* Ban list and user list are searchable\n* CERTFP and SASL authentication\n\nTLS\n===\n\n`glirc`
  has TLS support via the Haskell `tls` package. Note that Freenode (and other networks)
  will allow you to authenticate to NickServ via a client certificate.\n\nI use the
  `x509-store` for decoding certificates and private key files. This library seems
  to support PEM formatted files and does not seem to support encrypted private key
  files. If the key and certificate are both contained in the certificate file the
  private key command line argument is unnecessary.\n\nStartup\n=======\n\n```\nglirc
  [FLAGS] INITIAL_NETWORKS...\n  -c PATH  --config=PATH  Configuration file path\n
  \ -h       --help         Show help\n  -v       --version      Show version\n```\n\nEnvironment
  variables\n```\nUSER=<default nickname and username>\nIRCPASSWORD=<your irc password>\n```\n\nConfiguration
  file\n=================\n\nA configuration file can currently be used to provide
  some default values instead of\nusing command line arguments. If any value is missing
  the default will be used.\n\nThe default configuration file path is `~/.config/glirc/config`\n\nRelative
  paths are relative to the home directory.\n\nLearn more about this file format at
  [config-value](http://hackage.haskell.org/package/config-value)\n\n```\n-- Defaults
  used when not specified on command line\ndefaults:\n  nick:            \"yournick\"\n
  \ username:        \"yourusername\"\n  realname:        \"Your real name\"\n  password:
  \       \"IRC server password\"\n  tls:             yes -- or: yes-insecure or no\n
  \                      -- enabling tls automatically uses port 6697\n  tls-client-cert:
  \"/path/to/cert.pem\"\n  tls-client-key:  \"/path/to/cert.key\"\n\n-- Override the
  defaults when connecting to specific servers\nservers:\n  * hostname:      \"chat.freenode.net\"\n
  \   sasl-username: \"someuser\"\n    sasl-password: \"somepass\"\n    socks-host:
  \   \"socks5.example.com\"\n    socks-port:    8080 -- defaults to 1080\n\n  * name:
  \"example\"\n    hostname:      \"example.com\"\n    port:          7000 -- override
  the default port\n    connect-cmds:\n      * \"join #favoritechannel,#otherchannel\"\n
  \     * \"msg mybot another command\"\n\n    -- Specify additional certificates
  beyond the system CAs\n    -- relative to home directory\n    server-certificates:\n
  \     * \"extra/certificate.pem\"\n\nmacros:\n  * name: \"wipe\"\n    commands:\n
  \     * \"clear\"\n      * \"znc *status clearbuffer $channel\"\n\n  -- Example
  use of macro in combination with an extension\n  * name: \"extra\"\n    commands:\n
  \     * \"extension Lua some-parameter $network $channel\"\n\nextra-highlights:
  [\"glirc\", \"lens\"]\n\npalette:\n  time:\n    fg: [10,10,10] -- RGB values for
  color for timestamps\n    bg: blue\n  nick-colors:\n    [ cyan, magenta, green,
  yellow, blue\n    , bright-cyan, bright-magenta, bright-green, bright-blue\n    ,
  218,  88,  89, 124, 160, 205, 212, 224 -- reds\n    ,  94, 130, 166, 172, 208, 214,
  216, 180 -- oranges\n    ,  58, 226, 229, 184, 187, 100, 142, 220 -- yellows\n    ,
  \ 22,  34,  40,  82,  70,  64,  48,  85 -- greens\n    ,  25,  27,  33,  39,  51,
  \ 80,  81,  75 -- blues\n    ,  69,  61,  56,  54, 129,  93,  99, 147 -- purples\n
  \   ]\n```\n\nConfiguration sections:\n--------\n\n* `defaults` - These settings
  are used for all connections\n* `servers` - These settings are used to override
  defaults when the hostname matches\n* `palette` - Client color overrides\n* `window-names`
  - text - Names of windows (typically overridden on non QWERTY layouts)\n* `nick-padding`
  - nonnegative integer - Nicks are padded until they have the specified length\n*
  `extra-highlights` - list of text - Extra words/nicks to highlight\n* `extensions`
  - list of text - Filenames of extension to load\n* `url-opener` - text - Command
  to execute with URL parameter for `/url` e.g. gnome-open on GNOME or open on macOS\n*
  `ignores` - list of text - Initial list of nicknames to ignore\n\nSettings\n--------\n\n*
  `name` - text - name of server entry, defaults to `hostname`\n* `hostname` - text
  - hostname used to connect and to specify the server\n* `port` - number - port number,
  defaults to 6667 without TLS and 6697 with TLS\n* `nick` - text or list of text
  - nicknames to try in order\n* `username` - text - username\n* `realname` - text
  - realname / GECOS\n* `password` - text - server password\n* `sasl-username` - text
  - SASL username\n* `sasl-password` - text - SASL password\n* `tls` - yes/yes-insecure/no
  - use TLS to connect (insecure mode disables certificate checks)\n* `tls-client-cert`
  - text - path to TLS client certificate\n* `tls-client-key` - text - path to TLS
  client key\n* `connect-cmds` - list of text - client commands to send upon connection\n*
  `socks-host` - text - hostname of SOCKS proxy to connect through\n* `socks-port`
  - number - port number of SOCKS proxy to connect through\n* `server-certificates`
  - list of text - list of CA certificates to use when validating certificates\n*
  `chanserv-channels` - list of text - list of channels with chanserv op permission\n*
  `flood-penalty` - number - cost in seconds per message\n* `flood-threshold` - number
  - threshold of seconds for burst\n* `message-hooks` - list of text - names of hooks
  to enable\n\nPalette\n-------\n\n* `nick-colors` - List of attr - Use for nick highlights\n*
  `self` - attr - attr of our own nickname(s) outside of mentions\n* `self-highlight`
  - attr - attr of our own nickname(s) in mentions (defaults to `self`)\n* `time`
  - attr - attr for timestamp\n* `meta` - attr - attr for metadata\n* `sigil` - attr
  - attr for sigils\n* `label` - attr - attr for information labels\n* `latency` -
  attr - attr for latency time\n* `error` - attr - attr for error messages\n* `textbox`
  - attr - attr for textbox edges\n* `window-name` - attr - attr for current window
  name\n* `activity` - attr - attr for activity notification\n* `mention` - attr -
  attr for mention notification\n* `command` - attr - attr for recognized command\n*
  `command-ready` - attr - attr for command with successful parse\n* `command-required`
  - attr - attr for required command argument placeholder\n* `command-optional` -
  attr - attr for optional command argument placeholder\n* `command-remaining` - attr
  - attr for remaining command text placeholder\n\nText Attributes\n---------------\n\nText
  attributes can be specified either as a single foreground color or section of attributes.\n\n*
  `<number>` - Maps to a terminal color\n* `<name>` - Direct selection of standard
  16 terminal colors\n* `[red-number, blue-number, green-number]` - List of 3 numbers
  in range 0-255 map to an approximation of the RGB color.\n\nAttributes\n\n* `fg`
  - foreground color\n* `bg` - background color\n* `style` - single style or list
  of styles\n\nStyles\n\n* `blink`\n* `bold`\n* `dim`\n* `standout`\n* `reverse-video`\n*
  `underline`\n\nCommands\n========\n\nClient commands\n\n* `/exit` - Terminate the
  client\n* `/quit` - Gracefully terminate connection to the current server\n* `/connect
  <name>` - Connect to the given server\n* `/disconnect` - Forcefully terminate connection
  to the current server\n* `/reconnect` - Reconnect to the current server\n* `/reload
  [path]` - Load a new configuration file (optional path)\n* `/windows` - List all
  open windows\n* `/extension <extension name> <params...>` - Send the given params
  to the named extension\n* `/exec [-n network] [-c channel] <command> <arguments...>`
  - Execute a command, If no network or channel are provided send output to client
  window, if network and channel are provided send output as messages, if network
  is provided send output as raw IRC messages.\n* `/url [n]` - Execute url-opener
  on the nth URL in the current window (defaults to first)\n\nConnection commands\n\n*
  `/nick <nick>` - Change nickname\n* `/away <message>` - Set away status\n\nWindow
  management\n\n* `/focus <server>` - Change focus to server window\n* `/focus <server>
  <channel>` - Change focus to channel window\n* `/clear [network] [channel]` - Clear
  contents of current or specified window\n* `/ignore <nick>` - Toggle ignore of a
  user\n* `/channel <channel>` - Change focus to channel on current network (alias:
  `/c`)\n\nChannel membership\n\n* `/join <channel>` - Join a channel (alias: `/j`)\n*
  `/part` - Part from current channel\n\nChat commands\n\n* `/msg <target> <msg>`
  - Send a message on the current server to target\n* `/notice <target> <msg>` - Send
  a notice message on the current server to target\n* `/ctcp <target> <command> <args>`
  - Send a ctcp command on the current server to target\n* `/me <msg>` - Send action
  message to channel\n* `/say <msg>` - Send normal message to channel\n\nChannel management\n\n*
  `/mode <mode> <params>` - Change modes on the current channel (advanced tab completion)\n*
  `/kick <nick>` - Kick a user\n* `/kickban <nick>` - Kick and ban a user\n* `/remove`
  - Gracefully kick a user\n* `/topic <topic>` - Change the topic (tab completion
  for topic)\n* `/invite <nick>` - Invite a user to the current channel\n\nQueries\n\n*
  `/who <query>` - Perform WHO query (use detailed view to see output)\n* `/whois
  <nick>` - Perform WHOIS query\n* `/whowas <nick>` - Perform WHOWAS query\n* `/ison
  <nick>` - Perform ISON query\n* `/userhost <nick>` - Perform USERHOST query\n* `/links
  <server>` - Perform LINKS query\n* `/time` - Perform TIME query\n* `/stats <query>`
  - Perform STATS query\n\nChannel information\n\n* `/users` - Show channel user list\n*
  `/masks <mode>` - Show channel bans(b), quiets(q), exempts(e), or invex(I)\n* `/channelinfo`
  - Show channel topic, creation, url\n\nWindow filters\n\n* `/grep` - Filter chat
  messages using a regular expression\n* `/grepi` - Filter chat messages using a case-insensitive
  regular expression on the message\n\nZNC-specific\n\n* `/znc <module> <parameters>`
  - send command to ZNC module without echoing to all clients\n* `/znc-playback` -
  ZNC playback module - play everything\n* `/znc-playback <time>` - ZNC playback module
  - play everything start at the given time today\n* `/znc-playback <date> <time>`
  - ZNC playback module - play everything start at the given time\n\nLow-level\n\n*
  `/quote <raw command>` - Send a raw IRC command to the server\n\nKeyboard Shortcuts\n==================\n\n*
  `^N` next channel\n* `^P` previous channel\n* `M-#` jump to window - `1234567890qwertyuiop!@#$%^&*()QWERTYUIOP`\n*
  `M-A` jump to activity\n* `M-S` jump to previous window\n* `^A` beginning of line\n*
  `^E` end of line\n* `^K` delete to end\n* `^U` delete to beginning\n* `^D` delete
  at cursor\n* `^W` delete word backwards\n* `^Y` paste from yank buffer\n* `M-F`
  forward word\n* `M-B` backward word\n* `M-BACKSPACE` delete word backwards\n* `M-D`
  delete word forwards\n* `TAB` nickname completion\n* `F2` toggle detailed view\n*
  `Page Up` scroll up\n* `Page Down` scroll down\n* `^B` bold\n* `^C` color\n* `^V`
  reverse video\n* `^_` underline\n* `^]` italic\n* `^O` reset formatting\n* `M-Enter`
  insert newline\n\nMacros\n======\n\nThe `macros` configuration section allows you
  to define\nsequences of commands. These commands can contain expansions.\n\nConfiguration\n-------------\n\n*
  `name` - text - name of macro\n* `commands` - list of text - commands to send after
  expansion\n\nMacro Expansions\n----------------\n\nVariable names and integer indexes
  can be used when defining commands.\nVariables are specified with a leading `$`.
  For disambiguation a variable\nname can be surrounded by `{}`. `$channel` and `${channel}`
  are\nequivalent. Default values can be provided following a pipe: `${var|default}`.\n\n*
  `channel` - current channel\n* `network` - current network name\n* `nick` - current
  nickname\n\nThe arguments to a command will be mapped to integer indexes. The command\nitself
  is at index zero.\n\n* `0` - command\n* `1` - first argument\n* `2` - second argument
  (etc.)\n\nHooks\n=====\n\nbuffextras\n----------\n\nEnable this hook when using
  ZNC and the `buffextra` module in order to reinterpret\nthis module's messages natively
  in the client.\n"
license-name: ISC
