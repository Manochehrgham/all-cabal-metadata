homepage: ''
changelog-type: ''
hash: f143f01d64bf8fb53be40326db1bdd5672d05b164c1c7df7d11f9e91e362edb0
test-bench-deps: {}
maintainer: L. Thomas van Binsbergen <ltvanbinsbergen@acm.org>
synopsis: GLL parser with simple combinator interface
changelog: ''
basic-deps:
  base: ! '>=4.3.1.0 && <=4.8.0.0'
  TypeCompose: -any
  array: -any
  containers: ! '>=0.4'
  pretty: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.2.0.0'
- '0.2.0.1'
- '0.2.0.2'
- '0.2.0.3'
- '0.3.0.0'
- '0.3.0.1'
author: L. Thomas van Binsbergen
latest: '0.3.0.1'
description-type: haddock
description: ! 'The package gll provides generalised top-down parsing according to
  the GLL

  parsing algorithm [Scott and Johnstone 2010,2013].


  The user can either invoke the GLL

  parser directly by importing "GLL.Parser" and providing a

  value of the Grammar datatype in (exported by "GLL.Parser").

  Alternatively, the user can import "GLL.Combinators" to write combinator expressions

  from which a grammar of the required form is extracted.

  The combinators enable applying arbitrary semantic actions to parse results.

  The documentation of the respective packages provides more information.


  The main motivation for this package

  is the development of Domain Specific Languages (DSLs).

  More specifically: designing DSLs with minimal differences between

  between abstract and concrete syntax (abstract syntax is often ambiguous).


  Please email any questions, comments and suggestions to the

  maintainer.'
license-name: BSD3
