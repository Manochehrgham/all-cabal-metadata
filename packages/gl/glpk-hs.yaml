changelog-type: ''
hash: dd451cab848bc3f727b964b97f1dd414fce97c8cce5454ec7f26b6a9662e0e7e
test-bench-deps: {}
synopsis: Comprehensive GLPK linear programming bindings
changelog: ''
basic-deps:
  base: ! '>=4 && <5'
  array: -any
  containers: -any
  mtl: -any
  deepseq: -any
all-versions:
- '0.0.0'
- '0.0.1'
- '0.0.2'
- '0.0.3'
- '0.0.4'
- '0.1.0'
- '0.2.0'
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.2.4'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.3.4'
latest: '0.3.4'
description-type: haddock
description: ! 'Friendly interface to GLPK''s linear programming and mixed integer
  programming features.  Intended for easy extensibility,

  with a general, pure-Haskell representation of linear programs.  Also includes usefully
  general algebraic structures.

  To design a linear programming problem,

  use "Control.Monad.LPMonad" to construct the constraints and specifications.  Linear
  functions are essentially specified

  as @Data.Map@s from variables to their coefficients, and functions for manipulating
  them are available in "Data.LinearProgram.LinExpr".

  Then "Data.LinearProgram.GLPK" provides facilities for using the GLPK solver system
  on your problem, with a sizable number

  of options available.'
