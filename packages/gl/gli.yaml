homepage: https://github.com/goromlagche/gli#readme
changelog-type: ''
hash: 2becbd7127cdbd34f23a752eaf26dbd3098eab2ec613e1b591b787f4b133e48a
test-bench-deps:
  base: -any
  gli: -any
maintainer: mrinmoy.das91@gmail.com
synopsis: Initial project template from stack
changelog: ''
basic-deps:
  http-client: -any
  friendly-time: -any
  bytestring: -any
  base: ! '>=4.7 && <5'
  time: -any
  text: -any
  process: -any
  containers: -any
  http-client-tls: -any
  gli: -any
  network-uri: -any
  attoparsec: -any
  optparse-applicative: -any
  http-conduit: -any
  aeson: -any
  yaml: -any
all-versions:
- '0.0.1'
author: goromlagche
latest: '0.0.1'
description-type: markdown
description: ! "# gli [WIP]\n\nGoal is to fetch PR info etc.\n\n## Setup\n\n1. `stack
  setup`\n2. `stack build`\n3. `stack exec which gli` to get the binary path\n4. `alias
  gli=binary_path`\n\n\n## Flow\n\n1. **Store the gitlab credentials on a file locally.
  (e.g. ~/.gli.yml)**\n  \n  sample file\n  ```\n      accounts:\n        my_hosted_gitlab:\n
  \           key: abcd1234xyz\n            url: https://gitlab.dev.my_hosted_gitlab.com/api/v3\n
  \       gitlab:\n            key: xyz4321dcba\n            url: https://gitlab.com/api/v3\n
  \ ```\n  You can get the credentials from https://gitlab.com/profile/account\n\n2.
  **Setup `gli` for a git repo**\n  \n  This will create a repo specific `gli.yml`
  file, which will store all the information regarding the repo, and will also be
  checked out from git.\n\n  ```\n    $ cd my_gitlab_repo_path\n    $ gli setup -f
  ~/.gli.yml\n    $ cat gli.yml\n    project:\n      ssh_url_to_repo: git@gitlab.com:organization/repo_name.git\n
  \     name: repo_name\n      id: 123\n      description: 'killer app 42'\n    masterFileConfig:\n
  \     key: gitlab\n      file: /Users/goromlagche/.gli.yml\n  ```\n\n3. **Fetch
  all open PR related info**\n\n  ```\n    $ gli prs\n  ```\n"
license-name: BSD3
