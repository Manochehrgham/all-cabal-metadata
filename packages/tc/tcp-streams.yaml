homepage: https://github.com/winterland1989/tcp-streams
changelog-type: markdown
hash: 4b5136290aa6469cd4be5af0d0faa4f5c53d35f3287753663c5c8073988e2884
test-bench-deps:
  test-framework-hunit: ! '>=0.2.7 && <0.4'
  bytestring: -any
  test-framework: ! '>=0.6 && <0.9'
  base: -any
  test-framework-quickcheck2: ! '>=0.2.12.1 && <0.4'
  network: -any
  HUnit: ! '>=1.2 && <2'
  io-streams: -any
  tcp-streams: -any
  QuickCheck: ! '>=2.3.0.2 && <3'
  directory: ==1.*
maintainer: winterland1989@gmail.com
synopsis: One stop solution for tcp client and server with tls support.
changelog: ! '# Revision history for tcp-streams


  ## 0.6.0.0


  * Update built-in mozilla CA list(2016/11/02).

  * Split openssl part into [tcp-streams-openssl](hackage.haskell.org/package/tcp-streams-openssl)


  ## 0.5.0.0


  * Update built-in mozilla CA list(2016/09/14).

  * Export `Data.TLSSetting` from `System.IO.Streams.TLS`, and `Data.OpenSSLSetting`
  from `System.IO.Streams.OpenSSL`.


  ## 0.4.0.0


  * Auto add `withOpenSSL`.

  * Add `extra-libraries` to cabal file.


  ## 0.3.0.0


  * Add qualified notes, rename `closeTLS/closeSSL` to `close`.

  * Fix `Bad pipe` error in tls''s `close`


  ## 0.2.3.0


  * Add `acceptWithBufferSize`, `socketToStreamsWithBufferSize`, fix recv exception
  handler.


  ## 0.2.2.0


  * Clean and document exception behavior.


  ## 0.2.1.0


  * Fix broken document.


  ## 0.2.0.0


  * Add support for openssl using HsOpenSSL package.


  ## 0.1.0.0


  * First version. Released on an unsuspecting world.

'
basic-deps:
  bytestring: ! '>=0.10.2.0'
  base: ! '>=4.7 && <5.0'
  data-default-class: -any
  pem: -any
  tls: ! '>=1.3 && <2.0'
  network: ! '>=2.3 && <3.0'
  x509-store: ! '>=1.5 && <2.0'
  x509: ! '>=1.5 && <2.0'
  io-streams: ! '>=1.2 && <2.0'
  x509-system: ! '>=1.5 && <2.0'
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.2.1.0'
- '0.2.2.0'
- '0.2.3.0'
- '0.3.0.0'
- '0.4.0.0'
- '0.5.0.0'
- '0.6.0.0'
author: winterland1989
latest: '0.6.0.0'
description-type: markdown
description: ! "tcp-streams\n===========\n\n[![Hackage](https://img.shields.io/hackage/v/tcp-streams.svg?style=flat)](http://hackage.haskell.org/package/tcp-streams)\n[![Build
  Status](https://travis-ci.org/winterland1989/tcp-streams.svg)](https://travis-ci.org/winterland1989/tcp-streams)\n\nOne
  stop solution for tcp client and server with tls support!\n\n+ use [io-streams](https://hackage.haskell.org/package/io-streams)
  for auto read buffering and easy streamming process.\n\n+ use [tls](http://hackage.haskell.org/package/tls)
  for tls connection.\n\nBuilt-in [mozilla CA list](https://curl.haxx.se/docs/caextract.html)
  date: 2016/11/02. \n\nFrom v0.6 TLS using [HsOpenSSL](http://hackage.haskell.org/package/HsOpenSSL)
  is split into [tcp-streams-openssl](http://hackage.haskell.org/package/tcp-streams-openssl)
  due to the difficulties of setting up openssl on many platform.\n\nAlso take a look
  at [wire-stream](http://hackage.haskell.org/package/wire-streams-0.0.2.0), for serialize/deserialize
  data. Happy hacking!\n\nExample\n-------\n\n```haskell\nimport qualified System.IO.Streams
  \        as Stream\nimport qualified System.IO.Streams.TCP     as TCP\nimport qualified
  Data.TLSSetting           as TLS\nimport qualified System.IO.Streams.TLS     as
  TLS\n\n--  TCP Client\n...\n(is, os, sock) <- TCP.connect \"127.0.0.1\" 8888\nStream.write
  os =<< ..  -- sending\nStream.read is >>=  ..  -- receiving\nTCP.close sock   ..
  \ -- closing\n...\n\n\n-- TCP Server\n...\nsock <- TCP.bindAndListen 8888 1024\n(is,
  os, csock, _) <- TCP.accept sock\nStream.write os =<< ..  -- sending\nStream.read
  is >>= ..   -- receiving\n...\n\n\n--  TLS Client\n...\ncp <- TLS.makeTLSClientParams
  (TLS.CustomCAStore \"myCA.pem\")\n(is, os, ctx) <- TCP.connect cp (Just \"myCAName\")
  \"127.0.0.1\" 8888\nStream.write os =<< ..  -- sending\nStream.read is >>=  ..  --
  receiving\nTLS.close ctx    ..  -- closing\n...\n\n\n--  TLS Server\n...\nsp <-
  TLS.makeServerParams \"server.crt\" [] \"server.key\"\nsock <- TCP.bindAndListen
  8889 1024\n(is, os, ctx, sockAddr) <- TLS.accept sp sock\nStream.write os =<< ..
  \ -- sending\nStream.read is >>= ..   -- receiving\n...\n\n\n-- HTTPS Client\n...\ncp
  <- TLS.makeClientParams TLS.MozillaCAStore\n(is, os, ctx) <- TLS.connect cp Nothing
  \"www.google.com\" 443\nStream.write (Just \"GET / HTTP/1.1\\r\\n\") os\nStream.write
  (Just \"Host: www.google.com\\r\\n\") os\nStream.write (Just \"\\r\\n\") os\nbs
  <- Stream.readExactly 1024 is\n...\n```\n\nLicense\n-------\n\nCopyright (c) 2016,
  Winterland\n\nAll rights reserved.\n\nRedistribution and use in source and binary
  forms, with or without\nmodification, are permitted provided that the following
  conditions are met:\n\n    * Redistributions of source code must retain the above
  copyright\n      notice, this list of conditions and the following disclaimer.\n\n
  \   * Redistributions in binary form must reproduce the above\n      copyright notice,
  this list of conditions and the following\n      disclaimer in the documentation
  and/or other materials provided\n      with the distribution.\n\n    * Neither the
  name of winterland1989 nor the names of other\n      contributors may be used to
  endorse or promote products derived\n      from this software without specific prior
  written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS
  IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR
  ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
  OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY
  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE
  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED
  OF THE POSSIBILITY OF SUCH DAMAGE.\n"
license-name: BSD3
