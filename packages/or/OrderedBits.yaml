homepage: https://github.com/choener/OrderedBits
changelog-type: markdown
hash: 2989379993ac998b34a04dba473f1f2fc74acf69ecf6d583a9bee6da2d12ccd8
test-bench-deps:
  test-framework: ! '>=0.8 && <0.9'
  base: -any
  test-framework-quickcheck2: ! '>=0.3 && <0.4'
  criterion: ! '>=1.0.2 && <1.1.1'
  test-framework-th: ! '>=0.2 && <0.3'
  OrderedBits: -any
  QuickCheck: ! '>=2.7 && <2.9'
  vector: -any
maintainer: choener@bioinf.uni-leipzig.de
synopsis: Efficient ordered (by popcount) enumeration of bits
changelog: ! '0.0.1.0

  -------


  - moved all properties directly into tests/properties.hs


  0.0.0.3

  -------


  - vector <= 0.11 supported (with conditional compilation)


  0.0.0.2

  -------


  - vector-algorithms version bump

  - removed explicit llvm flag (use --ghc-options)


  0.0.0.1

  -------


  - initial checkin of the (naive) sorted implementation

  - memoization of Int-sets up to 31 bit

  - non-memo versions (somewhat efficient)

  - travis-ci integration

'
basic-deps:
  bits: ! '>=0.4 && <0.5'
  base: ! '>=4.7 && <4.9'
  vector-algorithms: ! '>=0.6 && <0.7.1'
  primitive: ! '>=0.5 && <0.7'
  vector: ! '>=0.10 && <0.12'
all-versions:
- '0.0.0.1'
- '0.0.0.2'
- '0.0.0.3'
- '0.0.1.0'
author: Christian Hoener zu Siederdissen
latest: '0.0.1.0'
description-type: markdown
description: ! "[![Build Status](https://travis-ci.org/choener/OrderedBits.svg?branch=master)](https://travis-ci.org/choener/OrderedBits)\n\n#
  OrderedBits\n\nThe OrderedBits library provides methods to generate unboxed vectors
  of Ints\n(and others) ordered by their population count or Hamming distance to the
  0\nset. In other words, we enumerate the power set of a given input set.\n\nSuch
  an order is important for dynamic programming algorithms for Hamiltonian\npath problems
  and the travelling salesman problem.\n\n\n\n#### Contact\n\nChristian Hoener zu
  Siederdissen  \nLeipzig University, Leipzig, Germany  \nchoener@bioinf.uni-leipzig.de
  \ \nhttp://www.bioinf.uni-leipzig.de/~choener/  \n\n"
license-name: BSD3
