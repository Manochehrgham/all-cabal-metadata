changelog-type: ''
hash: 383270e422758b445877d39db1150f7e6b9ec7cc61de57eae5c078575610b1fb
synopsis: A functional graphics API for programmable GPUs
changelog: ''
all-versions:
- '1.0.0'
- '1.0.1'
- '1.0.2'
- '1.0.3'
- '1.0.4'
- '1.1.0'
- '1.1.1'
- '1.1.2'
- '1.1.3'
- '1.1.4'
- '1.1.5'
- '1.1.6'
- '1.1.7'
- '1.2.0'
- '1.2.1'
- '1.3'
- '1.3.1'
- '1.3.2'
- '1.4'
- '1.4.1'
latest: '1.4.1'
description-type: haddock
description: ! 'GPipe models the entire graphics pipeline in a purely functional,
  immutable and typesafe way. It is built on top of the programmable pipeline (i.e.
  non-fixed function) of

  OpenGL 2.1 and uses features such as vertex buffer objects (VBO''s), texture objects
  and GLSL shader code synthetisation to create fast graphics programs. Buffers,

  textures and shaders are cached internally to ensure fast framerate, and GPipe is
  also capable of managing multiple windows and contexts. By creating your own

  instances of GPipes classes, it''s possible to use additional datatypes on the GPU.


  You''ll need full OpenGL 2.1 support, including GLSL 1.20 to use GPipe. Thanks to
  OpenGLRaw, you may still build GPipe programs on machines lacking this support.'
