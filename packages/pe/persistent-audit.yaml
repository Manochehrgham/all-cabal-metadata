homepage: ''
changelog-type: markdown
hash: a93a26d8d08b3d44f5b51290f24ea0cb117109054eb88f690b34d0915e24cdd4
test-bench-deps:
  bytestring: -any
  persistent-mongoDB: -any
  base: ! '>=4.8 && <5'
  time: -any
  persistent: ! '>=2.2'
  hspec: -any
  text: -any
  persistent-template: -any
  mongoDB: -any
  attoparsec: -any
  transformers: -any
  persistent-sqlite: -any
maintainer: mchaver@gmail.com
synopsis: Parses a Persist Model file and produces Audit Models
changelog: ! '# Revision history for persistent-audit-script


  ## 0.1.0.1  -- 2016-05-03


  * Fix Haddock documentation.


  ## 0.1.0.0  -- 2016-05-02


  * First version.

'
basic-deps:
  bytestring: -any
  persistent-mongoDB: -any
  base: ! '>=4.8 && <5'
  time: -any
  persistent: ! '>=2.2'
  text: -any
  persistent-template: -any
  getopt-generics: -any
  mongoDB: -any
  attoparsec: -any
  transformers: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
author: James M.C. Haver II
latest: '0.1.0.1'
description-type: markdown
description: ! "# persistent-audit\n\nThis package includes an executable that takes
  a Persistent models (tables) file and returns a Persistent models file with audit
  models (tables) for each individual table in the original file. It can optionally
  return a file with an implementation of the `ToAudit` class for each pair of model
  and its audit model. The automatically produced audit model files and `ToAudit`
  instances are a best attempt and will not necessarily compile without editing. If
  you are interested in having different styles of Audit models supported or find
  any bugs, please inform me. It currently supports Persistent >= 2.2 && <= 2.5.\n\nThe
  executable can be run like this:\n\n```\ncabal run -- -m models -a auditModels\n```\n\nIt
  can also parse Haskell files that have Persist model QuasiQuoters `[persistLowerCase||]`
  and `[persistUpperCase||]`:\n\n```\ncabal run -- -m Models.hs -a auditModels\n```\n\nAnd
  if you want the optional `ToAudit` implementation:\n\n```\ncabal run -- -m models
  -a auditModels -i ToAuditInstances.hs\n```\n\nIt can also help you build Audit Models
  that will be used in a separate database (MongoDB to SQL or SQL to MongoDB) by converting
  MongoDB keys to Bytestring or SQL keys to Int64.\n\n```\ncabal run -- -m models
  -a auditModels -i ToAuditInstances.hs -c mongoDbToSql\ncabal run -- -m models -a
  auditModels -i ToAuditInstances.hs -c sqlToMongoDb\n```\n\nYou can also use this
  as a library for the following purporses:\n\n * To parse Persistent model files\n
  * To generate Audit Models from other Models\n * To generate `ToAudit` instances
  \n * Use query functions from `Database.Persist.Audit.Queries`:`insertAndAudit`,
  `insertWhereAndAudit`,`deleteAndAudit`,`deleteWhereAndAudit`,`updateAndAudit`,`updateWhereAndAudit`\n
  \nThis package is originally based on this article [Maintaining a Log of Database
  Changes](http://www.4guysfromrolla.com/webtech/041807-1.shtml). Specifically, the
  first example: 'A Separate \"History\" Table for Each Table Being Audited'.\n\n"
license-name: BSD3
