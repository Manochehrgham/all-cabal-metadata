homepage: http://www.yesodweb.com/book/persistent
changelog-type: markdown
hash: 7e35514b006f54ca78f1490f3ba190ecf2ada8083ab517113dbee7ca9f14ecd2
test-bench-deps: {}
maintainer: Naushadh <naushadh@protonmail.com>
synopsis: A pure haskell backend for the persistent library using MySQL database server.
changelog: ! '## 0.2.0.0

  - Added APIs for setting port number and character encoding.

  - Updated type signature for mkMySQLConnectInfo to align with mysql-haskell.


  ## 0.1.1.0

  - Bumped up version to include README and example.


  ## 0.1.0.0


  * Ported persistent-mysql 2.6 to use mysql-haskell as the underlying database driver.

  * Deprecated MySQLConf and ConnectInfo native constructor and default instance in
  favor of mk functions for better forward compatibility. See http://www.snoyman.com/blog/2016/11/designing-apis-for-extensibility.

'
basic-deps:
  bytestring: ! '>=0.9'
  base: ! '>=4.6 && <5'
  time: ! '>=1.5.0'
  persistent: ! '>=2.6.1 && <3'
  text: ! '>=0.11.0.6'
  persistent-template: -any
  monad-control: ! '>=0.2'
  resource-pool: -any
  mysql-haskell: ! '>=0.8.0.0 && <1.0'
  network: ! '>=2.3 && <3.0'
  conduit: ! '>=0.5.3'
  containers: ! '>=0.2'
  io-streams: ! '>=1.2 && <2.0'
  monad-logger: -any
  transformers: ! '>=0.2.1'
  persistent-mysql-haskell: -any
  resourcet: ! '>=0.4.10'
  aeson: ! '>=0.6.2'
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.2.0.0'
author: Naushadh <naushadh@protonmail.com>, Felipe Lessa <felipe.lessa@gmail.com>,
  Michael Snoyman
latest: '0.2.0.0'
description-type: markdown
description: ! "# persistent-mysql-haskell\n\nA pure haskell backend for [persistent](https://github.com/yesodweb/persistent)
  using the MySQL database server.\nInternally it uses the [mysql-haskell](https://github.com/winterland1989/mysql-haskell)
  driver in order to access the database.\n\nSee [example/Main.hs](example/Main.hs)
  for how this MySQL backend can be used with Persistent.\n\n### Motivation\n\n`persistent-mysql`
  uses [mysql](https://hackage.haskell.org/package/mysql) (via [mysql-simple](https://hackage.haskell.org/package/mysql-simple))
  as the database driver. `mysql` is a haskell FFI wrapper for `mysqlclient` written
  in C.\n\nReasons to use a pure haskell driver:\n\n- `mysql` has [concurrency issues](https://ro-che.info/articles/2015-04-17-safe-concurrent-mysql-haskell)
  as noted by [@feuerbach](https://github.com/feuerbach).\n\n- [mysql-haskell](https://hackage.haskell.org/package/mysql-haskell),
  a pure haskell driver by [@winterland1989](https://github.com/winterland1989), outperforms
  `mysql-simple` in benchmarks (see hackage or project repo).\n\n- better portability
  and possible static compilation of an entire project that uses `persistent-mysql`.\n\n\nPersonal
  experience on replacing `mysql-simple` with `mysql-haskell` in a project:\n\n- Performance
  gains consistent with benchmark.\n\n- Smoother deployment to [Amazon AMI/EC2](https://en.wikipedia.org/wiki/Amazon_Machine_Image),
  since `mysql` appears to have a hard dependency on the oracle version of `libmysqlclient`
  that does not work with the open source variant that is available by default on
  EC2 (and possibly on other cloud providers).\n\n### Potential issues moving from
  persistent-mysql to persistent-mysql-haskell\n\n`ConnectInfo` and `defaultConnectInfo`
  are not the same between `mysql` and `mysql-haskell`, therefore this package is
  not a 100% drop in replacement for persistent-mysql from the connection configuration
  perspective.\n\n- `mysql-haskell` does not allow provide an API for the entirety
  of [mysqlclient options](https://hackage.haskell.org/package/mysql-0.1.4/docs/Database-MySQL-Base.html#t:Option).
  Therefore neither can this package.\n\n- Given the inevitable incompatibility with
  `persistent-mysql`, and in the interest of [providing a forward-compatible API](http://www.snoyman.com/blog/2016/11/designing-apis-for-extensibility),
  `ConnectInfo` internals and `defaultConnectInfo` have been deprecated. However the
  similar utility can be achieved like so:\n\n    ```diff\n    import Database.Persist.MySQL\n\n
  \   connectInfo :: MySQLConnectInfo\n    - connectInfo = defaultConnectInfo\n    -
  \            { connectHost     = \"localhost\"\n    -             , connectUser
  \    = \"test\"\n    -             , connectPassword = \"test\"\n    -             ,
  connectDatabase = \"test\"\n    -             }\n    + connectInfo = mkMySQLConnectInfo
  \"localhost\" \"test\" \"test\" \"test\"\n\n    connectInfoNewPort :: MySQLConnectInfo\n
  \   - connectInfoNewPort = connectInfo { connectPort = 3307 }\n    + connectInfoNewPort
  = setMySQLConnectInfoPort 3307 connectInfo\n\n    connectInfoNewCharSet :: MySQLConnectInfo\n
  \   - connectInfoNewCharSet = connectInfo { connectOptions = [CharsetName \"utf8\"]
  }\n    + connectInfoNewCharSet = setMySQLConnectInfoCharset 33 connectInfo\n\n    ```\n\nAside
  from connection configuration, persistent-mysql-haskell is functionally on par with
  persistent-mysql (as of writing this). This can be seen by [comparing persistent-test
  between this fork and upstream](https://github.com/yesodweb/persistent/compare/master...naushadh:persistent-mysql-haskell#diff-028f5df7b2b9c5c8b0fa670fc8c69bff).\n\n###
  FAQs\n\n#### Why isn't this part of the main/upstream persistent repo?\n\n- TLDR:
  Upstream wants to gauge community interest before absorbing this backend into the
  main repo.\n- Long version: See [issue yesodweb/persistent/issues/659](https://github.com/yesodweb/persistent/issues/659).\n\n####
  mysql-haskell supports X but persistent-mysql-haskell API doesn't expose it. Why?\n\n-
  Internals (getters/setters) of MySQLConnectInfo and `defaultConnectInfo` are intentionally
  masked for [forward compatibility](http://www.snoyman.com/blog/2016/11/designing-apis-for-extensibility).\n\n-
  Setting `MySQLConnectInfo` charset and port number  are in the works.\n\n- `TLS`
  support is also in the works.\n\n- For all others, including what's already in the
  works, feel free to open an issue and/or submit a PR.\n\n#### Does persistent-mysql-haskell
  ship with tests?\n\n- It does! :) `persistent-test` is fully re-used with an additional
  flag to specifically test persistent-mysql-haskell.\n\n    ```bash\n    stack test
  persistent-test --flag persistent-test:mysql_haskell\n    ```"
license-name: MIT
