homepage: http://otakar-smrz.users.sf.net/
changelog-type: ''
hash: 124ccb1eb03d9b553c2763d5961d75c7922b4f7c97b00dc959787cdd368323cb
test-bench-deps: {}
maintainer: otakar-smrz users.sf.net
synopsis: Encoding character data
changelog: ''
basic-deps:
  Cabal: -any
  base: <5.0
  containers: -any
  mtl: -any
all-versions:
- '0.7'
- '1.1'
- '1.2'
- '1.3.1'
- '1.3.2'
- '1.3.3'
- '1.3.4'
- '1.3.5'
- '1.3.6'
- '1.3.7'
author: Otakar Smrz
latest: '1.3.7'
description-type: haddock
description: ! 'The "Encode" library provides a unified interface for converting strings

  from different encodings into a common representation, and vice versa.

  This representation is isomorphic to the Unicode character set, and the

  encodings can be both standard and user-defined. For this purpose, the

  "Encode" module defines the ''Encode.UPoint'' data type and the

  ''Encode.Encoding'' type class with the ''encode'' and ''decode'' methods.


  The "Encode" library is being proposed as a Haskell analogy to the

  /Encode/ extension in Perl, <http://search.cpan.org/dist/Encode/>.


  The "Main.Encode" and "Main.Decode" programs mimick the function calls

  to ''encode'' and ''decode'', respectively, with the following usage:


  >    decode ArabTeX < decode.d | encode Buckwalter > encode.d

  >

  >    decode MacArabic < data.MacArabic > data.UTF8

  >

  >    encode WinArabic < data.UTF8 > data.WinArabic


  The installation instructions are given in "INSTALL".

  For the list of supported encoding schemes, please refer

  to "Encode" and the source files of the programs. With the

  executables, the naming of encodings is /case-insensitive/

  and some further options are allowed:


  >  encode|decode [--OPTIONS] [ENCODING]

  >    -h       --help         show usage information

  >    -l       --lines        use line-oriented mode

  >    -p text  --prefix=text  prefix input with text

  >    -s text  --suffix=text  suffix input with text

  >    -v       --version      show program''s version


  The "PureFP" library is an edited excerpt from the /Functional Parsing/

  library developed by Peter Ljungl&#246;f in his licenciate thesis

  /Pure Functional Parsing &#150; an advanced tutorial/, G&#246;teborg

  University and Chalmers University of Technology, April 2002,

  <http://code.google.com/p/haskell-functional-parsing/>.


  The "Parsek" library is included for experimental purposes and subsumes

  "PureFP.Parsers.Stream". /Parsek/ was developed by Koen Claessen in his

  functional pearl article /Parallel Parsing Processes/, Journal of

  Functional Programming, 14(6), 741&#150;757, Cambridge University Press,

  2004, <http://www.cse.chalmers.se/edu/course/afp/Papers/parser-claessen.pdf>,

  <http://hackage.haskell.org/package/parsek/>.


  "Encode" "PureFP" "Parsek"'
license-name: GPL
