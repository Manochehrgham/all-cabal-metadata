changelog-type: ''
hash: a5e27b90718fa736883967c0795313382b6922a5375daf9ba1d9d170351d5777
test-bench-deps: {}
synopsis: TH-generated EnumSet/EnumMap wrappers around IntSet/IntMap.
changelog: ''
basic-deps:
  base: ! '>=4.5 && <5'
  containers: ! '>=0.5 && <0.6'
  deepseq: ! '>=1.3'
  template-haskell: ! '>=2.7'
all-versions:
- '0.5.1.0'
- '0.6.0.0'
- '0.6.0.1'
- '0.6.0.2'
latest: '0.6.0.2'
description-type: haddock
description: ! 'This package wraps @IntSet@ and @IntMap@ from @containers@, and provides

  fast sets and maps keyed on any data type with a well-behaved @Enum@

  instance. Useful for derived @Enum@s, newtype''d @Int@s, or any data type

  that can be packed into an @Int@: just implement @fromEnum@ and @toEnum@.


  The boilerplate is generated using Template Haskell, so unlike

  @enummapset@ it''s easier to maintain and keep up-to-date with

  @containers@. On the downside, it''s less portable.


  Note that "Data.EnumMap.Lazy" and "Data.EnumMap.Strict" provide distinct

  newtype wrappers, and their respective ''Functor'' instances behave as

  expected, unlike that of @IntMap@ which is alway lazy.'
