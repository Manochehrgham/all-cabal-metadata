homepage: https://github.com/choener/FormalGrammars
changelog-type: markdown
hash: 2f1a4b8bb6edc8a7a2b148dea5009dab85a198eb118add7fb6f69bd4406d75a6
test-bench-deps: {}
maintainer: choener@bioinf.uni-leipzig.de
synopsis: (Context-free) grammars in formal language theory
changelog: ! "0.2.1.0\n-------\n\n- indexed rules and grammars (revamped system)\n-
  *multi*-context free grammars available!\n- new travis.yml\n\n0.2.0.0\n-------\n\n-
  completely rewritten parsing system\n- makes use of newer ADPfusion 0.4.0\n- travis-ci
  integration\n\n0.1.0.0\n-------\n\n- fixed dependencies\n- major version bump\n-
  new TH code generator using ADPfusion 0.3\n\n0.0.0.2\n-------\n\n- cleaned up the
  TH generator. Should be easier now to build more complex\n  auto-generators\n\n0.0.0.1\n-------\n\n-
  basic operations on context-free formal grammars.\n"
basic-deps:
  bytestring: ==0.10.*
  ansi-wl-pprint: ==0.6.7.*
  trifecta: ==1.5.*
  base: ! '>=4.7 && <4.9'
  ADPfusion: ! '>=0.4.1 && <0.4.2'
  unordered-containers: ==0.2.*
  text: ==1.*
  HaTeX: ==3.16.*
  PrimitiveArray: ! '>=0.6.0 && <0.6.2'
  data-default: ==0.5.*
  semigroups: ! '>=0.16 && <0.17'
  containers: -any
  parsers: ! '>=0.12 && <0.13'
  lens: ==4.*
  FormalGrammars: -any
  mtl: ==2.*
  cmdargs: ==0.10.*
  transformers: ! '>=0.3 && <0.5'
  template-haskell: -any
  vector: ==0.10.*
all-versions:
- '0.0.0.1'
- '0.0.0.2'
- '0.2.0.0'
- '0.2.1.0'
author: Christian Hoener zu Siederdissen, 2013-2015
latest: '0.2.1.0'
description-type: markdown
description: ! "[![Build Status](https://travis-ci.org/choener/FormalGrammars.svg?branch=master)](https://travis-ci.org/choener/FormalGrammars)\n\n#
  FormalGrammars: A DSL for formal languages in Haskell\n\n[*generalized Algebraic
  Dynamic Programming Homepage*](http://www.bioinf.uni-leipzig.de/Software/gADP/)\n\nThe
  gADP homepage has a tutorial and example on how to write algorithms /\ngrammars.\n\nIdeas
  implemented here are described in a couple of papers:\n\n\n\n1.  Christian Hoener
  zu Siederdissen  \n    *Sneaking Around ConcatMap: Efficient Combinators for Dynamic
  Programming*  \n    2012, Proceedings of the 17th ACM SIGPLAN international conference
  on Functional programming  \n    [paper](http://doi.acm.org/10.1145/2364527.2364559)
  [preprint](http://www.tbi.univie.ac.at/newpapers/pdfs/TBI-p-2012-2.pdf)  \n1.  Andrew
  Farmer, Christian Höner zu Siederdissen, and Andy Gill.  \n    *The HERMIT in the
  stream: fusing stream fusion’s concatMap*  \n    2014, Proceedings of the ACM SIGPLAN
  2014 workshop on Partial evaluation and program manipulation.  \n    [paper](http://dl.acm.org/citation.cfm?doid=2543728.2543736)
  \ \n1.  Christian Höner zu Siederdissen, Ivo L. Hofacker, and Peter F. Stadler.
  \ \n    *Product Grammars for Alignment and Folding*  \n    2014, IEEE/ACM Transactions
  on Computational Biology and Bioinformatics. 99  \n    [paper](http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6819790)
  \ \n1.  Christian Höner zu Siederdissen, Sonja J. Prohaska, and Peter F. Stadler
  \ \n    *Algebraic Dynamic Programming over General Data Structures*  \n    2015,
  BMC Bioinformatics  \n    [preprint](http://www.bioinf.uni-leipzig.de/Software/gADP/preprints/hoe-pro-2015.pdf)
  \ \n1.  Maik Riechert, Christian Höner zu Siederdissen, and Peter F. Stadler  \n
  \   *Algebraic dynamic programming for multiple context-free languages*  \n    2015,
  submitted  \n    [preprint](http://www.bioinf.uni-leipzig.de/Software/gADP/preprints/rie-hoe-2015.pdf)
  \ \n\n\n\n\n\n#### Contact\n\nChristian Hoener zu Siederdissen  \nLeipzig University,
  Leipzig, Germany  \nchoener@bioinf.uni-leipzig.de  \nhttp://www.bioinf.uni-leipzig.de/~choener/
  \ \n\n"
license-name: GPL-3
