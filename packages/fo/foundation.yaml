homepage: https://github.com/haskell-foundation/foundation
changelog-type: ''
hash: 223a2e54d283203d80a80c8792a55a27fda613a1e9526ac333426d3b962bff99
test-bench-deps:
  base: ==4.*
  foundation: -any
  criterion: -any
  doctest: ! '>=0.11'
  tasty-quickcheck: -any
  mtl: -any
  tasty-hunit: -any
  tasty: -any
  QuickCheck: -any
maintainer: vincent@snarc.org
synopsis: Alternative prelude with batteries and no dependencies
changelog: ''
basic-deps:
  base: <100000
  ghc-prim: -any
all-versions:
- '0.0.1'
- '0.0.2'
- '0.0.3'
- '0.0.4'
author: Vincent Hanquez <vincent@snarc.org>
latest: '0.0.4'
description-type: markdown
description: ! "Foundation\n==========\n\n[![Build Status](https://travis-ci.org/haskell-foundation/foundation.png?branch=master)](https://travis-ci.org/haskell-foundation/foundation)\n[![Coverage
  Status](https://coveralls.io/repos/github/haskell-foundation/foundation/badge.svg?branch=master)](https://coveralls.io/github/haskell-foundation/foundation?branch=master)\n[![BSD](http://b.repl.ca/v1/license-BSD-blue.png)](http://en.wikipedia.org/wiki/BSD_licenses)\n[![Haskell](http://b.repl.ca/v1/language-haskell-lightgrey.png)](http://haskell.org)\n\nDocumentation:
  [foundation on hackage](http://hackage.haskell.org/package/foundation)\n\nGoals\n=====\n\n*
  provide a base like set of modules that provide a consistent set of features and
  bugfixes across multiple versions of GHC (unlike base).\n* provide a better and
  more efficient prelude than base's prelude.\n* be self-sufficient: no external dependencies
  apart from base (or ghc packages).\n* provide better data-types: packed unicode
  string by default, arrays.\n* Better numerical classes that better represent mathematical
  things (No more all-in-one Num).\n\nUsage\n=====\n\nHow to use with the normal Prelude\n----------------------------------\n\nAdd
  the `foundation` package in your cabal file, and it's recommended to import Foundation
  qualified if\nyou're planning to use with the normal Prelude:\n\nFor example:\n\n```haskell\nimport
  qualified Foundation as F\n```\n\nIt's also recommended if you're going to deal
  with packages using text, bytestring, vector.. to use\nthe `foundation-edge` package.\n\nHow
  to use fully without Prelude\n--------------------------------\n\nDisable the built-in
  prelude at the top of your file:\n\n```haskell\n{-# LANGUAGE NoImplicitPrelude #-}\n```\n\nOr
  directly in your project cabal file:\n\n```haskell\nDefault-Extensions: NoImplicitPrelude\n```\n\nThen
  in your modules:\n\n```haskell\nimport Foundation\n```\n\nAdvanced settings\n----------------------\n\nPlease
  check out the chapter [Advanced Usage Options](docs/Advanced.md) in the\ndocumentation.\n\n\nHow
  to contribute\n=================\n\nAny contributions is welcome, but a short list
  includes:\n\n* Improve the code base\n* Report an issue\n* Fix an issue\n* Improve
  the documentation\n* Make tutorial on how to use foundation\n* Make your project
  use foundation instead of base, report the missing coverage (IO, types, etc.), or
  what functionality is missing to make a succesful transition\n\nProfiling\n---------\n\nIf
  you want to see the core (simpl step) or the assembly (asm step), then you can build
  with\n\n    stack build --ghc-options -ddump-simpl --ghc-options -ddump-asm\n\nNote
  that it doesn't actually will create the necessary extra files if the modules doesn't
  need building.\n\nyou can then find your build by-products in:\n\n    .stack-work/dist/<architecture>/Cabal-<CabalVersion>/build/\n\nEach
  modules that get compiled will create an equivalent file in the build directory:\n\n*
  ModuleName.dump-simpl\n* ModuleName.dump-asm\n\nFor profiling individual programs,
  the following command is useful:\n\n    stack ghc -- -O --make X.hs -prof -auto-all
  -caf-all -fforce-recomp\n\nBenchmarking\n------------\n\nTo get the list of benchmark:\n\n
  \   stack bench --benchmark-arguments -l\n\nTo compare against other libraries,
  you need to set the `bench-all` flag\n\n    stack bench --flag foundation:bench-all
  --benchmark-arguments -l\n\nTo run a specific or set of benchmarks :\n\n    stack
  bench --flag foundation:bench-all --benchmark-arguments 'types/String/SplitAt/mascii-10/Text'\n
  \   stack bench --flag foundation:bench-all --benchmark-arguments '-m prefix types/String/SplitAt'\n
  \   stack bench --flag foundation:bench-all --benchmark-arguments '-m glob types/String/SplitAt'\n\nTo
  register a set of benchmarks:\n\n    stack bench --flag foundation:bench-all --benchmark-arguments
  \"--csv $(git describe).csv\"\n\n\nDesign\n======\n\nFoundation started on the simple
  idea of trying to put everything I need in one\nsimple and consistent package. The
  amazing haskell ecosystem is extremely\nfragmented and maintained by different people
  with different goals, free time,\nand style. The overall scare of not trying to
  change anything relatively\ncentral (`base`, `bytestring`, `text`, `vector`, ...)
  for a promise of stability\nhas pushed many people to work on their own thing, leading
  to unnecessary work\nduplication and further fragmentation.\n\n\nFoundation uses
  and abuses type families.\n"
license-name: BSD3
