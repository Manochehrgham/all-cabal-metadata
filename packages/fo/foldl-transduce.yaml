homepage: ''
changelog-type: text
hash: 7d8145e767e7ae5f66e9c8c878448e1a3378db511acb34c909ebb4c1fced8edc
test-bench-deps:
  base: ! '>=4.4 && <5'
  text: -any
  criterion: ! '>=1.1.0.0 && <1.2'
  doctest: ! '>=0.10.1'
  foldl: -any
  foldl-transduce: -any
  tasty-hunit: ! '>=0.9.2'
  tasty: ! '>=0.10.1.1'
maintainer: diaz_carrete@yahoo.com
synopsis: Transducers for foldl folds.
changelog: ! '# 0.1.2.0

  - Added explicit bifunctors dependency.

  - Added Transduce'', TransduceM'' type synonyms.

  - Added groups'', groupsM''.



  # 0.1.1.0


  - Changed signatures of transduce'' and transduceM''.

  - generalize'' -> generalizeTransducer

  - simplify'' -> simplifyTransducer

  - dropped direct profunctors dependency.

'
basic-deps:
  semigroupoids: ! '>=5.0'
  bytestring: ! '>=0.9.2.1 && <0.11'
  base: ! '>=4 && <5'
  comonad: ==4.*
  text: ! '>=0.11.2.0 && <1.3'
  containers: <0.6
  bifunctors: ==5.*
  foldl: ! '>=1.1 && <2'
  transformers: ! '>=0.2.0.0 && <0.5'
all-versions:
- '0.0.1'
- '0.1.0.0'
- '0.1.0.1'
- '0.1.2.0'
- '0.1.2.1'
- '0.1.2.2'
- '0.1.2.3'
author: Daniel Diaz
latest: '0.1.2.3'
description-type: markdown
description: ! '## What''s in this library?


  Stateful transducers and streaming-preserving group operations for the folds in

  Gabriel Gonzalez''s [foldl](http://hackage.haskell.org/package/foldl) package.


  ## When to use this library?


  - When you want to wrap a stateful decoder over a **Fold**. An example is

  decoding UTF-8: the decoder must be stateful because a multi-byte character may

  have been split across two blocks of bytes.


  - When you want to tweak the stream of data that arrives into a **Fold**, but

  only at certain positions. Stripping whitespace at the beginning of a text

  stream, for example.


  - When you want to perform group operations without breaking "streaminess",

  similar to what [pipes-group](http://hackage.haskell.org/package/pipes-group)

  does.


  ## Why use this library for grouping instead of **pipes-group**?


  Grouping fold-side instead of producer-side has the advantage that, since the

  results are still **Fold**s, you can combine them using **Applicative**.


  Also, **Fold**s can work with sources other than **Producer**s from pipes.


  Grouping fold-side has limitations as well:


  - You can''t perform bracketing operations like "withFile" that span the folding

  of an entire group. You can do that in pipes-group.


  - You have more flexibility in pipes-group to decide how to fold a group based

  on previous results.

'
license-name: BSD3
