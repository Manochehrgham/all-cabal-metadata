homepage: http://github.com/tekul/jose-jwt
changelog-type: markdown
hash: 5aa6637a051160937328c7ff477615ff8424212374f46e41386c705e4db425c0
test-bench-deps:
  either: ! '>=4.0'
  bytestring: -any
  base: -any
  base64-bytestring: -any
  crypto-cipher-types: -any
  hspec: ! '>=1.6'
  text: -any
  crypto-pubkey-types: -any
  criterion: -any
  doctest: ! '>=0.9.11'
  crypto-pubkey: -any
  HUnit: ! '>=1.2'
  cipher-aes: -any
  jose-jwt: -any
  cprng-aes: -any
  mtl: -any
  crypto-random: -any
  aeson-qq: -any
  QuickCheck: ! '>=2.4'
  aeson: -any
  cryptohash: -any
maintainer: Luke Taylor <tekul.hs@gmail.com>
synopsis: JSON Object Signing and Encryption Library
changelog: ! '0.6.2

  -----


  * Remove dependency on `errors` package.


  0.6.1

  -----


  * Minor internal changes to fix build on GHC 7.10.


  0.6

  ---


  * Change KeyId type to allow use of a UTCTime string for the identifier.

  * Internal crypto fixes to prevent exceptions from external libraries.


  0.5

  ---


  * Add JwtEncoding type. Changes API of `Jwt.encode` and `Jwt.decode`.


  0.4.2

  -----


  * Fix in the code for finding suitable JWKs for encoding/decoding.


  0.4.1.1

  -------


  * Added `doctest` flag to cabal file to allow doctests to be disabled.


  0.4.1

  -----


  * Add cprng-aes dependency to doctests to stop test failure on travis and nixos
  hydra builds.


  0.4

  ---


  * Changed use of `Jwt` type to represent an encoded JWT.

  * Introduced `Payload` type to allow setting the `cty` header value correctly for
  nested JWTs.

  * Added an explicit `Unsecured` type for a decoded JWT, to make it obvious when
  the content is not signed or encrypted.

  * Fixed some bugs in JSON encoding and decoding of EC JWKs.


  0.3.1

  -----


  Changed the signature of `Jwt.encode` to take a list of `Jwk` rather than a single
  key. The key will be selected from

  the list based on the specified algorithms.


  0.3

  ---


  * New support for JWS validation using elliptic curve algorithms.

  * Added `Jwt.encode` function which takes a JWK argument, allowing key data (currently
  the key ID) to be encoded in the token header.


'
basic-deps:
  cereal: ! '>=0.4'
  either: -any
  bytestring: ! '>=0.9'
  base: ! '>=4 && <5'
  time: ! '>=1.4'
  base64-bytestring: ! '>=1'
  crypto-cipher-types: ! '>=0.0.9'
  unordered-containers: ! '>=0.2'
  text: ! '>=0.11'
  crypto-pubkey-types: ! '>=0.4'
  crypto-pubkey: ! '>=0.2.5'
  crypto-numbers: ! '>=0.2'
  containers: ! '>=0.4'
  cipher-aes: ! '>=0.2.6'
  mtl: ! '>=2.1.3.1'
  crypto-random: ! '>=0.0.7'
  byteable: ! '>=0.1.1'
  aeson: ! '>=0.8.0.2'
  vector: ! '>=0.10'
  cryptohash: ! '>=0.8'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.3.1'
- '0.4'
- '0.4.1'
- '0.4.1.1'
- '0.4.2'
- '0.5'
- '0.6'
- '0.6.1'
- '0.6.2'
author: Luke Taylor <tekul.hs@gmail.com>
latest: '0.6.2'
description-type: haddock
description: ! '

  Intended to provide support for the JOSE suite of IETF (draft)

  standards and the closely related JWT (JSON web token) spec

  (<http://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32/>).


  Both signed and encrypted JWTs are supported, as well as simple

  JWK format keys.


  The library is currently intended to support work on an OpenID

  Connect implementation and the APIs should not be considered

  complete, stable or secure for all use cases.'
license-name: BSD3
