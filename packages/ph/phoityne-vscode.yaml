homepage: https://sites.google.com/site/phoityne/vscode
changelog-type: markdown
hash: 2e0aed6d7e8e7e5ce34572550d2a9daef08f00964ca20fedd8f8a4f46cd14a32
test-bench-deps: {}
maintainer: phoityne.hs@gmail.com
synopsis: ghci debug viewer on Visual Studio Code
changelog: ! "\n20160804 phoityne-vscode-0.0.8.0\n  * [Modify] モジュール構成の変更。\n  * [Modify]
  debugger adopter interface Capabilitiesの変更に対応した。\n\n20160704 phoityne-vscode-0.0.7.0\n
  \ * [Modify] debugger adopter interface Capabilitiesの変更に対応した。\n  * [Modify] debugger
  adopter interface StackFrameの変更に対応した。(endLin, endColumnの追加)\n  * [Modify] debugger
  adopter interface Variableの変更に対応した。(typeの追加)\n  \n20160626 phoityne-vscode-0.0.6.0\n\n
  \ * [Modify] launchリクエストのghciCmdパラメータで指定したghci起動コマンドを使用するように変更した。\n  * [Modify]
  ghciの起動に失敗した場合、デバッグを終了するように修正した。\n\n20160605 phoityne-vscode-0.0.5.0\n\n  * [Modify]
  launchリクエストのnoDebugパラメータをMaybeに変更した。\n\n20160601 phoityne-vscode-0.0.4.0\n\n  *
  [Modify] スタックトレースの表示を番号から関数名に変更した。\n  * [Modify] GHC-8.0.1のghciにおいて、:step結果の出力変更(Stopped
  in)に対応した。\n\n\n20160515 phoityne-vscode-0.0.3.0\n\n  * [Add] tasks.jsonが存在しない場合は、作成するようにした。\n
  \ * [Add] package.json にキーバインディング設定を追加した。(stack build, stack clean, stack test,
  stack watch)\n  * [Add] hover requestに対して、:info結果を返すようにした。\n\n\n20160508 phoityne-vscode-0.0.2.0\n\n
  \ * [Add] デバッガ起動後、ファイル保存時にghciにリロードするようにした。\n  * [Add] 条件付きブレークポイントに対応した。\n\n\n20160504
  phoityne-vscode-0.0.1.0\n\n  * [Info] Initial release.\n\n\n"
basic-deps:
  MissingH: -any
  ConfigFile: -any
  bytestring: -any
  split: -any
  Cabal: -any
  HStringTemplate: -any
  base: ! '>=4.7 && <5'
  text: -any
  filepath: -any
  process: -any
  parsec: -any
  conduit: -any
  conduit-extra: -any
  containers: -any
  hslogger: -any
  mtl: -any
  cmdargs: -any
  transformers: -any
  fsnotify: -any
  resourcet: -any
  aeson: -any
  safe: -any
  directory: -any
all-versions:
- '0.0.1.0'
- '0.0.2.0'
- '0.0.3.0'
- '0.0.4.0'
- '0.0.5.0'
- '0.0.6.0'
- '0.0.7.0'
- '0.0.8.0'
author: phoityne_hs
latest: '0.0.8.0'
description-type: markdown
description: ! "\n\n# Phoityne VSCode\n\nPhoityne is a ghci debug viewer for Visual
  Studio Code. (on Windows)\n\n\n## Debug on VSCode\n\n1. Start VSCode\n2. Open stack
  project folder\n3. Open debug view\n4. Open launch.json\n5. Set startup source file.
  Default file is test/Spec.hs\n6. Run debug(F5)\n\n[![Demo Video1](https://sites.google.com/site/phoityne/doc_jp/demo01.gif)](https://sites.google.com/site/phoityne/doc_jp/demo01.gif?attredirects=0)\n\n\n##
  Key Bindings\n\n* F5 : start debug\n* F6 : show command menu (for stack watch)\n*
  Shift + F6 : stop stack watch\n* F7 : stack clean & build\n* F8 : stack test\n\n\n##
  Important\n\n* Breakpoint can be set in a .hs file which defineds \"module ... where\".\n*
  Source file extension must be \".hs\"\n* When you start debugging for the first
  time, .vscode/tasks.json will be created automatically. Then you can use F6, F7,
  F8 shortcut key.\n\n\n## Install\n\n\n### Run stack install\n\n    % stack install
  phoityne-vscode\n      . . . . .\n    %\n\nAdd 'phoityne-vscode.exe' to PATH environment.\n\n
  \   % where $path:phoityne-vscode.exe\n    C:\\Users\\[user name]\\AppData\\Roaming\\local\\bin\\phoityne-vscode.exe\n
  \   \n    %\n\n\n### Install vscode extensions\n\n1. ctrlr + p on Visual Studio
  Code\n2. ext install haskell ... \n3. select \"[Haskell GHCi debug viewer Phoityne](https://marketplace.visualstudio.com/items?itemName=phoityne.phoityne-vscode)\"\n##
  Capabilites\n\n* supportsConfigurationDoneRequest : no\n* supportsFunctionBreakpoints
  : no\n* supportsConditionalBreakpoints : yes\n* supportsEvaluateForHovers : yes\n*
  exceptionBreakpointFilters : no\n* supportsStepBack : no\n* supportsSetVariable
  : no\n* supportsRestartFrame : no\n\n\n## Configuration\n\n### .vscode/launch.json\n\n*
  startup\n  * required\n  * default : ${workspaceRoot}/test/Spec.hs\n  * debug startup
  file, will be loaded automatically.\n* ghciCmd\n  * required\n  * default: stack
  ghci --test --no-load --no-build\n  * launch ghci command, must be Prelude module
  loaded.  \n    For example, \"ghci -i${workspaceRoot}/src\", \"cabal exec -- ghci
  -i${workspaceRoot}/src\"\n* ghciPrompt\n  * required\n  * default: H>>= \n  * ghci
  command prompt string.\n* logFile\n  * required\n  * default: ${workspaceRoot}/.vscode/phoityne.log\n
  \ * internal log file.\n* logLevel\n  * required\n  * default: WARNING\n  * internal
  log level.\n\n### .vscode/tasks.json\n\n* stack build\n  * required\n  * default:
  stack build\n  * task definition for F6 shortcut key.\n* stack clean & build\n  *
  required\n  * default: stack clean && stack build\n  * task definition for F7 shortcut
  key.\n* stack test\n  * required\n  * default: stack test\n  * task definition for
  F8 shortcut key.\n* stack watch\n  * required\n  * default: stack build --test --no-run-tests
  --file-watch\n  * task definition for F6 shortcut key.\n\n\n"
license-name: BSD3
