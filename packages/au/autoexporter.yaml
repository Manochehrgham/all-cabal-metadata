homepage: https://github.com/tfausak/autoexporter#readme
changelog-type: markdown
hash: 3ce00ce6972171c28a7e4d17781f4de0a5964afe7a6a3953e65238dfec96d8a2
test-bench-deps: {}
maintainer: Taylor Fausak
synopsis: Automatically re-export modules.
changelog: ! '# Change log


  Autoexporter uses [Semantic Versioning][].

  The change log is available through the [releases on GitHub][].


  [Semantic Versioning]: http://semver.org/spec/v2.0.0.html

  [releases on GitHub]: https://github.com/tfausak/autoexporter/releases

'
basic-deps:
  Cabal: ! '>=1.22 && <1.23'
  base: ! '>=4.7 && <4.10'
  filepath: ! '>=1.3 && <1.5'
  autoexporter: -any
  directory: ! '>=1.2 && <1.3'
all-versions:
- '0.1.1'
- '0.1.2'
- '0.1.4'
- '0.2.0'
- '0.2.1'
author: ''
latest: '0.2.1'
description-type: markdown
description: ! "# [Autoexporter][]\n\nAutoexporter automatically re-exports Haskell
  modules.\n\n[![Version badge][]][version]\n[![Build badge][]][build]\n\n-   [Install](#install)\n-
  \  [Use](#use)\n\n## Install\n\n1.  Install [Stack][].\n\n2.  `stack install autoexporter`\n\n##
  Use\n\nLet's say you have a module `M` that just exports some other modules. It
  might\nlook like this:\n\n``` haskell\nmodule M\n    ( module M.A\n    , module
  M.B\n    ) where\n\nimport M.A\nimport M.B\n```\n\nThis code is error-prone. If
  you add a new module, say `M.C`, you have to\nremember to come back to this file
  and re-export it. And this code is tedious\nto write. You have to list each module
  twice. You can do a little better, but\nnot much.\n\n``` haskell\nmodule M (module
  X) where\nimport M.A as X\nimport M.B as X\n```\n\nNow you don't have to write every
  module twice, but you still have to remember\nto re-export everything. And the generated
  documentation for this module\ndoesn't include anything about the exported modules.\n\nAutoexporter
  handles this for you. Instead of either of the above approaches,\nsimply drop this
  into the `M` module:\n\n``` haskell\n{-# OPTIONS_GHC -F -pgmF autoexporter #-}\n```\n\nThat
  will generate code like the first example. A couple caveats:\n\n-   Only immediate
  children will be re-exported. If you use this in some module\n    `M`, it won't
  pull in `M.A.B`.\n\n-   You cannot selectively leave out any modules. You also cannot
  selectively\n    exclude any imports from any of the modules.\n\n    -   This could
  be allowed via `-optF`. I will happily accept patches for\n        this as well.\n\n[Autoexporter]:
  https://github.com/tfausak/autoexporter\n[Version badge]: https://www.stackage.org/package/autoexporter/badge/nightly?label=version\n[version]:
  https://www.stackage.org/package/autoexporter\n[Build badge]: https://travis-ci.org/tfausak/autoexporter.svg?branch=master\n[build]:
  https://travis-ci.org/tfausak/autoexporter\n[Stack]: http://haskellstack.org\n"
license-name: MIT
