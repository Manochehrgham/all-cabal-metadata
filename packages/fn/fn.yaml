homepage: http://github.com/dbp/fn#readme
changelog-type: markdown
hash: a4802a6d831a3e699804f9280ae64c981287835b8950eefcdbacb9645a8eda26
test-bench-deps:
  wai: -any
  base: -any
  hspec: -any
  text: -any
  fn: -any
  http-types: -any
maintainer: dbp@dbpmail.net
synopsis: A functional web framework.
changelog: ! "* 0.1.2.0 Daniel Pattersion <dbp@dbpmail.net> 2015-10-27\n\n  Rename
  `paramOptional` to `paramOpt`, to match `fn-extra`'s `Heist`\n  naming of `attr`
  and `attrOpt`. Remove `paramPresent`, because you\n  can get that behavior by parsing
  to `Text`.\n\n* 0.1.1.0 Daniel Patterson <dbp@dbpmail.net> 2015-10-26\n\n  Rename
  `Param` class to `FromParam`.\n\n* 0.1.0.0 Daniel Patterson <dbp@dbpmail.net> 2015-10-25\n\n
  \ Initial release.\n"
basic-deps:
  bytestring: -any
  wai: -any
  base: ! '>=4.7 && <5'
  text: -any
  blaze-builder: -any
  http-types: -any
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.1.2.0'
author: Daniel Patterson <dbp@dbpmail.net>
latest: '0.1.2.0'
description-type: markdown
description: ! "## Fn (eff-enn) - a functional web framework.\n\n> Or, how to do away
  with the monad transformers, and just use plain\n> functions.\n\n## Example\n\nSee
  the example application in the repository for a full usage, but a minimal application
  is the following:\n\n```\n\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE TemplateHaskell
  \  #-}\n\nimport           Control.Lens\nimport           Data.Monoid\nimport           Data.Text
  \               (Text)\nimport qualified Data.Text                as T\nimport           Network.HTTP.Types\nimport
  \          Network.Wai\nimport           Network.Wai.Handler.Warp\nimport qualified
  Network.Wai.Util         as W\nimport           Web.Fn\n\ndata Ctxt = Ctxt { _req
  :: Request\n                 }\n\nmakeLenses ''Ctxt\n\ninstance RequestContext Ctxt
  where\n  requestLens = req\n\ninitializer :: IO Ctxt\ninitializer = return (Ctxt
  defaultRequest)\n\nmain :: IO ()\nmain = do context <- initializer\n          run
  8000 $ toWAI context app\n\napp :: Ctxt -> IO Response\napp ctxt =\n  route ctxt
  [ end ==> index\n             , path \"foo\" // segment // path \"baz\" /? param
  \"id\" ==> handler]\n    `fallthrough` notFoundText \"Page not found.\"\n\nindex
  :: IO (Maybe Response)\nindex = okText \"This is the index page! Try /foo/bar/baz?id=10\"\n\nhandler
  :: Ctxt -> Text -> Int -> IO (Maybe Response)\nhandler _ fragment i = okText (fragment
  <> \" - \" <> T.pack (show i))\n\n```\n"
license-name: ISC
