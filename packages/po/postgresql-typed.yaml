homepage: https://github.com/dylex/postgresql-typed
changelog-type: ''
hash: 48bacb84e6966c6d6491528d2e486e789fe8032c2597153d2bd7594618a666e1
test-bench-deps:
  base: -any
  time: -any
  network: -any
  postgresql-typed: -any
maintainer: Dylan Simon <dylan-pgtyped@dylex.net>
synopsis: A PostgreSQL access library with compile-time SQL type inference
changelog: ''
basic-deps:
  bytestring: ! '>=0.10.2'
  base: ! '>=4.7 && <5'
  time: <1.5
  text: ! '>=1'
  uuid: ! '>=1.3'
  network: -any
  parsec: -any
  array: -any
  containers: <0.5.6
  postgresql-binary: ! '>=0.5.0'
  binary: -any
  utf8-string: -any
  old-locale: -any
  attoparsec: ! '>=0.10'
  scientific: ! '>=0.3'
  haskell-src-meta: -any
  aeson: ! '>=0.7'
  template-haskell: -any
  cryptohash: ! '>=0.5'
all-versions:
- '0.3.0'
- '0.3.1'
- '0.3.2'
- '0.3.3'
author: Dylan Simon
latest: '0.3.3'
description-type: haddock
description: ! 'Automatically type-check SQL statements at compile time.

  Uses Template Haskell and the raw PostgreSQL protocol to describe SQL statements
  at compile time and provide appropriate type marshalling for both parameters and
  results.

  Allows not only syntax verification of your SQL but also full type safety between
  your SQL and Haskell.

  Supports many built-in PostgreSQL types already, including arrays and ranges, and
  can be easily extended in user code to support any other types.

  Originally based on Chris Forno''s templatepg library.'
license-name: BSD3
