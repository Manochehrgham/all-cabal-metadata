homepage: https://github.com/dylex/postgresql-typed
changelog-type: ''
hash: 25d39c62257f17f9d8b7ff399be314d654c44fb161c7526566400c925e818152
test-bench-deps:
  bytestring: -any
  base: -any
  time: -any
  HDBC: -any
  network: -any
  HUnit: -any
  containers: -any
  postgresql-typed: -any
  convertible: -any
  QuickCheck: -any
maintainer: Dylan Simon <dylan-pgtyped@dylex.net>
synopsis: A PostgreSQL library with compile-time SQL type inference and optional HDBC
  backend
changelog: ''
basic-deps:
  bytestring: ! '>=0.10.2'
  base: ! '>=4.8 && <5'
  time: -any
  HDBC: ! '>=2.2'
  text: ! '>=1'
  uuid: ! '>=1.3'
  network: -any
  array: -any
  memory: ! '>=0.5'
  containers: -any
  postgresql-binary: ! '>=0.8'
  binary: -any
  utf8-string: -any
  old-locale: -any
  cryptonite: ! '>=0.5'
  attoparsec: ! '>=0.12 && <0.14'
  scientific: ! '>=0.3'
  haskell-src-meta: -any
  aeson: ! '>=0.7'
  template-haskell: -any
all-versions:
- '0.3.0'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.4.0'
- '0.4.1'
- '0.4.2'
- '0.4.2.1'
- '0.4.2.2'
- '0.4.3'
- '0.4.4'
- '0.4.5'
- '0.5.0'
author: Dylan Simon
latest: '0.5.0'
description-type: haddock
description: ! 'Automatically type-check SQL statements at compile time.

  Uses Template Haskell and the raw PostgreSQL protocol to describe SQL statements
  at compile time and provide appropriate type marshalling for both parameters and
  results.

  Allows not only syntax verification of your SQL but also full type safety between
  your SQL and Haskell.

  Supports many built-in PostgreSQL types already, including arrays and ranges, and
  can be easily extended in user code to support any other types.


  Also includes an optional HDBC backend that, since it uses the raw PostgreSQL protocol,
  may be more efficient than the normal libpq backend in some cases (though provides
  no more type safety than HDBC-postgresql when used without templates).


  Originally based on Chris Forno''s templatepg library.'
license-name: BSD3
