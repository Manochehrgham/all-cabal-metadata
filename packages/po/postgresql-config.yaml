homepage: https://bitbucket.org/s9gf4ult/postgresql-config
changelog-type: markdown
hash: bb48aee426a837c10a447dcdcc77d9b1400efd4e2c60ee8a117be352cc553735
test-bench-deps: {}
maintainer: s9gf4ult@gmail.com
synopsis: Types for easy adding postgresql configuration to your program
changelog: ! '# CHANGELOG


  ## 0.0.2


  * `base` constraints relaxed

  * changelog added

  * cabal file beautified


  ## 0.0.1


  First version

'
basic-deps:
  bytestring: -any
  base: ! '>=4.6 && <=5.0'
  time: -any
  monad-control: -any
  resource-pool: -any
  postgresql-simple: -any
  mtl: -any
  aeson: -any
all-versions:
- '0.0.1'
- '0.0.2'
author: Aleksey Uimanov
latest: '0.0.2'
description-type: markdown
description: ! "# What?\n\nSimple types and set of functions to quickly add configuration
  of\npostgresql to your Yesod site or whatever.\n\n# How?\n\nAdd separate file or
  section inside your existing config like that\n\n```yml\ndatabase:    \"dbname\"\nhost:
  \       \"127.0.0.1\"        # optional\nport:        \"5432\"             # optional\nuser:
  \       \"dbuser\"\npassword:    \"pass\"\npoolsize:    \"10\"               # optional
  maximum connections in pool\npooltimeout: \"60\"               # optional minimum
  connection lifetime\npoolstripes: \"1\"                # optional count of stripes
  in pool\n```\n\nand then in your program something like that\n\n```haskell\nconf
  <- decodeFile \"pgconfig.yml\"\n         >>= maybe (fail \"Could not parse pgconfig.yml\")
  return\npool <- createPGPool conf\npingPGPool pool\n```\n\nSo now you have a pool
  and can perform queries any way you like."
license-name: BSD3
