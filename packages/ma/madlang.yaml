homepage: https://hub.darcs.net/vmchale/madlang
changelog-type: ''
hash: ca73ce69c7203fe6470c66cb3d3f55450568ad72e20a69056046d2dda6d853e1
test-bench-deps:
  base: -any
  hspec: -any
  text: -any
  megaparsec: -any
  criterion: -any
  madlang: -any
  mtl: -any
  hspec-megaparsec: -any
maintainer: vanessa.mchale@reconfigure.io
synopsis: Randomized templating language DSL
changelog: ''
basic-deps:
  ansi-wl-pprint: -any
  MonadRandom: -any
  base: ! '>=4.8 && <5'
  text: -any
  composition: -any
  megaparsec: ! '>=6.0'
  random-shuffle: -any
  containers: -any
  madlang: -any
  composition-extra: -any
  mtl: -any
  file-embed: -any
  optparse-applicative: -any
  microlens: -any
  template-haskell: -any
  directory: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.5'
- '1.0.0.0'
- '1.0.0.1'
- '1.0.1.0'
- '1.1.1.0'
- '1.1.2.0'
- '1.1.3.0'
- '2.0.0.0'
- '2.0.0.1'
- '2.0.1.0'
- '2.0.1.1'
- '2.0.1.2'
- '2.1.0.0'
- '2.1.0.1'
- '2.1.0.2'
- '2.1.0.3'
- '2.1.0.4'
- '2.1.1.0'
- '2.1.1.1'
- '2.1.1.2'
- '2.1.1.3'
- '2.1.2.0'
- '2.2.0.1'
- '2.3.0.2'
- '2.3.0.3'
- '2.3.0.4'
- '2.3.0.5'
- '2.3.0.6'
- '2.3.1.0'
- '2.3.1.1'
- '2.3.2.0'
- '2.4.0.0'
- '2.4.0.1'
- '2.4.0.2'
- '2.4.1.0'
- '2.4.1.1'
- '2.4.1.2'
- '2.4.1.3'
author: Vanessa McHale
latest: '2.4.1.3'
description-type: markdown
description: ! "# Madlang DSL for generating random text\n\n[![Build Status](https://travis-ci.org/vmchale/madlibs.svg?branch=master)](https://travis-ci.org/vmchale/madlibs)\n\nThis
  is the Madlang DSL for generating text. You specify a template, and Madlang\nwill
  create randomized text from the template.\n\nMadlang is an interpreted language,
  written in Haskell. It runs from the command line, but also provides a Haskell library
  that can be integrated into [other projects](https://github.com/vmchale/toboggan),
  compiled to a [web app](https://github.com/vmchale/madlang-reflex), or used as an
  EDSL.\n\nThere is also a vim plugin for syntax highlighting, available [here](https://github.com/vmchale/madlang-vim).\n\nIt
  can be used for twitter bots (among other things) and provides human-readable\nsyntax
  for generating text.\n\n## Examples\n\n```madlang\n# Madlang is a declarative language.
  The most basic component is a function, viz.\n:define coinFlip\n    1.0 \"heads\"\n
  \   1.0 \"tails\"\n\n:define die\n    1.0 \"1\"\n    1.0 \"2\"\n    1.0 \"3\"\n
  \   1.0 \"4\"\n    1.0 \"5\"\n    1.0 \"6\"\n\n# Madlang also has categories, that
  is, a collection of functions that can be\n# bundled together\n:category gambling\n
  \   coinFlip\n    die\n\n# :return declarations handle the actual output\n:return\n
  \   0.7 gambling\n    0.3 gambling.to_upper # .to_upper is a modifier which make
  the whole string uppercase\n```\n\n### Syntax\n\nThere are two keywords in madlang
  you'll use most: `:define` and `:return`. `:return` is the main string we'll be
  spitting back; there can be only one per file. `:define` on the other hand can be
  used to make functions. These functions are combinations of templates, organizing
  pairs of weights and strings.\n\nThere is a Shakespearean insult generator demo
  available in\n`demo/shakespeare.mad`\n\n## Installation\n\n### Releases\n\n### Nix\n\nIf
  you're on linux or mac, you can get up-to-date binaries via nix.\n\nDownload nix
  with\n\n```\ncurl https://nixos.org/nix/install | sh\n```\n\nFrom there, `nix-env
  -i madlang` will install the proper executables.\n\n### Stack\n\nDownload `stack`
  with\n\n```\ncurl -sSL http://haskellstack.org | sh\n```\n\nThen run `stack install
  madlang --resolver nightly` and you'll get the `madlang` executable installed on
  your path. This may take a bit of time, as it will build *all* dependencies of `madlang`
  first.\n\n### Use\n\nTo use it, try\n\n```\n $ madlang run demo/shakespeare.mad\n```\n\nYou
  can do `madlang --help` if you want a couple other options for debugging.\n\n##
  Using the Haskell library\n\nOne function you might want to use is `runFile`; it
  reads a file and generates randomized text:\n\n```\n Î»:> runFile [] \"demo/shakespeare.mad\"\n
  \"Thou hasty-witted gleeking puttock!\"\n```\n\nTo use the library as an EDSL, there
  are two options: splicing in a file or\nusing a quasi-quoter, viz.\n\n```haskell\ndemo
  :: IO T.Text\ndemo = run\n    $(madFile \"demo/shakespeare.mad\")\n\ndemo :: IO
  T.Text\ndemo = run [|madlang\n:define f\n    1.0 \"heads\"\n    1.0 \"tails\"\n:return\n
  \   1.0 f|]\n```\n\nHaddock documentation of all library functionality is located
  [here](https://hackage.haskell.org/package/madlang#readme).\n\n## Syntax Highlighting\n\nSyntax
  highlighting for the DSL is provided in the vim plugin [here](http://github.com/vmchale/madlang-vim).
  It includes integration with [syntastic](https://github.com/vim-syntastic/syntastic).\n"
license-name: BSD3
