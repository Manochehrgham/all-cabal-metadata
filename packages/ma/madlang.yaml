homepage: https://github.com/vmchale/madlang#readme
changelog-type: ''
hash: 9923d8e195c99cc311d89c7e501ff7e2ac44ea058c4d63c19ecdfdf27358a9df
test-bench-deps:
  base: ! '>=4.9.1.0 && <4.10'
  hspec: ! '>=2.4.3 && <2.5'
  text: ! '>=1.2.2.1 && <1.3'
  megaparsec: ! '>=5.2.0 && <5.3'
  criterion: ! '>=1.1.4.0 && <1.2'
  madlang: ! '>=2.1.1.1 && <2.2'
  mtl: ! '>=2.2.1 && <2.3'
  hspec-megaparsec: ! '>=0.3.1 && <0.4'
maintainer: tmchale@wisc.edu
synopsis: Randomized templating language DSL
changelog: ''
basic-deps:
  mwc-random: ! '>=0.13.5.0 && <0.14'
  ansi-wl-pprint: ! '>=0.6.7.3 && <0.7'
  base: ! '>=4.9.1.0 && <4.10'
  text: ! '>=1.2.2.1 && <1.3'
  composition: ! '>=1.0.2.1 && <1.1'
  megaparsec: ! '>=5.2.0 && <5.3'
  random-shuffle: ! '>=0.0.4 && <0.1'
  containers: ! '>=0.5.7.1 && <0.6'
  madlang: ! '>=2.1.1.1 && <2.2'
  mtl: ! '>=2.2.1 && <2.3'
  optparse-applicative: ! '>=0.13.2.0 && <0.14'
  microlens: ! '>=0.4.8.0 && <0.5'
  directory: ! '>=1.3.0.0 && <1.4'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.5'
- '1.0.0.0'
- '1.0.0.1'
- '1.0.1.0'
- '1.1.1.0'
- '1.1.2.0'
- '1.1.3.0'
- '2.0.0.0'
- '2.0.0.1'
- '2.0.1.0'
- '2.0.1.1'
- '2.0.1.2'
- '2.1.0.0'
- '2.1.0.1'
- '2.1.0.2'
- '2.1.0.3'
- '2.1.0.4'
- '2.1.1.0'
- '2.1.1.1'
author: Vanessa McHale
latest: '2.1.1.1'
description-type: markdown
description: ! "# Madlang DSL for generating random text\n[![Build Status](https://travis-ci.org/vmchale/madlibs.svg?branch=master)](https://travis-ci.org/vmchale/madlibs)\n\nThis
  is the Madlang DSL for generating text. You specify a template, and Madlang\nwill
  create randomized text from the template.\n\nIt is an interpreted language, written
  in Haskell. It runs from the command line, but it is also a Haskell library that
  can be integrated into [other projects](https://github.com/vmchale/toboggan).\n\nThere
  is also a vim plugin for syntax highlighting, available [here](https://github.com/vmchale/madlang-vim).\n\nIt
  can be used for twitter bots (among other things) and provides human-readable syntax
  for the Markov\nchains that are often used to generate text.\n\n## Examples\n\nAn
  example is worth a thousand words, so suppose you wanted to generate a mediocre
  fortune telling bot. You could write the following code:\n\n```madlang\n:define
  person\n    0.7 \"A close friend will \"\n    0.3 \"You will \"\n:define goodfortune\n
  \   0.2 person \"make rain on the planet Mars\"\n    0.8 \"nice things will happen
  today :)\"\n:define fortune\n    0.5 \"drink a boatload of milk\"\n    0.5 \"get
  angry for no reason\"\n:define intense\n    1.0 person \"wrestle in the WWE\".to_upper\n
  \   1.0 person \"bite in a bottle of hot sauce\".to_upper\n:return\n    0.7 person
  fortune\n    0.1 intense\n    0.2 goodfortune\n```\n\n### Syntax\n\nThere are two
  keywords in madlang: `:define` and `:return`. `:return` is the main string we'll
  be spitting back, so there can be only one per file. `:define` on the other hand
  can be used to make multiple templates. These templates are combinations of strings
  (enclosed in quotes) and names of other templates.\n\nOf course, you can't have
  a circular reference with names - if `goodfortune` depends on `fortune` while `fortune`
  depends on `goodfortune`, we end up with either no fortune or an infinite fortune.
  So we throw an error.\n\nThere is also a Shakespearean insult generator demo available
  in\n`demo/shakespeare.mad`\n\n## Using the library\n\nThe main function you'll want
  to use is probably `runFile`; it reads a file and generates randomized text:\n\n```\n
  Î»:> runFile [] \"demo/shakespeare.mad\"\n \"Thou hasty-witted gleeking puttock!\"\n```\n\nHaddock
  documentation of all library functionality is located [here](https://hackage.haskell.org/package/madlang#readme).\n\n##
  Installation\n\n### Releases\n\nIf you're on windows or linux, grabbing release
  binaries simplest. \nFind them [here](https://github.com/vmchale/madlibs/releases).\n\n###
  Nix\n\nIf you're on linux or mac, you can get up-to-date binaries via nix.\n\nDownload
  nix with\n\n```\ncurl https://nixos.org/nix/install | sh\n```\n\nFrom there, `nix-env
  -i madlang` will install the proper executables.\n\n### Stack\n\nDownload `stack`
  with\n\n```\ncurl -sSL http://haskellstack.org | sh\n```\n\nThen run `stack install
  madlang --resolver nightly` and you'll get the `madlang` executable installed on
  your path. This may take a bit of time, as it will build *all* dependencies of `madlang`
  first. \n\n### Use\n\nTo use it, try\n\n```\n $ madlang run demo/shakespeare.mad\n```\n\nYou
  can do `madlang --help` if you want a couple other options for debugging.\n\n##
  Syntax Highlighting\n\nSyntax highlighting for the DSL is provided in the vim plugin
  [here](http://github.com/vmchale/madlang-vim). It includes integration with [syntastic](https://github.com/vim-syntastic/syntastic).\n"
license-name: BSD3
