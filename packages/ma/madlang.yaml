homepage: https://github.com/vmchale/madlang#readme
changelog-type: ''
hash: b40fd1417c9453826fa947efc7b6ebf2e3e1f266e208ad8748dece71ae769563
test-bench-deps:
  base: ! '>=4.9.1.0 && <4.10'
  hspec: ! '>=2.4.3 && <2.5'
  text: ! '>=1.2.2.1 && <1.3'
  megaparsec: ! '>=5.2.0 && <5.3'
  criterion: ! '>=1.1.4.0 && <1.2'
  madlang: ! '>=2.1.0.1 && <2.2'
  mtl: ! '>=2.2.1 && <2.3'
  hspec-megaparsec: ! '>=0.3.1 && <0.4'
maintainer: tmchale@wisc.edu
synopsis: Randomized templating language DSL
changelog: ''
basic-deps:
  mwc-random: ! '>=0.13.5.0 && <0.14'
  ansi-wl-pprint: ! '>=0.6.7.3 && <0.7'
  base: ! '>=4.9.1.0 && <4.10'
  text: ! '>=1.2.2.1 && <1.3'
  composition: ! '>=1.0.2.1 && <1.1'
  megaparsec: ! '>=5.2.0 && <5.3'
  tibetan-utils: ! '>=0.1.1.2 && <0.2'
  containers: ! '>=0.5.7.1 && <0.6'
  madlang: ! '>=2.1.0.1 && <2.2'
  lens: ! '>=4.15.1 && <4.16'
  mtl: ! '>=2.2.1 && <2.3'
  optparse-applicative: ! '>=0.13.2.0 && <0.14'
  directory: ! '>=1.3.0.0 && <1.4'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.5'
- '1.0.0.0'
- '1.0.0.1'
- '1.0.1.0'
- '1.1.1.0'
- '1.1.2.0'
- '1.1.3.0'
- '2.0.0.0'
- '2.0.0.1'
- '2.0.1.0'
- '2.0.1.1'
- '2.0.1.2'
- '2.1.0.0'
- '2.1.0.1'
author: Vanessa McHale
latest: '2.1.0.1'
description-type: markdown
description: ! "# Madlang DSL for generating random text\n[![Build Status](https://travis-ci.org/vmchale/madlibs.svg?branch=master)](https://travis-ci.org/vmchale/madlibs)\n\nThis
  is the Madlang DSL for generating random text. There is also a vim plugin, available
  [here](https://github.com/vmchale/madlang-vim).  \n\nIt enables you to generate
  random templated text with very little effort or expertise. \n\nIt can be used for
  twitter bots and provides human-readable syntax for Markov\nchains often used in
  natural language processing. \n\n## Exmaples\n\nAn exmaple is worth a thousand words,
  so suppose you wanted to generate a mediocre fortune telling bot. You could write
  the following code:\n\n```\n:define person\n    0.7 \"A close friend will \"\n    0.3
  \"You will \"\n:define goodfortune\n    0.2 person \"make rain on the planet Mars\"\n
  \   0.8 \"nice things will happen today :)\"\n:define fortune\n    0.5 \"drink a
  boatload of milk\"\n    0.5 \"get angry for no reason\"\n:return\n    0.8 person
  fortune\n    0.2 goodfortune\n```\n\nThere are two \"statements\" in madlang, `:define`
  and `:return`. `:return` is the main string we'll be spitting back, so there can
  be only one per file. `:define` on the other hand can be used to make multiple templates.
  These templates are combinations of strings (enclosed in quotes) and names of other
  templates.\n\nOf course, you can't have a circular reference with names - if `goodfortune`
  depends on `fortune` while `fortune` depends on `goodfortune`, we end up with either
  no fortune or an infinite fortune. So we throw an error.\n\n## Using the libary\n\nThe
  main function you'll want to use is probably `runFile`; it reads a file and generates
  randomized text:\n\n```\n Î»:> runFile [] \"test/templates/gambling.mad\"\n \"heads\"\n```\n\nHaddock
  documentation of all available functionality is located [here](https://hackage.haskell.org/package/madlang#readme).\n\n##
  Installation\n\n### Releases\n\nIf you're on windows or linux, grabbing release
  binaries is probably the\neasiest. Find them [here](https://github.com/vmchale/madlibs/releases).\n\n###
  Nix\n\nIf you're on linux or mac, you can just grab the binaries via nix.\n\nDownload
  nix with\n\n```\ncurl https://nixos.org/nix/install | sh\n```\n\nFrom there, `nix-env
  -i madlang` will install the proper executables.\n\n### Stack\n\nDownload `stack`
  with\n\n```\ncurl -sSL http://haskellstack.org | sh\n```\n\nThen run `stack install
  madlang --resolver nightly` and you'll get the `madlang` executable installed on
  your path.\n\nYou can also run `stack install` in the appropriate directory after
  cloning this\nrepository. \n\n### Use\n\nTo use it, try\n\n```\n $ madlang run fortune-teller.mad\n```\n\nYou
  can do `madlang --help` if you want a couple other options for debugging.\n\n##
  Syntax Highlighting\n\nSyntax highlighting for the DSL is provided in the vim plugin
  [here](http://github.com/vmchale/madlang-vim). It includes integration with [syntastic](https://github.com/vim-syntastic/syntastic).\n"
license-name: BSD3
