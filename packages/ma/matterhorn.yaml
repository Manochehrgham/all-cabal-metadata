homepage: ''
changelog-type: ''
hash: f32719cb298927ca91cf3c50efd91c9a6adf4120cf3837d4a32a8ff0e4520d40
test-bench-deps:
  mattermost-api-qc: ==40000.0.0
  microlens-platform: ! '>=0.3 && <0.4'
  xdg-basedir: ! '>=0.2 && <0.3'
  bytestring: ! '>=0.10 && <0.11'
  checkers: ! '>=0.4 && <0.5'
  stm: ! '>=2.4 && <2.5'
  base: ! '>=4.7 && <5'
  time: ! '>=1.6 && <1.9'
  unordered-containers: ! '>=0.2 && <0.3'
  text: ! '>=1.2 && <1.3'
  Unique: ! '>=0.4 && <0.5'
  vty: ! '>=5.15.1 && <5.16'
  strict: ! '>=0.3 && <0.4'
  quickcheck-text: ! '>=0.1 && <0.2'
  filepath: ! '>=1.4 && <1.5'
  process: ! '>=1.4 && <1.7'
  connection: ! '>=0.2 && <0.3'
  Hclip: ! '>=3.0 && <3.1'
  config-ini: ! '>=0.1.2 && <0.2'
  text-zipper: ! '>=0.10 && <0.11'
  containers: ! '>=0.5.7 && <0.6'
  base-compat: ! '>=0.9 && <0.10'
  cheapskate: ! '>=0.1 && <0.2'
  tasty-quickcheck: ! '>=0.8 && <0.9'
  mtl: ! '>=2.2 && <2.3'
  hashable: ! '>=1.2 && <1.3'
  tasty-hunit: ! '>=0.9 && <0.10'
  transformers: ! '>=0.4 && <0.6'
  tasty: ! '>=0.11 && <0.12'
  mattermost-api: ==40000.0.0
  string-conversions: ! '>=0.4 && <0.5'
  brick: ! '>=0.19 && <0.20'
  vector: <=0.12.0.1
  directory: ! '>=1.3 && <1.4'
maintainer: matterhorn@galois.com
synopsis: Terminal client for the Mattermost chat system
changelog: ''
basic-deps:
  microlens-platform: ! '>=0.3 && <0.4'
  xdg-basedir: ! '>=0.2 && <0.3'
  bytestring: ! '>=0.10 && <0.11'
  stm-delay: ! '>=0.1 && <0.2'
  unix: ! '>=2.7.1.0 && <2.7.3.0'
  stm: ! '>=2.4 && <2.5'
  base: ! '>=4.8 && <5'
  time: ! '>=1.6 && <1.9'
  unordered-containers: ! '>=0.2 && <0.3'
  text: ! '>=1.2 && <1.3'
  vty: ! '>=5.15.1 && <5.16'
  strict: ! '>=0.3 && <0.4'
  filepath: ! '>=1.4 && <1.5'
  gitrev: ! '>=1.3 && <1.4'
  process: ! '>=1.4 && <1.7'
  connection: ! '>=0.2 && <0.3'
  Hclip: ! '>=3.0 && <3.1'
  config-ini: ! '>=0.1.2 && <0.2'
  text-zipper: ! '>=0.10 && <0.11'
  containers: ! '>=0.5.7 && <0.6'
  base-compat: ! '>=0.9 && <0.10'
  utf8-string: ! '>=1.0 && <1.1'
  cheapskate: ! '>=0.1 && <0.2'
  skylighting: ! '>=0.3.3.1 && <0.4'
  mtl: ! '>=2.2 && <2.3'
  hashable: ! '>=1.2 && <1.3'
  transformers: ! '>=0.4 && <0.6'
  temporary: ! '>=1.2 && <1.3'
  mattermost-api: ==40000.0.0
  aspell-pipe: ! '>=0.3 && <0.4'
  brick: ! '>=0.19 && <0.20'
  vector: <0.13
  directory: ! '>=1.3 && <1.4'
all-versions:
- '30802.1.0'
- '31000.0.0'
- '40000.0.0'
author: matterhorn@galois.com
latest: '40000.0.0'
description-type: markdown
description: ! "[![Build\nStatus](https://travis-ci.org/matterhorn-chat/matterhorn.svg?branch=master)](https://travis-ci.org/matterhorn-chat/matterhorn)\n\n![](logo.png)\n\nMatterhorn
  is a terminal client for the Mattermost chat system.\n\n![](screenshots/screenshot-00.png)\n\n#
  Quick Start\n\nWe provide pre-built binary releases for some platforms. Please see
  the\nrelease list to download a binary release for your platform that matches\nyour
  server version:\n\nhttps://github.com/matterhorn-chat/matterhorn/releases\n\nTo
  fetch a release and run Matterhorn, run the following commands (where\n`VERSION`
  and `PLATFORM` match your setup):\n\n    wget https://github.com/matterhorn-chat/matterhorn/releases/download/<VERSION>/matterhorn-<VERSION>-<PLATFORM>.tar.gz\n
  \   tar xf matterhorn-<VERSION>-<PLATFORM>.tar.gz\n    cd matterhorn-<VERSION>-<PLATFORM>\n
  \   ./matterhorn\n\nWhen you run Matterhorn you'll be prompted for your server information\nand
  credentials. At present `matterhorn` supports only username/password\nauthentication.\n\nNote:
  Version `ABBCC.X.Y` matches Mattermost server version `A.BB.CC`.\nFor example, if
  your Mattermost server version is `3.6.0` then you\nwould download matterhorn version
  `30600.2.4`. See [Our Versioning\nScheme](#our-versioning-scheme) for details.\n\n#
  Configuring\n\nFor configuration options you have two choices:\n\n* Interactive
  configuration entered on each program run\n* Configuration via stored settings in
  a config file\n\nThe first option is useful when trying out the program because
  you can\nget up and running without worrying about making a configuration. Once\nyou're
  ready to make your settings persistent, they can be added to\na configuration file.
  An example configuration file can be found at\n`sample-config.ini`. Any settings
  omitted from the configuration will be\nobtained interactively at startup.\n\nWhen
  looking for configuration files, matterhorn will prefer\n`config.ini` in the current
  working directory, but will look in the\ntypical XDG configuration directories (you'll
  probably want to use\n`$HOME/.config/matterhorn/config.ini`) and as a last resort
  look for a\nglobally-accessible `/etc/matterhorn/config.ini`.\n\n# Using the Client\n\nThe
  user interface has three main areas:\n\n* Left: list of channels you're in, and
  list of users in your team and\n  their statuses (`+` means online, `-` means away,
  and an absent sigil\n  means offline)\n* Right: messages in the current channel\n*
  Bottom: editing area for writing, editing, and replying to messages\n\nYou can use
  built-in keybindings or `/cmd`-style commands to operate\nthe client. To see available
  keybindings and commands, use the default\nbinding of `F1` or run the `/help` command.\n\nTo
  join a channel, use the `/join` command to choose from a list of\navailable channels.
  To create a channel, use `/create-channel`. To leave\na channel, use `/leave-channel`.\n\nTo
  see the members in the current channel, use the `/members` command.\n\nTo send a
  message, type it into the editor and press Enter to send.\nTo send a multi-line
  message, toggle multi-line mode with the default\nbinding `M-e`. Markdown syntax
  is accepted.\n\nTo edit your current message in an external editor (`$EDITOR`),
  use the\ndefault binding of `M-k`.\n\nTo preview the message you're about to send
  (e.g. to check on how your\nMarkdown syntax will be rendered), toggle preview mode
  with the default\nbinding `M-p`.\n\nTo change channels, use `/focus` or one of the
  default bindings `C-n`\n(next channel), `C-p` (previous channel), `C-g` (fast channel
  switch).\n\nTo directly message another user, use `/focus` or `C-g`.\n\n`C-g` channel
  switching mode does a substring match of the input text on\nthe channel and usernames;
  metacharacters `^` and `$` at the beginning\nor end of input, respectively, anchor
  the match in case of multiple\nmatches.\n\nTo switch to the channel you were in
  prior to the current channel, use\nthe default binding `M-s` (swap). The most recent
  channel is marked in\nthe channel list with a \"`<`\" indicator.\n\nTo switch to
  the next channel with unread messages, use the default\nbinding `M-a`.\n\nTo quickly
  show a list of URLs mentioned in the current channel and then\nopen one in your
  local browser, use the default binding of `C-o` and\nconfigure the `urlOpenCommand`
  configuration setting.\n\nTo edit, delete, flag, or reply to a message, select a
  message with\nthe default binding of `C-s`. Use the default binding of `C-c` to\ncancel
  these operations.\n\nMessages that have been flagged can be viewed with either the
  `/flags`\ncommand or `M-8`. This view allows you to select and unflag particular\nmessages,
  as well.\n\nTo enable spell-checking in the message editor, install Aspell and set\n`enableAspell`
  to `True` in your configuration. To override Aspell's\nchoice of master dictionary,
  set the `aspellDictionary` option to the\nname of the dictionary you'd like to use.\n\n#
  Features\n\n* Channel creation, deletion, and membership management commands\n*
  Optimized channel-switching modes: `M-a`, `M-s`, and `C-g`\n* Message posting, editing,
  replying, and deletion\n* Markdown rendering\n* Convenient URL-opening with local
  browser\n* Secure password entry via external command (e.g. OSX keychain)\n* Yank
  verbatim content from messages into the system clipboard\n* Preview message rendering
  before sending\n* Optional smart quoting for efficient Markdown entry\n* Edit messages
  with `$EDITOR`\n* Message editor with kill/yank buffer and readline-style keybindings\n*
  Tab-completion of usernames, channel names, and commands\n* Spell-checking via Aspell\n*
  Syntax highlighting of fenced code blocks in messages (works best in\n  256-color
  terminals)\n* Flagging and unflagging of posts, which are then viewable with `M-8`\n
  \ or `/flags`\n\n# Spell Checking Support\n\nMatterhorn uses `aspell` to perform
  spell-checking of your message\ninput. To use this feature:\n\n * Install `aspell`
  and ensure that your installation includes\n   dictionaries corresponding to your
  `LANG` setting. To check this, ask\n   `aspell` to check some input:\n   ```\n   $
  echo stuff | aspell -a\n   Error: No word lists can be found for the language \"en\".\n
  \  $ echo $LANG\n   en_US\n   ```\n   If Aspell succeeds, the output will look like
  this:\n   ```\n   @(#) International Ispell Version 3.1.20 (but really Aspell 0.60.6.1)\n
  \  *\n   ```\n * Set `enableAspell` to `True` in your `config.ini`\n * Enter any
  message input in the message editor in `matterhorn`. After\n   a short delay after
  you stop typing, misspelled words will turn red.\n\n# Building\n\n`matterhorn` is
  built with the provided `install.sh` script, which\nrequires `git` and an appropriate
  `ghc`/`cabal` installation.\n(Although the name suggests installtion, this will
  just do a build in\n`dist-newstyle`.) This script will pull the appropriate repos
  and build\nthe application. This is required for building Matterhorn since clones\nof
  some of our other dependencies may need to be locally available in\n`deps/` in case
  important changes to those dependencies have not yet\nbeen released.\n\n# Our Versioning
  Scheme\n\nMatterhorn version strings will be of the form `ABBCC.X.Y` where ABBCC\ncorresponds
  to the Mattermost server version supported by the release.\nFor example, if a release
  supports Mattermost server version 1.2.3, the\nABBCC portion of the `matterhorn`
  version will be `10203`. The `X.Y`\nportion of the version corresponds to our own
  version namespace for the\npackage. If the server version changes, `X.Y` SHOULD
  be `0.0`. Otherwise\nthe first component should increment if the package undergoes
  major code\nchanges or functionality changes. The second component alone should\nchange
  only if the package undergoes security fixes or other bug fixes.\n\n# Contributing\n\nIf
  you decide to contribute, that's great! Here are some guidelines you\nshould consider
  to make submitting patches easier for all concerned:\n\n - If you want to take on
  big things, let's have a design/vision\n   discussion before you start coding. Create
  a GitHub issue and we can\n   use that as the place to hash things out. We'll be
  interested to\n   discuss any usability / UI, performance, or compatibility issues.\n
  - Please make changes consistent with the conventions already used in\n   the codebase.\n
  - We follow a few development practices to support our project and it\n   helps
  when contributors are aware of these. Please see `PRACTICES.md`\n   for more information.\n\n#
  Frequently Asked Questions\n\n* Q: Does matterhorn support Gitlab authentication?\n*
  A: No. But we would be happy to work with contributors who are\n  interested in
  investigating what this would take and/or implementing\n  it.  See the Contributing
  section for details.\n"
license-name: BSD3
