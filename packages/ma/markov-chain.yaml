changelog-type: ''
hash: 1f2d4e61a4a044a7a925822cbe936b08d87ec8b2d70c67b99d50bd816ae53c5f
synopsis: Markov Chains for generating random sequences with a user definable behaviour.
changelog: ''
all-versions:
- '0.0.1'
- '0.0.2'
- '0.0.3'
- '0.0.3.1'
- '0.0.3.2'
- '0.0.3.3'
latest: '0.0.3.3'
description-type: haddock
description: ! 'This library can be used to generate random sequences of anything

  with a behaviour that is adapted to some training data.

  Input a marketing text or a speech and

  recompose it to another arbitrary text of this sort.

  Input a dictionary of person names and create new names.

  Input a sequence of notes and get out a new melody.

  Input a set of Haskell modules and generate ...

  nice idea but the result will certainly have neither correct syntax nor types.

  I think, it''s a good thing about Haskell, that you cannot fool it so easily.

  The idea is very simple:

  The algorithm analyses your input\/training data

  with respect to how likely an @a@ or @e@ follows the letters @r@ and @e@.

  Then on recomposition it chooses subsequent letters randomly

  according to the frequencies found in the training data.

  This library is well suited for /bull-shit generators/.'
