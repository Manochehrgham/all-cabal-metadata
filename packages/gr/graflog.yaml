homepage: https://github.com/m-arnold/graflog#readme
changelog-type: ''
hash: 79a82503c68d5556bec07808dc8225b573c51aaf871d4f0fba5073e769ca2918
test-bench-deps:
  base: -any
  hspec: -any
  text: -any
  graflog: -any
  containers: -any
  test-fixture: -any
  mtl: -any
  aeson: -any
maintainer: marnold@cj.com
synopsis: Monadic correlated log events
changelog: ''
basic-deps:
  bytestring: -any
  base: ! '>=4.7 && <5'
  text: -any
  containers: -any
  mtl: -any
  text-conversions: -any
  aeson: -any
all-versions:
- '0.1.0'
- '0.1.1'
- '0.1.2'
- '1.0.0'
- '2.0.0'
- '3.0.0'
- '4.0.0'
- '5.0.0'
- '6.0.0'
- '6.1.0'
- '6.1.1'
author: Michael Adlai Arnold
latest: '6.1.1'
description-type: markdown
description: ! "# Graflog\n\nMonadic correlated log events!\n\n##To Use:\n\n- you
  must force stdout to flush after each line, or logs won't appear in a timely manner:
  call `Graflog.Console.enableStdoutLineBuffering` at the top of your main function.\n\n-
  CorrelationId and EventId generation are not yet supported, so you must create an
  event manually:\n  - inside do notation: `let event = Event (CorrelationId 0) (EventId
  0)`\n  - followed at some point by: `logJSON $ event (Action \"some kind of metadata\")
  (toLog dataToLog)`\n\n##To Do:\n\n- CorrelationId and EventId generation\n- Generic
  derivation of ToLog / ToJSON instances\n- Support for non-JSON logging?\n"
license-name: BSD3
