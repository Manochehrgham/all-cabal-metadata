changelog-type: ''
hash: ddb371dd3ba1cf01ac001ad4239e0f943d0c6e5aa95e0c8885123bb28513f102
synopsis: Grammar products and higher-dimensional grammars
changelog: ''
all-versions:
- '0.0.0.2'
- '0.0.0.3'
- '0.0.0.4'
- '0.1.0.0'
latest: '0.1.0.0'
description-type: haddock
description: ! 'An algebra of liner and context-free grammars.


  This library provides the implementation of our theory of

  algebraic operations over linear and context-free grammars.

  Using algebraic operations, it is possible to construct complex

  dynamic programming algorithms from simpler "atomic" grammars.


  Our most important contribution is the definition of a product

  of grammars which naturally leads to alignment-like algorithms

  on multiple tapes.


  An efficient implementation of the resulting grammars is

  possible via the ADPfusion framework. The @FormalGrammars@

  library provides the required "Template Haskell" machinery.

  GramarProducts can be integrated as a plugin into the existing

  transformation from DSL to ADPfusion. Haskell users can just

  use the QQ function provided in the .QQ module.


  Alternatively, the resulting grammars can also be

  pretty-printed in various ways (LaTeX, ANSI, Haskell module

  with signature and grammar).




  Formal background can be found in two papers:


  @

  Christian Höner zu Siederdissen, Ivo L. Hofacker, and Peter F. Stadler.

  Product Grammars for Alignment and Folding.

  2014. IEEE/ACM Transactions on Computational Biology and Bioinformatics. 99.

  <http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6819790>

  @


  and


  @

  Christian Höner zu Siederdissen, Ivo L. Hofacker, and Peter F. Stadler

  How to Multiply Dynamic Programming Algorithms

  Brazilian Symposium on Bioinformatics (BSB 2013)

  Lecture Notes in Bioinformatics 8213, Springer, Heidelberg

  @

'
