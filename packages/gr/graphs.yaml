changelog-type: markdown
hash: 882fb16d212162f5d33570056a27be9bc019fc35891bc85bb8dfadea9440d916
test-bench-deps: {}
synopsis: A simple monadic graph library
changelog: ! '0.6

  ---

  * Fixed the `dfs` `enterVertex` and `exitVertex` order, they were wrong before.

  * Factored out a common visitor model for both `bfs` and `dfs`.


  0.5

  ---

  * Added `enterEdge` to `bfs` and `dfs`.

  * Exported `AdjacencyListGraph` and `AdjacencyMatrixGraph`.


  0.4.1

  -----

  * Added CHANGELOG

  * Removed my intra-package dependency upper bounds


'
basic-deps:
  void: ! '>=0.5.5.1 && <1'
  base: ! '>=4 && <5'
  array: ! '>=0.3 && <0.7'
  containers: ! '>=0.3 && <0.6'
  transformers: ! '>=0.2.2 && <0.5'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.3.1'
- '0.3.2'
- '0.3.2.1'
- '0.3.2.2'
- '0.3.2.3'
- '0.4'
- '0.4.0.1'
- '0.4.0.3'
- '0.4.1'
- '0.5'
- '0.5.0.1'
- '0.6'
- '0.6.0.1'
latest: '0.6.0.1'
description-type: markdown
description: ! 'graphs

  ==========


  [![Build Status](https://secure.travis-ci.org/ekmett/graphs.png?branch=master)](http://travis-ci.org/ekmett/graphs)


  This provides a "not-very-Haskelly" API for calculating traversals of graphs that
  may be too large to fit into memory.


  Contact Information

  -------------------


  Contributions and bug reports are welcome!


  Please feel free to contact me through github or on the #haskell IRC channel on
  irc.freenode.net.


  -Edward Kmett

'
