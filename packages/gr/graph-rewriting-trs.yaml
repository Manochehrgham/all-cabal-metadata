changelog-type: ''
hash: b2005945c7d3082481ec63c9b49ac40945b07c1d06809dd332e1b1c4ac84e67b
test-bench-deps: {}
synopsis: Evaluate first-order applicative term rewrite systems interactively using
  graph reduction
changelog: ''
basic-deps:
  base-unicode-symbols: ! '>=0.2 && <0.3'
  OpenGL: ! '>=2.4 && <2.10'
  GLUT: ! '>=2.2 && <2.6'
  uu-parsinglib: ! '>=2.7 && <2.9'
  base: ! '>=4 && <4.8'
  graph-rewriting-gl: ! '>=0.6.9 && <0.8'
  filepath: ! '>=1.1 && <1.4'
  graph-rewriting: ! '>=0.7.1 && <0.8'
  containers: ! '>=0.4 && <0.6'
  graph-rewriting-layout: ! '>=0.5.1 && <0.6'
  directory: ! '>=1.0 && <1.3'
all-versions:
- '0.1'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.1.4'
- '0.1.5'
- '0.1.6'
latest: '0.1.6'
description-type: haddock
description: ! 'Given a set of term rewriting rules and an initial term with this
  tool you can interactively evaluate the corresponding term graph. The employed rule
  set has to be defined in one or more files. In the examples-directory a few rewriting
  systems are already supplied. To see how it works invoke the with the SKI-combinator
  rules and an initial term as arguments: @trs examples/ski.trs "SK(S(KIS)K)I"@. On
  how to interact with the application see the "GraphRewriting.GL.UI" module of the
  graph-rewriting-gl package.'
