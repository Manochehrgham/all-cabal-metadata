changelog-type: markdown
hash: 3680cc6bd22b5ec6beac931d34f274c2affceac7d6308246bed6314717e5057d
test-bench-deps: {}
synopsis: High level Haskell bindings to LXC (Linux containers).
changelog: ! '0.3.1.1

  ---

  * loose `mtl` and `transformers` dependencies for `lxc` to play nice with other
  libraries


  0.3.1

  ---

  * added `snapshotDestroy` to `System.LXC.Container`

  * minor documentation improvements


  0.3

  ---

  * introduced `LXC` monad

  * `transformers` and `mtl` added to dependencies

  * convert container-related functions to use `LXC` monad

  * `listContainers` functions now return `[Container]` instead of `[(String, Ptr
  C''lxc_container)]`

  * removed `mkContainer` function

  * remove `getRef` and `dropRef` from `System.LXC.Container`

  * `Container` is now pure Haskell data structure

  * added `examples/`

  * `Internal` gains `C''lxc_container` marshalling helpers (e.g. `withC''lxc_container`)

  * fixed potential segfaults in `snapshotList` and `list*Containers`


  0.2

  ---

  * LXC errors through `getLastError` function

  * `getDaemonize` function

  * `start` function fixed (and changed type)

  * `Show` instance for `BDevSpecs`

  * updated documentation (haddock and README)


  0.1.1

  ---

  * fixed package (`bindings-lxc` dependency)

  * exposed `System.LXC.Internal.AttachOptions` module

'
basic-deps:
  base: ! '>=4.7 && <4.8'
  bindings-lxc: ! '>=0.2 && <0.3'
  mtl: -any
  transformers: ! '>=0.2'
all-versions:
- '0.1'
- '0.1.1'
- '0.2'
- '0.3'
- '0.3.1'
- '0.3.1.1'
latest: '0.3.1.1'
description-type: markdown
description: ! "lxc\n===\n\n[![Build Status](https://travis-ci.org/fizruk/lxc.svg?branch=master)](https://travis-ci.org/fizruk/lxc)\n\nHigh
  level Haskell bindings to LXC (Linux containers).\n\nThe library provides Haskell
  LXC API, wrapping <http://hackage.haskell.org/package/bindings-lxc bindings-lxc
  package>. \n\n## Requirements\n\nBefore installation make sure you have LXC installed
  on your system with header files and static library.\n\nOn Ubuntu 14.04 LTS (Trusty
  Tahr):\n\n```\n$ sudo apt-get install lxc-dev\n```\n\nOn previous Ubuntu versions
  (including 12.04 LTS Precise Pangolin) standard repositories do not contain `liblxc1`
  package.\nYou might want to use `ppa:ubuntu-lxc/stable` repository instead:\n\n```\n$
  sudo apt-get install software-properties-common python-software-properties\n$ sudo
  add-apt-repository ppa:ubuntu-lxc/stable\n$ sudo apt-get update\n$ sudo apt-get
  install lxc-dev\n```\n\n## Installation\n\nGet the latest stable version from Hackage:\n\n```\n$
  cabal install lxc\n```\n\nor clone this repository:\n\n```\n$ git clone https://github.com/fizruk/lxc.git\n$
  cd lxc\n$ cabal install\n```\n\n## Documentation\n\nHaddock documentation is available
  at http://fizruk.github.io/lxc/docs/\n\n## Usage\n\nMost of container-related functions
  (e.g. `start`, `attach`, `destroy`) perform in a `LXC` monad.\nTo run `LXC a` computation
  you need to specify a container using `withContainer` function.\nWhen working with
  a single container it might be handy to have an alias like this:\n\n```haskell\nlet
  containerName = withContainer (Container \"container-name\" configPath)\n```\n\nYou
  can start using Haskell LXC API bindings similar to a command line tool from GHCi:\n\n```\n$
  ghci\n>>> import System.LXC\n>>> let trusty = withContainer (Container \"trusty\"
  Nothing)\n>>> trusty $ create \"download\" Nothing Nothing [] [\"-d\", \"ubuntu\",
  \"-r\", \"trusty\", \"-a\", \"amd64\"]\nUsing image from local cache\nUnpacking
  the rootfs\n\n---\nYou just created an Ubuntu container (release=trusty, arch=amd64,
  variant=default)\nThe default username/password is: ubuntu / ubuntu\nTo gain root
  privileges, please use sudo.\n\nTrue\n>>> trusty $ start False []\nTrue\n>>> trusty
  state\nContainerRunning\n>>> trusty $ attachRunWait defaultAttachOptions \"echo\"
  [\"echo\", \"Hello, world!\"]\nHello, world!\nJust ExitSuccess\n>>> trusty stop\nTrue\n>>>
  Just trustySnapC <- trusty $ clone (Just \"trusty-snap\") Nothing [CloneSnapshot]
  Nothing Nothing Nothing []\n>>> let trustySnap = withContainer trustySnapC\n>>>
  trustySnap $ start False []\nTrue\n>>> trustySnap getInterfaces\n[\"eth0\",\"lo\"]\n>>>
  trustySnap $ getIPs \"eth0\" \"inet\" 0\n[\"10.0.3.135\"]\n>>> trustySnap $ shutdown
  (-1)\nTrue\n>>> trustySnap state\nContainerStopped\n```\n\nFor more examples, please
  see `examples/` folder.\n\n## Contributing\n\nContributions and bug reports are
  welcome!\n\nPlease feel free to contact me via GitHub or on the #haskell IRC channel
  on irc.freenode.net.\n\n-Nickolay Kudasov\n"
