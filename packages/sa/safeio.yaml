homepage: ''
changelog-type: text
hash: 4d5e06aa83b9a43cadb2d6fb9788d41522a620935271678cb5d1f81909d2d871
test-bench-deps:
  test-framework-hunit: -any
  test-framework: -any
  unix: -any
  base: ! '>4 && <5'
  filepath: -any
  HUnit: -any
  test-framework-th: -any
  directory: -any
maintainer: Luis Pedro Coelho
synopsis: Write output to disk atomically
changelog: ! "Version 0.0.1.0 2017-05-29 by luispedro\n\t* First version\n"
basic-deps:
  unix: -any
  base: ! '>4 && <5'
  filepath: -any
  directory: -any
all-versions:
- '0.0.1.0'
author: Luis Pedro Coelho
latest: '0.0.1.0'
description-type: markdown
description: ! "# SafeIO: Haskell library for safe (atomic) IO\n\nThis is a simple
  module, which enables writing in atomic mode. It\nimplements the following 4 step
  procedure:\n\n1. Open a temporary file in the same directory as the final output.\n2.
  Write to this temporary file.\n3. Close and sync the file.\n4. Atomically rename
  the file to its final destination.\n\n## Example\n\n    import System.IO.SafeWrite\n
  \   ...\n    main = do\n        withOutputFile \"output.txt\" $ \\hout -> do\n            hPutStrLn
  hout \"Hello World\"\n\n\n## Author\n\nLuis Pedro Coelho [Email](mailto:luis@luispedro.org)\n"
license-name: MIT
