changelog-type: ''
hash: 1fc3f151f6262ca07a20653633b676fbca42da6967408d5c08556dbe4600c6fc
synopsis: Type-safe file handling
changelog: ''
all-versions:
- '0.1'
- '0.2'
- '0.2.0.1'
- '0.3'
- '0.3.0.1'
- '0.4'
- '0.5'
- '0.6'
- '0.6.1'
- '0.7'
- '0.8'
- '0.9'
- '0.10'
- '0.10.0.1'
- '0.11'
latest: '0.11'
description-type: haddock
description: ! 'This package adds three safety features on top of the regular

  @System.IO@ file handles and operations:


  * Regional file handles. Files must be opened in a /region/. When

  the region terminates all opened files are automatically

  closed. The main advantage of regions is that the handles to

  the opened files can not be returned from the region which

  ensures no I/O with closed files is possible.


  * Explicit IOModes. The regional file handles are parameterized

  by the IOMode in which they were opened. All operations on

  handles explicitly specify the needed IOMode. This way it is

  impossible to read from a write-only handle or write to a

  read-only handle for example.


  * Type-safe filepath creation and manipulation

  using the @pathtype@ package.


  The primary technique used in this package is called \"Lightweight

  monadic regions\" which was invented by Oleg Kiselyov and

  Chung-chieh Shan. See:


  <http://okmij.org/ftp/Haskell/regions.html#light-weight>


  This technique is implemented in the @regions@ package which is

  re-exported from @safer-file-handles@.


  See the @safer-file-handles-examples@ package for examples how

  to use this package:


  @git clone <https://github.com/basvandijk/safer-file-handles-examples>@


  See the @safer-file-handles-bytestring/text@ package for

  @ByteString/Text@ operations on regional file handles.'
