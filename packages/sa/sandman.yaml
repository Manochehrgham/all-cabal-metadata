homepage: https://github.com/abhinav/sandman
changelog-type: markdown
hash: 3bd30fc680d5b20af5430e63a44b86badd6598e75ef06c78e953405acf65c075
test-bench-deps: {}
maintainer: mail@abhinavg.net
synopsis: Manages Cabal sandboxes to avoid rebuilding packages.
changelog: ! '0.1.0.0

  =======


  -   Initial release.


'
basic-deps:
  Cabal: -any
  base: ! '>=4.7 && <4.9'
  text: ! '>=1.2'
  unix-compat: ! '>=0.4'
  filepath: ! '>=1.3'
  process: ! '>=1.2'
  containers: ! '>=0.5'
  optparse-applicative: ! '>=0.11'
  directory: ! '>=1.2'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
author: Abhinav Gupta
latest: '0.1.0.1'
description-type: markdown
description: ! "`sandman` helps manage Cabal sandboxes so that you can avoid rebuilding\npackages
  that you use often.\n\nIt does so by managing a global collection of sandboxes that
  were built\nseparately. You can `mix` any number of these sandboxes into the package\ndatabase
  for your project-specific sandbox.\n\n    Usage: sandman COMMAND\n\n    Available
  options:\n      -h,--help                Show this help text\n\n    Available commands:\n
  \     list                     List sandman sandboxes or the packages in them\n
  \     new                      Create a new sandman sandbox\n      destroy                  Delete
  a sandman sandbox\n      install                  Install a new package\n      mix
  \                     Mix a sandman sandbox into the current project\n      clean
  \                   Remove all mixed sandboxes from the current project\n\n# Example
  usage\n\nFirst, we create a sandbox that will contain packages we commonly use for\ndevelopment.\n\n
  \   $ sandman list\n    lens (25 packages)\n\n    $ sandman new common\n    [..]\n
  \   Created sandbox common.\n\nManaged sandboxes can be told to use specific versions
  of GHC. This information\nwill be propagated to projects with which this sandbox
  is mixed.\n\n    $ sandman new common --with-ghc ghc-7.6.3\n\nWe install our commonly
  used packages\n\n    $ sandman install common classy-prelude \n    [..]\n    Configuring
  classy-prelude-0.10.2...\n    Building classy-prelude-0.10.2...\n    Installed classy-prelude-0.10.2\n\n
  \   $ sandman list\n    lens (25 packages)\n    common (45 packages)\n\n    $ sandman
  list common\n    [..]\n    classy-prelude-0.10.2\n    [..]\n\n    $ sandman destroy
  lens\n    Removed sandbox lens.\n\n    $ sandman list\n    common (45 packages)\n\n
  \   $ sandman install common optparse-applicative aeson\n\nNext, we mix it into
  an existing project.\n\n    $ cd my_project\n    $ cabal sandbox init\n    $ cabal
  sandbox hc-pkg list | grep classy-prelude\n    <nothing>\n\n    $ sandman mix common\n
  \   Mixing 45 new packages into package DB at [..]\n    Rebuilding package cache.\n\n
  \   $ cabal sandbox hc-pkg list | grep classy-prelude\n      classy-prelude-0.10.2\n\n
  \   $ cabal repl\n    GHCi, version 7.8.3: http://www.haskell.org/ghc/  :? for help\n
  \   Loading package ghc-prim ... linking ... done.\n    Loading package integer-gmp
  ... linking ... done.\n    Loading package base ... linking ... done.\n    λ> import
  ClassyPrelude\n    λ> \n\n    $ sandman clean\n    Removing all mixed sandboxes.\n
  \   Removed 45 packages.\n    Rebuilding package cache.\n\n`sandman` can also mix
  in only specific packages and their dependencies from\nmanaged sandboxes.\n\n    $
  sandman mix common --only system-filepath --only system-fileio\n    Mixing 3 new
  packages into package DB at [..]\n    Rebuilding package cache.\n\n    $ cabal sandbox
  hc-pkg list\n    [..]\n      system-fileio-0.3.16\n      system-filepath-0.4.13.1\n
  \     text-1.2.0.4\n\nThe `--executables` option may be used to include executables
  from a sandbox.\n\n    $ sandman mix common --executables --only hspec\n    Mixing
  15 new packages into package DB at [..]\n    Rebuilding package cache.\n\n    $
  ls .cabal-sandbox/bin\n    hspec-discover\n\n# Status\n\nSandman is stable enough
  for basic use cases but there are surely a lot of\nunexplored corner cases. Feel
  free to try it out. Keep in mind that since\nyou're breaking sandbox boundaries,
  there is a higher chance of running into\nversion conflicts.\n\n# Installation\n\nYou
  can download and install `sandman` from Hackage by using,\n\n    $ cabal install
  sandman\n\nOr if you would rather not pollute your global package database, install
  it\ninto a sandbox and copy the executable somewhere on your `$PATH`.\n\n    $ mkdir
  tmp && cd tmp\n    $ cabal sandbox init\n    $ cabal install sandman\n    $ cp .cabal-sandbox/bin/sandman
  ~/bin\n"
license-name: MIT
