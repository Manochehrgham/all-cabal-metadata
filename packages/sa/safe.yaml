homepage: https://github.com/ndmitchell/safe#readme
changelog-type: text
hash: 24640073bf8fa0c89a18bbe5c33e202b937aadf996efae79dd6b11fc7ada4622
test-bench-deps: {}
maintainer: Neil Mitchell <ndmitchell@gmail.com>
synopsis: Library of safe (exception free) functions
changelog: ! "Changelog for Safe\n\n0.3.10\n    #15, add Safe cycle\n0.3.9\n    #9,
  add Safe toEnum\n0.3.8\n    #8, remove unnecessary Ord constraints from Foldable
  functions\n0.3.7\n    Add Def variants of the Exact functions\n0.3.6\n    #6, remove
  unnecessary Ord constraints from maximumBy/minimumBy\n0.3.5\n    Add Safe elemIndexJust/findIndexJust
  functions\n    Add Safe scan functions\n    Add Safe minimumBy/maximumBy functions\n
  \   Add a module of Exact functions\n    Add Foldable minimum functions\n    Clean
  up the Foldable module, deprecate the Safe variants\n0.3.4\n    #1, improve the
  string clipping in readNote\n0.3.3\n    #494, add foldl1' wrappings\n0.3.2\n    Add
  a Safe.Foldable module\n0.3.1\n    Add findJust, safe wrapping of fromJust/find\n0.3\n
  \   Start of changelog\n"
basic-deps:
  base: <5
all-versions:
- '0.2'
- '0.3'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.3.4'
- '0.3.5'
- '0.3.6'
- '0.3.7'
- '0.3.8'
- '0.3.9'
- '0.3.10'
author: Neil Mitchell <ndmitchell@gmail.com>
latest: '0.3.10'
description-type: markdown
description: ! '# Safe [![Hackage version](https://img.shields.io/hackage/v/safe.svg?style=flat)](https://hackage.haskell.org/package/safe)
  [![Build Status](https://img.shields.io/travis/ndmitchell/safe.svg?style=flat)](https://travis-ci.org/ndmitchell/safe)


  A library wrapping `Prelude`/`Data.List` functions that can throw exceptions, such
  as `head` and `!!`. Each unsafe function has up to four variants, e.g. with `tail`:


  * <tt>tail :: [a] -> [a]</tt>, raises an error on `tail []`.

  * <tt>tailMay :: [a] -> <i>Maybe</i> [a]</tt>, turns errors into `Nothing`.

  * <tt>tailDef :: <i>[a]</i> -> [a] -> [a]</tt>, takes a default to return on errors.

  * <tt>tailNote :: <i>String</i> -> [a] -> [a]</tt>, takes an extra argument which
  supplements the error message.

  * <tt>tailSafe :: [a] -> [a]</tt>, returns some sensible default if possible, `[]`
  in the case of `tail`.


  This package is divided into three modules:


  * `Safe` contains safe variants of `Prelude` and `Data.List` functions.

  * `Safe.Foldable` contains safe variants of `Foldable` functions.

  * `Safe.Exact` creates crashing versions of functions like `zip` (errors if the
  lists are not equal) and `take` (errors if there are not enough elements), then
  wraps them to provide safe variants.

'
license-name: BSD3
