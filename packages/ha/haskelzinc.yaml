homepage: ''
changelog-type: ''
hash: 5de39a9df01827d6c7d9cef91b91002623fd56292d511300226180fbeecd0c24
test-bench-deps: {}
maintainer: klara.mar@cs.kuleuven.be
synopsis: CP in Haskell through MiniZinc
changelog: ''
basic-deps:
  base: ! '>=4.8 && <4.9'
  filepath: ! '>=1.4 && <1.5'
  process: ! '>=1.2 && <1.3'
  parsec: ! '>=3.1 && <3.2'
  containers: ! '>=0.5 && <0.6'
  pretty: ! '>=1.1 && <1.2'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
author: Klara Marntirosian
latest: '0.1.0.1'
description-type: markdown
description: ! "# Requirements\r\n * GHC 7.10.3\r\n * MiniZinc 2.0\r\n * To use choco
  solver, also required:\r\n   - JDK 8+\r\n   - THe following jar files can be also
  found in the choco/ directory of this library's repo [https://github.com/GRACeFUL-project/haskelzinc]\r\n
  \    - choco_solver (with dependencies) [http://choco-solver.org/Download?q=releases]\r\n
  \    - choco_parser [https://oss.sonatype.org/content/repositories/releases/org/choco-solver/choco-parsers/3.3.3/]\r\n
  \    - ANTLR >4.5.2 java runtime binaries [http://www.antlr.org/download.html]\r\n\r\n\r\n#
  Use\r\n\r\n  1. Create a directory called \"HZconf\" in the directory of your Haskell
  code that calls testModel or iTestModel.\r\n  2. In HZconf create a text file \"conf.txt\".\r\n
  \ 3. Write the corresponding paths by adding the equal sign (=) and the correct
  path.\r\n    * MINIZINC_DIR: the directory where mzn2fzn and flatzinc executables
  are\r\n    * CHOCO_PARSER: the path of the choco parser java library\r\n    * CHOCO_SOLVER:
  the path of the choco solver java libaray\r\n    * ANTLR: the path of the antlr
  java libaray\r\n\r\n    Example:\r\n      MINIZINC_DIR = path/to/dir"
license-name: BSD3
