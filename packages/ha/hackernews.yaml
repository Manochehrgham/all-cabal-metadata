homepage: ''
changelog-type: ''
hash: 5d44753a28bcea42440f139d9c4737debafe6cfa8a07dbfa75570990f72a4c72
test-bench-deps:
  base: -any
  hspec: ! '>=1.11.4'
  hackernews: -any
  transformers: -any
maintainer: djohnson.m@gmail.com
synopsis: API for Hacker News
changelog: ''
basic-deps:
  either: ! '>=4.3.1'
  bytestring: ! '>=0.10.4.0'
  base: ==4.*
  time: ! '>=1.4.2'
  text: ! '>=1.2.0.0'
  io-streams: ! '>=1.1.4.6'
  http-streams: ! '>=0.7.2.2'
  attoparsec: ! '>=0.12.1.2'
  transformers: ! '>=0.3.0.0'
  HsOpenSSL: ! '>=0.10.5'
  aeson: ! '>=0.8.0.1'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.2.0.1'
- '0.2.1.1'
- '0.2.2.1'
- '0.2.2.2'
- '0.2.3.2'
- '0.3.0.0'
- '0.3.1.0'
- '0.3.1.1'
- '0.3.1.2'
- '0.4.0.0'
- '0.5.0.0'
- '0.5.0.1'
author: David Johnson
latest: '0.5.0.1'
description-type: markdown
description: ! "hackernews \n==========\n![Hackage](https://img.shields.io/hackage/v/hackernews.svg)\n![Hackage
  Dependencies](https://img.shields.io/hackage-deps/v/hackernews.svg)\n![Haskell Programming
  Language](https://img.shields.io/badge/language-Haskell-blue.svg)\n![BSD3 License](http://img.shields.io/badge/license-BSD3-brightgreen.svg)\n![Build
  Status](https://img.shields.io/circleci/project/dmjio/hackernews.svg)\n\nHacker
  News API for Haskell\n\n###Documentation\n<https://github.com/HackerNews/API>\n\nNow
  it supports GHCJS and can be used in the browser! Just install it using:\n```bash\ncabal
  install --ghcjs --flags=ghcjs\n```\n\n###Tests\n```bash\ncabal configure && cabal
  test\n```\n\n```bash\nHacker News API Tests\n  - Retrieves a Story\n  - Retrieves
  a Comment\n  - Retrieves a User\n  - Retrieves a Poll\n  - Retrieves a Pollopt\n
  \ - Retrieves Top Stories\n  - Retrieves Max Item\n  - Retrieves Updates\n\nFinished
  in 0.0019 seconds\n8 examples, 0 failures\n```\n\n###Usage\n```haskell \nmodule
  Example where\n\nimport           Control.Monad  (liftM3)\nimport           Web.HackerNews
  (UserId (..), getUser, hackerNews)\n\nmain :: IO ()\nmain = print =<< hackerNews
  (liftM3 (,,) one two three)\n  where\n    one   = getUser (UserId \"dmjio\")\n    two
  \  = getUser (UserId \"dmj\")\n    three = getUser (UserId \"abs\")\n```\n\n```bash\n(Just
  (User { userAbout = Nothing\n            , userCreated = 2013-08-06 16:49:23 UTC\n
  \           , userDelay = 0\n            , userId = UserId \"dmjio\"\n            ,
  userKarma = 6\n            , userSubmitted = [8433827,8429256,8429161,8429069,8374809,8341570,7919268,7825469,7350544,7327291,6495994,6352317,6168527,6168524,6167639]})\n
  \     , \nJust (User { userAbout = Nothing\n           , userCreated = 2007-04-11
  05:57:35 UTC\n           , userDelay = 0\n           , userId = UserId \"dmj\"\n
  \          , userKarma = 1\n           , userSubmitted = [11737]\n           }),\nNothing)\n```"
license-name: MIT
