homepage: http://github.com/GaloisInc/haskell-tor
changelog-type: ''
hash: 4051e541f93d7556f650836c014cfb816f706ccc2cdc3a6a4428e18a179fafff
test-bench-deps:
  test-framework-hunit: ! '>=0.3 && <0.5'
  bytestring: ! '>=0.10 && <0.11'
  test-framework: ! '>=0.8 && <0.10'
  hourglass: ! '>=0.2.9 && <0.4'
  base: ! '>=4.7 && <5.0'
  time: ! '>=1.4 && <1.6'
  haskell-tor: ! '>=0.1 && <0.3'
  test-framework-quickcheck2: ! '>=0.3 && <0.5'
  asn1-types: ! '>=0.2 && <0.4'
  pretty-hex: ! '>=1.0 && <1.4'
  HUnit: ! '>=1.2 && <1.4'
  memory: ! '>=0.7 && <0.9'
  x509: ! '>=1.6 && <1.8'
  binary: ! '>=0.7 && <0.9'
  cryptonite: ! '>=0.6 && <0.8'
  QuickCheck: ! '>=2.7 && <2.9'
maintainer: awick@galois.com
synopsis: A Haskell Tor Node
changelog: ''
basic-deps:
  cereal: ! '>=0.4 && <0.6'
  bytestring: ==0.10.*
  fingertree: ! '>=0.1 && <0.3'
  hourglass: ! '>=0.2.9 && <0.4'
  pure-zlib: ! '>=0.4 && <0.5'
  base: ! '>=4.7 && <5.0'
  time: ! '>=1.4 && <1.6'
  base64-bytestring: ! '>=1.0 && <1.2'
  haskell-tor: ! '>=0.1 && <0.3'
  tls: ! '>=1.3.2 && <1.5'
  asn1-types: ==0.3.*
  pretty-hex: ! '>=1.0 && <1.2'
  network: ! '>=2.5 && <2.7'
  async: ! '>=2.0.2 && <2.2'
  x509-store: ! '>=1.6 && <1.8'
  monadLib: ! '>=3.7 && <3.9'
  array: ! '>=0.5 && <0.7'
  memory: ! '>=0.7 && <0.9'
  containers: ! '>=0.5 && <0.7'
  x509: ! '>=1.6 && <1.8'
  hans: ! '>=2.6 && <2.8'
  binary: ! '>=0.7.1 && <0.9'
  cryptonite: ! '>=0.6 && <0.8'
  attoparsec: ! '>=0.13 && <0.15'
  asn1-encoding: ==0.9.*
all-versions:
- '0.1.0.0'
author: Adam Wick
latest: '0.1.0.0'
description-type: markdown
description: ! "# A Tor Implementation in Haskell\n\n    This version of haskell-tor
  is (C) 2015 Galois, Inc., and distributed under\n    a standard, three-clause BSD
  license. Please see the file LICENSE,\n    distributed with this software, for specific
  terms and conditions.\n\n## What is Tor?\n\nTor is a secure onion routing network
  for providing anonymized access to both\nthe public Internet as well as a series
  of Tor-internal hidden services. Much\nmore information about Tor can be found at
  http://torproject.org.\n\nMany thanks to all the hard work that project has put
  into developing and\nevangelizing Tor.\n\n## What is in this repository?\n\nThis
  repository contains a Tor implementation in Haskell. It is eventually\ndesigned
  to be a fully-compliant Tor implementation, but at the moment lacks\nsome features:\n\n
  \ * Support for finding or implementing hidden services.\n  * Proper flow-control
  support.\n  * Statistics updating.\n  * Directory server support.\n\nUsing this
  library as an entrance node (i.e., to create anonymized connections\nto hosts on
  the Internet) is fairly well tested and should be functional. Relay\nand exit node
  support is implemented but much less well tested. For whichever\nuse case you have,
  please report any problems you find to the GitHub issue\ntracker.\n\n## Building
  haskell-tor\n\nThis library uses cabal as its build system, and should work for
  Mac, Unix, and\nHaLVM-based installations. Windows support may work ... we just
  haven't tested\nit.\n\nIf you're building with the HaLVM, please add the constraints
  `--constraint \"tls\n+hans\"`, `--constraint \"tls -network\"`, and `-f-network`
  to your build flags,\nand if you're using the `integer-simple` library (for example,
  to avoid GPL\nentanglements with unikernels), you should add the constraints `--constraint\n\"cryptonite
  -integer-gmp\"`, `--constraint \"scientific +integer-simple\"` and\n`--constraint
  \"scientific < 0.3.4.1\"`.\n\nIn either case, we strongly suggest using sandboxes
  to keep everything nice and\ntidy.\n\n## Important Note\n\nThis is an early implementation
  of Tor that has not been peer-reviewed. Those\nwith a true, deep need for anonymity
  should strongly consider using the mainline\nTor client until and unless this version
  receives appropriate extensions,\ntesting, and review.\n\n## Usage\n\nAs with most
  Haskell packages, this package can either be used as a library or\nas a binary package.
  Currently, the executable binary will simply perform an\nexample get from whatismyip.com.
  Extending this to support a wider range of\nfeatures is an open issue.\n"
license-name: BSD3
