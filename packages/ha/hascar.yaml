homepage: https://github.com/VirtualForgeGmbH/hascar
changelog-type: markdown
hash: 67b7b144b9991ab56430eed5a67f0be9f2f9269b5d93b0252d61337df69e5507
test-bench-deps:
  bytestring: -any
  hascar: -any
  path: -any
  base: -any
  hex: -any
  conduit: -any
  cryptohash: -any
maintainer: Hans-Christian Esperer <hc@hcesperer.org>
synopsis: Decompress SAPCAR archives
changelog: ! "0.2.1.2\n-------\n\n- Remove version constraints, rely on stack/nixos
  instead\n  for dependency management\n\n0.2.1.1\n-------\n\n- Make it compile with
  ghc-8.0.2\n\n0.2.1.0\n-------\n\n- Make \"SapCar\" a real type instead of a type
  synonym\n- Use the type system to prevent \"CarEntry\"s to escape the monad\n\n0.2.0.0\n-------\n\n-
  Use ST unboxed arrays instead of Data.Sequence and\n  avoid usage of \"temporary
  lists\" during conversion\n  to ByteStrings\n- Add a parameter \"size\" to the decompressBlock\n
  \ function for more efficiency\n- Rename the decompressBlock function to\n  decompressBlocks
  for clarity\n- Limit the maximum SAPCAR block size to make memory\n  exhaustion
  attacks a bit less easy\n- Compile the application single threadedly for more\n
  \ efficiency (yes, it does help in this case!)\n\n0.1.1.0\n-------\n\n- Expose the
  decompressBlock function directly\n"
basic-deps:
  exceptions: -any
  bytestring: -any
  ansi-wl-pprint: -any
  hascar: -any
  unix: -any
  path: -any
  base: ! '>=4.7 && <5'
  time: -any
  text: -any
  filepath: -any
  gitrev: -any
  conduit: -any
  array: -any
  containers: -any
  binary: -any
  mtl: -any
  transformers: -any
  optparse-applicative: -any
  directory: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.1.0'
- '0.2.0.0'
- '0.2.0.1'
- '0.2.0.2'
- '0.2.1.0'
- '0.2.1.1'
- '0.2.1.2'
author: Hans-Christian Esperer <hc@hcesperer.org>
latest: '0.2.1.2'
description-type: markdown
description: ! "[![Build Status](https://travis-ci.org/VirtualForgeGmbH/hascar.svg?branch=master)](https://travis-ci.org/VirtualForgeGmbH/hascar)\n\n#
  What is hascar?\n\nHASCAR is a free unzip utility for SAP's SAPCAR format.\n\nIt
  is implemented 100% in haskell, including the lzh decompression\nroutine.\n\nThis
  is not yet in a stable state. It should successfully unpack lzh\ncompressed files
  and uncompressed files.\n\nThe SAPCAR container format decoder is based on [research
  done by\nMartin Gallo](https://github.com/CoreSecurity/pysap) with further\ninvestigation
  by Hans-Christian Esperer <hc@hcesperer.org>, who also\ndid the LZH decompressor
  reimplementation.\n\nWhat is supported:\n\n* Reading SAPCAR archives version 2.01
  only\n* Unpacking files that are LZH compressed\n* Unpacking files that are not
  compressed\n\nTODO:\n\n* Implement LZC\n* Implement packing functionality\n* Maybe
  implement signature checking\n* Make the LZH algorithm more efficient (the author
  just about\n  started to learn haskell when he embarked on implementing\n  that
  algorithm :-)\n  => Some work on this has been done; more is required.\n* Implement
  CRC checking\n\n# Performance\n\nThe lzh algorithm is implemented in pure haskell.
  I have spent some time\noptimizing it, but more can certainly be done. Currently
  the performance is\nprobably acceptable for most cases, but it is still a factor
  ten compared to\nthe reference C implementation:\n\nDecompressing a 136 MB payload
  (34MB compressed), the performance looks like\nthis:\n\n    hascar: 7.94user 0.10system
  0:08.05elapsed 99%CPU (0avgtext+0avgdata 102676maxresident)k\n\n    sapcar: 0.84user
  0.07system 0:00.92elapsed 99%CPU (0avgtext+0avgdata 8244maxresident)k\n\nBoth executed
  on a single CPU core. (Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz)\n\n# Installing
  hascar\n\n# nixos\n\nUsers of [nixos](https://nixos.org) can simply install hascar
  by issuing\n\"nix-env -iaP haskellPackages.hascar\". Or if you only need it temporarily,
  open\na nix-shell like this: \"nix-shell -p haskellPackages.hascar\"\n\n# FreeBSD/GNU_Linux/OS
  X/Windows\n\nTo compile and install, first [get stack](\nhttp://docs.haskellstack.org/en/stable/README/),
  then issue:\n\nstack build && stack install\n\nhascar will be installed to ~/.local/bin
  \ . You should set your PATH variable to point\nto this directory.\n\n# Verifying
  signatures\n\nYou can use hascar to decompress and subsequently inspect the contents\nof
  a SAR file. You would normally not install the contents from\nuntrusted SAR files,
  so there is no need to verify the signature.\n\nIf, OTOH, you do trust the original
  SAR file but wish to verify the\nsignature to ensure you are indeed dealing with
  the original SAR\nfile's contents, like when installing patches to your SAP system,
  then\nyou will need to do the following: Since hascar at this time does not\nsupport
  verifying signatures, you need to use SAP's own tool for that\npurpose. You can
  use hascar to initially decompress the archive. This\nstep ensures that only archives
  with a correct and untampered file\nheader and compressed contents are accepted.
  Then, use SAP's own\nsapcar tool to create a new archive from the decompressed archive.
  You\nwill now have a trusted archive, because you created it yourself. You\ncan
  then use SAP's original tool to decompress it again, while\nverifying the signature.\n\nThe
  only attack vector left is the signature checking algorithm.\n\n# Usage\n\nRun hascar
  with the -h flag to get help. The basic usage should be the\nsame as with SAP(R)'s
  sapcar tool. It should be noted that the used\ncommand line parser is a bit more
  strict than what you might be used\nto.\n\n# Example run:\n\n    hc@espererh-pc
  ~/I/hascar λ hascar -xtvf /home/hc/test.sar \n    ┌────────────────────────────────────────────────────────────────────┐\n
  \   │          hascar, Copyright (C) 2016, Virtual Forge GmbH.           │\n    │
  \                                                                   │\n    │                   Maint.:
  Hans-Christian Esperer                   │\n    │             <hans-christian.esperer@virtualforge.com>
  \             │\n    │                                                                    │\n
  \   │             hascar comes with ABSOLUTELY NO WARRANTY;              │\n    │
  \                for details read the LICENSE file.                 │\n    │     This
  is free software, and you are welcome to redistribute     │\n    │   it under certain
  conditions; see the LICENSE file for details.   │\n    └────────────────────────────────────────────────────────────────────┘\n
  \   \n    5 entrie(s) in the archive.\n    \n    All entries:\n    -rw-r--r-- 0
  root root 9302     Jun 10 00:00 sapcar-usage\n    -rw-r--r-- 0 root root 267468
  \  Jun 10 00:00 pg244.txt\n    -rw-r--r-- 0 root root 34857    Jun 10 00:00 man.txt\n
  \   -rw-r--r-- 0 root root 10485764 Jun 10 00:00 foo\n    -rw-r--r-- 0 root root
  30       Jun 10 00:00 date\n    \n    Extracting \"sapcar-usage\"\n    Extracting
  \"pg244.txt\"\n    Extracting \"man.txt\"\n    Extracting \"foo\"\n    Extracting
  \"date\"\n    \n    hc@espererh-pc ~/I/hascar λ\n"
license-name: GPL-2
