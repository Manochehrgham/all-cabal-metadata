homepage: https://github.com/well-typed/hackage-security
changelog-type: markdown
hash: 9b325f15cc5e85afab265337f3c950c0ab9721f6a4f2e05d0312a1729da9e769
test-bench-deps:
  bytestring: -any
  Cabal: -any
  base: -any
  time: -any
  HUnit: -any
  hackage-security: -any
  containers: -any
  tar: -any
  zlib: -any
  network-uri: -any
  tasty-hunit: -any
  temporary: -any
  tasty: -any
maintainer: edsko@well-typed.com
synopsis: Hackage security library
changelog: ! "0.5.0.0\n-------\n* Treat deserialization errors as verification errors
  (#108, #75)\n* Avoid `Content-Length: 0` in GET requests (#103)\n* Fix bug in Trusted\n*
  Build tar-index incrementally (#22)\n* Generalize 'Repository' over the representation
  of downloaded remote files.\n* Update index incrementally by downloading delta of
  `.tar.gz` and writing only\n  tail of local `.tar` file (#101). Content compression
  no longer used.\n* Take a lock on the cache directory before updating it, and no
  longer use\n  atomic file ops (pointless since we now update some files incrementally)\n*
  Code refactoring/simplification.\n* Support for ed25519 >= 0.0.4\n* `downloadPackage`
  no longer takes a callback.\n* API for accessing the Hackage index contents changed;
  it should now be\n  easier for clients to do their own incremental updates should
  they wish\n  to do so.\n* Relies on tar >= 0.4.4\n* Removed obsolete option for
  downloading the compressed index (we now _always_\n  download the compressed index)\n*
  Path module now works on Windows (#118)\n* Dropped support for ghc 7.2\n* Replaced
  uses of Int with Int54, to make sure canonical JSON really is\n  canonical (#141).\n\n0.4.0.0\n-------\n*
  Allow clients to pass in their own time for expiry verification\n  (this is an API
  change hence the major version bump)\n* Export .Client.Formats (necessary to define
  new Repositories)\n* Start work on basic test framework\n\n0.3.0.0\n-------\n* Don't
  use compression for range requests (#101)\n* Download index.tar.gz, not index.tar,
  if range request fails (#99)\n* Minor change in the LogMessage type (hence the API
  version bumb)\n* Include ChangeLog.md in the tarball (#98)\n\n0.2.0.0\n-------\n*
  Allow for network-2.5 (rather than network-uri-2.6)\n* Use cryptohash rather than
  SHA\n* Various bugfixes\n* API change: introduce RepoOpts in the Remote repository\n\n0.1.0.0\n-------\n*
  Initial beta release\n"
basic-deps:
  bytestring: ! '>=0.10.2 && <0.11'
  Cabal: ! '>=1.14 && <1.25'
  base: ! '>=4.8 && <5'
  time: ! '>=1.2 && <1.6'
  base64-bytestring: ! '>=1.0 && <1.1'
  ed25519: ! '>=0.0 && <0.1'
  filepath: ! '>=1.2 && <1.5'
  network: ! '>=2.6 && <2.7'
  parsec: ! '>=3.1 && <3.2'
  containers: ! '>=0.4 && <0.6'
  tar: ! '>=0.4.4 && <0.5'
  ghc-prim: -any
  zlib: ! '>=0.5 && <0.7'
  network-uri: ! '>=2.6 && <2.7'
  mtl: ! '>=2.2 && <2.3'
  transformers: ! '>=0.4 && <0.5'
  template-haskell: -any
  directory: ! '>=1.2.2.0 && <1.3'
  cryptohash: ! '>=0.11 && <0.12'
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.5.0.0'
author: Edsko de Vries
latest: '0.5.0.0'
description-type: haddock
description: ! 'The hackage security library provides both server and

  client utilities for securing the Hackage package server

  (<http://hackage.haskell.org/>).  It is based on The Update

  Framework (<http://theupdateframework.com/>), a set of

  recommendations developed by security researchers at

  various universities in the US as well as developers on the

  Tor project (<https://www.torproject.org/>).


  The current implementation supports only index signing,

  thereby enabling untrusted mirrors. It does not yet provide

  facilities for author package signing.


  The library has two main entry points:

  "Hackage.Security.Client" is the main entry point for

  clients (the typical example being @cabal@), and

  "Hackage.Security.Server" is the main entry point for

  servers (the typical example being @hackage-server@).


  This is a beta release.'
license-name: BSD3
