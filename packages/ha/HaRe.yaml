changelog-type: ''
hash: 7f6b1cc7238c4b5e8b31d07e26a3efb0d572d5f5252aa2c4fdca7bf3d69b4259
synopsis: the Haskell Refactorer.
changelog: ''
all-versions:
- '0.6'
- '0.6.0.1'
- '0.6.0.2'
- '0.7.0.0'
- '0.7.0.1'
- '0.7.0.2'
- '0.7.0.3'
- '0.7.0.4'
- '0.7.0.5'
- '0.7.0.6'
- '0.7.0.7'
- '0.7.0.8'
- '0.7.0.9'
- '0.7.1.0'
- '0.7.1.1'
- '0.7.1.2'
- '0.7.1.3'
- '0.7.1.4'
- '0.7.1.5'
- '0.7.1.6'
- '0.7.1.7'
- '0.7.2.0'
- '0.7.2.1'
- '0.7.2.2'
- '0.7.2.3'
- '0.7.2.4'
- '0.7.2.5'
- '0.7.2.6'
- '0.7.2.7'
- '0.7.2.8'
latest: '0.7.2.8'
description-type: haddock
description: ! 'A Haskell 2010 refactoring tool. HaRe supports the full

  Haskell 2010 standard, through making use of the GHC API.


  It is tested against GHC 7.4.x and 7.6.x (via travis-ci.org)


  It currently only has emacs integration built in, community input

  welcome for others.


  Warning: This is alpha code. Always commit code to your version

  control system before refactoring. The developers make no

  warranties, use at your own risk.


  Despite the disclaimer, HaRe attempts to operate in a safe way, by

  first writing new files with proposed changes, and only swapping

  these with the originals when the change is accepted. In the

  process the original file is renamed to have the current date/time

  as a suffix. Thus it should be possible to (manually) undo changes.


  The renaming refactoring seems reasonably reliable, as does lifting

  and demoting


  At the moment parsing of any file with FFI exports will fail.

'
