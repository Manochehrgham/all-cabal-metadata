changelog-type: ''
hash: c381871cbbf047bc67cace7b53ae8aef7adb460bd4aee830d8dd9475fe92c0fc
synopsis: Runtime code generation for x86 machine code
changelog: ''
all-versions:
- '0.2'
- '0.4'
- '0.4.1'
- '0.4.2'
- '0.4.3.0'
- '0.5.0.0'
latest: '0.5.0.0'
description-type: haddock
description: ! 'The package contains the following components:


  * An x86 assembler.  We provide both low-level code generation in

  module "Harpy.X86CodeGen" as well as a (slightly) higher-level

  implementation in module "Harpy.X86Assembler", which figures out

  addressing modes based on an instruction''s operand types.


  * An x86 disassembler which knows most of the opcodes available on

  modern x86 processors and can display its output both in the style

  used in Intel documents an in AT&T style, like the GNU tools. The

  disassembler can be found in module "Harpy.X86Disassembler".  The

  disassembler is re-exported from the disassembler package for

  compatibility with earlier Harpy releases.


  * Some abstractions over the abovementioned code generation modules,

  such as automatic label management and code generation

  combinators (for if-then-else statements, while-loops, functions)

  (module "Harpy.X86CGCombinators").


  * All the above modules use the code generation monad defined in module

  "Harpy.CodeGenMonad".


  * The Darcs repo and two tutorials on using Harpy can be found at

  Harpy''s homepage: <http://uebb.cs.tu-berlin.de/harpy/>'
