changelog-type: ''
hash: 35f08da6a229ec13966a95f37de7e7a2dc2a0a2427e1fdfadfea8524697e9b50
synopsis: Compare the public API of different versions of a Hackage library
changelog: ''
all-versions:
- '0.1.0.0'
latest: '0.1.0.0'
description-type: haddock
description: ! 'Please see <https://github.com/blitzcode/hackage-diff github.com/blitzcode/hackage-diff>
  for a user''s manual.


  Sample output


  > Downloading Hoogle DBs...

  > Parsing Hoogle DBs...

  > Comparing Hoogle DBs...

  >

  > --- Diff for | 0.2 → 0.3.5.2 | ---

  >

  > + Data.Serialize.IEEE754

  >   + getFloat32be :: Get Float

  >   + getFloat32le :: Get Float

  >   + getFloat64be :: Get Double

  >   + getFloat64le :: Get Double

  >   + putFloat32be :: Float -> Put

  >   + putFloat32le :: Float -> Put

  >   + putFloat64be :: Double -> Put

  >   + putFloat64le :: Double -> Put

  > × Data.Serialize

  >   + instance Serialize a => GSerialize (K1 i a)

  >   + instance GSerialize a => GSerialize (M1 i c a)

  >   + instance (GSerialize a, GSerialize b) => GSerialize (a :*: b)

  >   + instance GSerialize U1

  >   + instance GSerialize a => GetSum (C1 c a)

  >   + instance (GetSum a, GetSum b, GSerialize a, GSerialize b) => GetSum (a :+:
  b)

  >   + instance GSerialize a => PutSum (C1 c a)

  >   + instance (PutSum a, PutSum b, GSerialize a, GSerialize b) => PutSum (a :+:
  b)

  >   + instance SumSize (C1 c a)

  >   + instance (SumSize a, SumSize b) => SumSize (a :+: b)

  >   + decodeLazy :: Serialize a => ByteString -> Either String a

  >   + encodeLazy :: Serialize a => a -> ByteString

  >   - data Get a

  >   - type Put = PutM ()

  >   - type Putter a = a -> Put

  >   - getWord8 :: Get Word8

  >   - putWord8 :: Putter Word8

  > × Data.Serialize.Get

  >   + Done :: r -> ByteString -> Result r

  >   + instance Eq More

  >   + Fail :: String -> Result r

  >   + instance Functor Result

  >   + Partial :: (ByteString -> Result r) -> Result r

  >   + data Result r

  >   + instance Show r => Show (Result r)

  >   + ensure :: Int -> Get ByteString

  >   + runGetLazy :: Get a -> ByteString -> Either String a

  >   + runGetLazyState :: Get a -> ByteString -> Either String (a, ByteString)

  >   + runGetPartial :: Get a -> ByteString -> Result a

  >   × New: isolate :: Int -> Get a -> Get a

  >     Old: isolate :: String -> Int -> Get a -> Get a

  > × Data.Serialize.Put

  >   + runPutLazy :: Put -> ByteString

  >   + runPutMLazy :: PutM a -> (a, ByteString)

  > · Data.Serialize.Builder

  >

  > [+ Added] [- Removed] [× Modified] [· Unmodified]'
