homepage: https://github.com/tvh/hasql-migration
changelog-type: ''
hash: 31bd5d4730f172d7dd6da5e7bc476cd670c0d00b40b3af0de3471583a9e03ce1
test-bench-deps:
  hasql: ! '>=0.19 && <0.20'
  bytestring: ! '>=0.10 && <0.11'
  base: ! '>=4.7 && <5.0'
  hspec: ! '>=2.2 && <2.4'
  hasql-migration: -any
  transformers: ! '>=0.3 && <0.6'
  hasql-transaction: ! '>=0.4 && <0.5'
maintainer: Timo von Holtz <tvh@tvholtz.de>
synopsis: PostgreSQL Schema Migrations
changelog: ''
basic-deps:
  hasql: ! '>=0.19 && <0.20'
  bytestring: ! '>=0.10 && <0.11'
  base: ! '>=4.7 && <5.0'
  data-default-class: ! '>=0.0.1 && <0.2'
  time: ! '>=1.4 && <1.7'
  base64-bytestring: ! '>=1.0 && <1.1'
  text: ! '>=1.2 && <1.3'
  contravariant: ! '>=1.3 && <1.5'
  hasql-transaction: ! '>=0.4 && <0.5'
  directory: ! '>=1.2 && <1.4'
  cryptohash: ! '>=0.11 && <0.12'
all-versions:
- '0.1.0'
- '0.1.1'
- '0.1.2'
author: Timo von Holtz <tvh@tvholtz.de>
latest: '0.1.2'
description-type: markdown
description: ! "# PostgreSQL Migrations for Haskell\n\n[![Build Status](https://api.travis-ci.org/tvh/hasql-migration.png)](https://travis-ci.org/tvh/hasql-migration)\n\nWelcome
  to hasql-migrations, a tool for helping you with\nPostgreSQL schema migrations.
  This is a port of\n[postgresql-simple-migration](https://github.com/ameingast/postgresql-simple-migration)\nfor
  use with hasql.\n\n## Why?\nDatabase migrations should not be hard. They should
  be under version control\nand documented in both your production systems and in
  your project files.\n\n## What?\nThis library executes SQL/Haskell migration scripts
  and keeps track of their\nmeta information.\n\nScripts are be executed exactly once
  and any changes to scripts will cause\na run-time error notifying you of a corrupted
  database.\n\nThe meta information consists of:\n* an MD5 checksum of the executed
  script to make sure already existing\n  scripts cannot be modified in your production
  system.\n* a time-stamp of the date of execution so you can easily track when a
  change\n  happened.\n\nThis library also supports migration validation so you can
  ensure (some)\ncorrectness before your application logic kicks in.\n\n## How?\nTODO\n\n##
  Compilation and Tests\nThe program is built with the _cabal_ build system. The following
  command\nbuilds the library, the standalone binary and the test package.\n\n```bash\ncabal
  configure --enable-tests && cabal build -j\n```\n\nTo execute the tests, you need
  a running PostgreSQL server with an empty\ndatabase called _test_. Tests are executed
  through cabal as follows:\n\n```bash\ncabal configure --enable-tests && cabal test\n```\n\nTo
  build the project in a cabal sandbox, use the following code:\n\n```bash\ncabal
  sandbox init\ncabal install -j --only-dependencies --enable-tests --disable-documentation\ncabal
  configure --enable-tests\ncabal test\n```\n\nTo remove the generated cabal sandbox,
  use:\n```bash\ncabal sandbox delete\n```\n\n## To Do\n* Collect executed scripts
  and check if already executed scripts have been\n  deleted.\n"
license-name: BSD3
