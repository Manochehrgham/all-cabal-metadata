changelog-type: ''
hash: e458111e0da469b305389386e59afa2e5baa182cf08d06220ff6d934b27b817e
test-bench-deps:
  JuicyPixels: -any
  bytestring: -any
  mwc-random: -any
  hashabler: -any
  base: -any
  text: -any
  criterion: -any
  array: -any
  integer-gmp: ! '>=0.2'
  hashable: -any
  random: -any
  deepseq: -any
  QuickCheck: -any
  primitive: -any
  vector: -any
  directory: -any
synopsis: Principled, cross-platform & extensible hashing of types, including an implementation
  of the FNV-1a algorithm.
changelog: ''
basic-deps:
  bytestring: -any
  base: ! '>=4.4 && <5'
  text: -any
  array: -any
  integer-gmp: ! '>=0.2'
  ghc-prim: -any
  template-haskell: -any
  primitive: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
latest: '0.1.0.2'
description-type: haddock
description: ! 'This package is a rewrite of the @hashable@ library by Milan Straka
  and

  Johan Tibell, having the following goals:


  - Extensibility; it should be easy to implement a new hashing algorithm on

  any @Hashable@ type, for instance if one needed more hash bits


  - Honest hashing of values, and principled hashing of algebraic data types

  (see e.g. hashable issues #74 and #30)


  - Cross-platform consistent hash values, with a versioning guarantee. Where

  possible we ensure morally identical data hashes to indentical values

  regardless of processor word size and endianness.


  - Make implementing identical hash routines in other languages as painless

  as possible. We provide an implementation of a simple hashing algorithm

  (FNV-1a) and make an effort define Hashable instances in a way that is

  well-documented and sensible, so that e.g. one can (hopefully) easily

  implement string hashing routine in JavaScript that will match the way we

  hash strings here.


  /Versioning/: Except for instances where we specifically note that we make

  no promise of consistency, changes to hash values entail a major version

  number bump.'
