changelog-type: ''
hash: c40b53aee98659e34f2383439dacd26bb98228056283a05d25e55b3c8226f4a7
test-bench-deps:
  http-client: ! '>=0.3'
  bytestring: ! '>=0.10'
  base: ==4.*
  time: -any
  aws: -any
  text: ! '>=1.1'
  monad-control: ! '>=0.3'
  lifted-base: ! '>=0.2'
  tagged: ! '>=0.7'
  quickcheck-instances: ! '>=0.3'
  tasty-quickcheck: ! '>=0.8'
  mtl: ! '>=2.1'
  transformers-base: ! '>=0.4'
  transformers: ! '>=0.3'
  tasty: ! '>=0.8'
  errors: ! '>=1.4.7 && <2.0'
  QuickCheck: ! '>=2.7'
  resourcet: ! '>=1.1'
  aeson: ! '>=0.7'
synopsis: Amazon Web Services (AWS) for Haskell
changelog: ''
basic-deps:
  cereal: ! '>=0.3 && <0.5'
  bytestring: ! '>=0.9 && <0.11'
  case-insensitive: ! '>=0.2 && <1.3'
  xml-conduit: ! '>=1.2 && <1.3'
  base: ! '>=4.6 && <5'
  time: ! '>=1.1.4 && <1.6'
  base64-bytestring: ==1.0.*
  unordered-containers: ! '>=0.2'
  text: ! '>=0.11'
  monad-control: ! '>=0.3'
  filepath: ! '>=1.1 && <1.5'
  network: ==2.*
  lifted-base: ! '>=0.1 && <0.3'
  conduit: ! '>=1.1 && <1.3'
  data-default: ! '>=0.5.3 && <0.6'
  conduit-extra: ! '>=1.1 && <1.2'
  tagged: ! '>=0.7 && <0.9'
  containers: ! '>=0.4'
  blaze-builder: ! '>=0.2.1.4 && <0.5'
  utf8-string: ! '>=0.3 && <1.1'
  old-locale: ==1.*
  mtl: ==2.*
  byteable: ==0.1.*
  base16-bytestring: ==0.1.*
  attoparsec: ! '>=0.11 && <0.13'
  transformers: ! '>=0.2.2 && <0.5'
  scientific: ! '>=0.3'
  http-conduit: ! '>=2.1 && <2.2'
  resourcet: ! '>=1.1 && <1.2'
  http-types: ! '>=0.7 && <0.9'
  aeson: ! '>=0.6'
  safe: ! '>=0.3 && <0.4'
  vector: ! '>=0.10'
  directory: ! '>=1.0 && <1.3'
  cryptohash: ! '>=0.11 && <0.12'
all-versions:
- '0.0.1'
- '0.0.2'
- '0.0.3'
- '0.0.4'
- '0.0.5'
- '0.0.6'
- '0.1'
- '0.2'
- '0.3'
- '0.3.1'
- '0.3.2'
- '0.4.0'
- '0.4.0.1'
- '0.4.1'
- '0.5.0'
- '0.6.0'
- '0.6.1'
- '0.6.2'
- '0.7.0'
- '0.7.1'
- '0.7.2'
- '0.7.3'
- '0.7.4'
- '0.7.5'
- '0.7.6'
- '0.7.6.1'
- '0.7.6.2'
- '0.7.6.3'
- '0.7.6.4'
- '0.8.0'
- '0.8.1'
- '0.8.2'
- '0.8.3'
- '0.8.4'
- '0.8.5'
- '0.8.6'
- '0.9'
- '0.9.1'
- '0.9.2'
- '0.9.3'
- '0.9.4'
- '0.10'
- '0.10.1'
- '0.10.2'
- '0.10.3'
- '0.10.4'
- '0.10.5'
- '0.11'
- '0.11.1'
- '0.11.2'
- '0.11.3'
- '0.11.4'
- '0.12'
latest: '0.12'
description-type: text
description: ! "#+TITLE: Amazon Web Services for Haskell\n\n* Introduction\n\nThe
  ~aws~ package attempts to provide support for using Amazon Web Services like S3
  (storage), SQS (queuing) and others\nto Haskell programmers. The ultimate goal is
  to support all Amazon Web Services.\n\n* Installation\n\nMake sure you have a recent
  GHC installed, as well as cabal-install, and installation should be as easy as:\n\n#+BEGIN_SRC
  bash\n$ cabal install aws\n#+END_SRC\n\nIf you prefer to install from source yourself,
  you should first get a clone of the ~aws~ repository, and install it from\ninside
  the source directory:\n\n#+BEGIN_SRC bash\n$ git clone https://github.com/aristidb/aws.git\n$
  cd aws\n$ cabal install\n#+END_SRC\n\n* Using aws\n\n** Concepts and organisation\n\nThe
  aws package is organised into the general =Aws= module namespace, and subnamespaces
  like =Aws.S3= for each Amazon Web\nService. Under each service namespace in turn,
  there are general support modules and and =Aws.<Service>.Commands.<Command>=\nmodule
  for each command. For easier usage, there are the \"bundling\" modules =Aws= (general
  support), and =Aws.<Service>=.\n\nThe primary concept in aws is the /Transaction/,
  which corresponds to a single HTTP request to the Amazon Web Services.\nA transaction
  consists of a request and a response, which are associated together via the =Transaction=
  typeclass. Requests\nand responses are simple Haskell records, but for some requests
  there are convenience functions to fill in default values\nfor many parameters.\n\n**
  Example usage\n\nTo be able to access AWS resources, you should put your into a
  configuration file. (You don't have to store it in a file,\nbut that's how we do
  it in this example.) Save the following in ~$HOME/.aws-keys~.\n\n#+BEGIN_EXAMPLE\ndefault
  AccessKeyID SecretKey\n#+END_EXAMPLE\n\nYou do have to replace AccessKeyID and SecretKey
  with the Access Key ID and the Secret Key respectively, of course.\n\nThen, copy
  this example into a Haskell file, and run it with ~runghc~ (after installing aws):\n\n#+BEGIN_SRC
  haskell\n{-# LANGUAGE OverloadedStrings #-}\n\nimport qualified Aws\nimport qualified
  Aws.S3 as S3\nimport           Data.Conduit (($$+-))\nimport           Data.Conduit.Binary
  (sinkFile)\nimport           Network.HTTP.Conduit (withManager, responseBody)\n\nmain
  :: IO ()\nmain = do\n  {- Set up AWS credentials and the default configuration.
  -}\n  cfg <- Aws.baseConfiguration\n  let s3cfg = Aws.defServiceConfig :: S3.S3Configuration
  Aws.NormalQuery\n\n  {- Set up a ResourceT region with an available HTTP manager.
  -}\n  withManager $ \\mgr -> do\n    {- Create a request object with S3.getObject
  and run the request with pureAws. -}\n    S3.GetObjectResponse { S3.gorResponse
  = rsp } <-\n      Aws.pureAws cfg s3cfg mgr $\n        S3.getObject \"haskell-aws\"
  \"cloud-remote.pdf\"\n\n    {- Save the response to a file. -}\n    responseBody
  rsp $$+- sinkFile \"cloud-remote.pdf\"\n#+END_SRC\n\nYou can also find this example
  in the source distribution in the ~Examples/~ folder.\n\n\n* Frequently Asked Questions\n\n**
  S3 questions\n\n- I get an error when I try to access my bucket with upper-case
  characters / a very long name.\n\n  Those names are not compliant with DNS. You
  need to use path-style requests, by setting ~s3RequestStyle~ in the configuration
  to\n  ~PathStyle~. Note that such bucket names are only allowed in the US standard
  region, so your endpoint needs to be US standard.\n\n* Release Notes\n\n** 0.12
  series\n\n- 0.12\n  - S3: Support for \"Expect: 100-continue\" (optional, technically
  API breaking)\n  - S3: Properly treat errors with a \"301 Permanent Redirect\" as
  errors and expose endpoint information\n\n** 0.11 series\n\n- 0.11.4\n  - Url-encode
  S3 object names in URLs\n  - filepath 1.4\n  - tagged 0.8.x\n  - limit errors to
  <2 to avoid compatibility problems\n\n- 0.11.3\n  - Support for blaze-builder 0.4\n
  \ - Support for utf8-string 1.0\n  - New function: multipartUploadWithInitiator\n
  \ - Fix issue in DynamoDB error parsing\n  - Ord instance for Aws.Core.Method\n\n-
  0.11.2\n  - Support for time 1.5 (we previously forgot to relax the upper bound
  in Cabal)\n\n- 0.11.1\n  - Support time 1.5\n  - Fix duplicate sending of query
  when using PostQuery\n\n- 0.11\n  - New functions for running AWS transactions\n
  \ - Performance optimizations for DynamoDB and S3 MultiPartUpload\n  - New DynamoDB
  commands & features\n  - S3 endpoint eu-central-1\n\n** 0.10 series\n\n- 0.10.5\n
  \ - support for conduit 1.2\n\n- 0.10.4\n  - S3: support for multi-part uploads\n
  \ - DynamoDB: fixes for JSON serialization\n      WARNING: This includes making
  some fields in TableDescription Maybe fields, which is breaking. But DynamoDB support
  was\n               and is also marked as EXPERIMENTAL.\n  - DynamoDB: TCP connection
  reuse where possible (improving performance)\n  - DynamoDB: Added test suite\n  -
  SES: support for additional regions\n\n- 0.10.3\n  - fix bug introduced in 0.10.2
  that broke SQS and IAM connections without STS\n\n- 0.10.2\n  - support STS / IAM
  temporary credentials in all services\n\n- 0.10\n  - [EXPERIMENTAL!] DynamoDB: support
  for creating/updating/querying and scanning items\n  - SQS: complete overhaul to
  support 2012-11-05 features\n  - SQS: test suite\n  - S3: use Maybe for 404 HEAD
  requests on objects instead of throwing a misleading exception\n  - S3: support
  of poAutoMakeBucket for Internet Archive users\n  - S3: implement GetBucketLocation\n
  \ - S3: add South American region\n  - S3: allow specifying the Content-Type when
  copying objects\n  - core: fix typo in NoCredentialsException accessor\n\n** 0.9
  series\n\n- 0.9.4\n  - allow conduit 1.2\n\n- 0.9.3\n  - fix performance regression
  for loadCredentialsDefault\n  - add generic makeCredentials function\n  - add S3
  DeleteBucket operation\n  - add S3 NukeBucket example\n  - SES: use security token
  if enabled (should allow using it with IAM roles on EC2 instances)\n\n- 0.9.2\n
  \ - Support for credentials from EC2 instance metadata (only S3 for now)\n  - aeson
  0.8 compatibility\n\n- 0.9.1\n  - Support for multi-page S3 GetBucket requests\n
  \ - S3 GLACIER support\n  - Applicative instance for Response to conform to the
  Applicative-Monad Proposal\n  - Compatibility with transformers 0.4\n\n- 0.9\n  -
  Interface changes:\n    - attempt and failure were deprecated, remove\n    - switch
  to new cryptohash interface\n  - updated version bounds of conduit and xml-conduit\n\n**
  0.8 series\n\n- 0.8.6\n  - move Instance metadata functions out of ResourceT to
  remove problem with exceptions-0.5\n    (this makes a fresh install of aws on a
  clean system possible again)\n\n- 0.8.5\n  - compatibility with case-insensitive
  1.2\n  - support for V4 signatures\n  - experimental support for DynamoDB\n\n- 0.8.4\n
  \ - compatibility with http-conduit 2.0\n\n- 0.8.3\n  - compatibility with cryptohash
  0.11\n  - experimental IAM support\n\n- 0.8.2\n  - compatibility with cereal 0.4.x\n\n-
  0.8.1\n  - compatibility with case-insensitive 1.1\n\n- 0.8.0\n  - S3, SQS: support
  for US-West2 (#58)\n  - S3: GetObject now has support for Content-Range (#22, #50)\n
  \ - S3: GetBucket now supports the \"IsTruncated\" flag (#39)\n  - S3: PutObject
  now supports web page redirects (#46)\n  - S3: support for (multi-object) DeleteObjects
  (#47, #56)\n  - S3: HeadObject now uses an actual HEAD request (#53)\n  - S3: fixed
  signing issues for GetObject call (#54)\n  - SES: support for many more operations
  (#65, #66, #70, #71, #72, #74)\n  - SES: SendRawEmail now correctly encodes destinations
  and allows multiple destinations (#73)\n  - EC2: support fo Instance metadata (#37)\n
  \ - Core: queryToHttpRequest allows overriding \"Date\" for the benefit of Chris
  Dornan's Elastic Transcoder bindings (#77)\n\n** 0.7 series\n\n- 0.7.6.4\n  - CryptoHash
  update\n- 0.7.6.3\n  - In addition to supporting http-conduit 1.9, it would seem
  nice to support conduit 1.0. Previously slipped through the radar.\n\n- 0.7.6.2\n
  \ - Support for http-conduit 1.9\n\n- 0.7.6.1\n  - Support for case-insensitive
  1.0 and http-types 0.8\n\n- 0.7.6\n  - Parsing of SimpleDB error responses was too
  strict, fixed\n  - Support for cryptohash 0.8\n  - Failure 0.1 does not work with
  aws, stricter lower bound\n\n- 0.7.5\n  - Support for http-conduit 1.7 and 1.8\n\n-
  0.7.1-0.7.4\n  - Support for GHC 7.6\n  - Wider constraints to support newer versions
  of various dependencies\n  - Update maintainer e-mail address and project categories
  in cabal file\n\n- 0.7.0\n  - Change ServiceConfiguration concept so as to indicate
  in the type whether this is for URI-only requests\n    (i.e. awsUri)\n  - EXPERIMENTAL:
  Direct support for iterated transaction, i.e. such where multiple HTTP requests
  might be necessary due to e.g. response size limits.\n  - Put aws functions in ResourceT
  to be able to safely return Sources and streams.\n    - simpleAws* does not require
  ResourceT and converts streams into memory values (like ByteStrings) first.\n  -
  Log response metadata (level Info), and do not let all aws runners return it.\n
  \ - S3:\n    - GetObject: No longer require a response consumer in the request,
  return the HTTP response (with the body as a stream) instead.\n    - Add CopyObject
  (PUT Object Copy) request type.\n  - Add Examples cabal flag for building code examples.\n
  \ - Many more, small improvements.\n\n** 0.6 series\n\n- 0.6.2\n  - Properly parse
  Last-Modified header in accordance with RFC 2616.\n\n- 0.6.1\n  - Fix for MD5 encoding
  issue in S3 PutObject requests.\n\n- 0.6.0\n  - API Cleanup\n    - General: Use
  Crypto.Hash.MD5.MD5 when a Content-MD5 hash is required, instead of ByteString.\n
  \   - S3: Made parameter order to S3.putObject consistent with S3.getObject.\n  -
  Updated dependencies:\n    - conduit 0.5 (as well as http-conduit 1.5 and xml-conduit
  1.0).\n    - http-types 0.7.\n  - Minor changes.\n  - Internal changes (notable
  for people who want to add more commands):\n    - http-types' new 'QueryLike' interface
  allows creating query lists more conveniently.\n\n** 0.5 series\n\n- 0.5.0 ::\n
  \   New configuration system: configuration split into general and service-specific
  parts.\n\n    Significantly improved API reference documentation.\n\n    Re-organised
  modules to make library easier to understand.\n\n    Smaller improvements.\n\n**
  0.4 series\n\n- 0.4.1 :: Documentation improvements.\n- 0.4.0.1 :: Change dependency
  bounds to allow the transformers 0.3 package.\n- 0.4.0 :: Update conduit to 0.4.0,
  which is incompatible with earlier versions.\n\n** 0.3 series\n\n- 0.3.2 :: Add
  awsRef / simpleAwsRef request variants for those who prefer an =IORef= over a =Data.Attempt.Attempt=
  value.\n           Also improve README and add simple example.\n\n* Resources\n\n-
  [[https://github.com/aristidb/aws][aws on Github]]\n- [[http://hackage.haskell.org/package/aws][aws
  on Hackage]] (includes reference documentation)\n- [[http://aws.amazon.com/][Official
  Amazon Web Services website]]\n\n* Contributors\n\n| Name               | Github
  \      | E-Mail                    | Company                | Components    |\n|--------------------+--------------+---------------------------+------------------------+---------------|\n|
  Abhinav Gupta      | [[https://github.com/abhinav][abhinav]]  | mail@abhinavg.net
  | -  | IAM, SES      |\n| Aristid Breitkreuz | [[https://github.com/aristidb][aristidb]]
  \    | aristidb@gmail.com        | -                      | Co-Maintainer    |\n|
  Bas van Dijk       | [[https://github.com/basvandijk][basvandijk]]   | v.dijk.bas@gmail.com
  \     | [[http://erudify.ch][Erudify AG]]             | S3            |\n| David
  Vollbracht   | [[https://github.com/qxjit][qxjit]]        |                           |
  \                       |               |\n| Felipe Lessa       | [[https://github.com/meteficha][meteficha]]
  \   | felipe.lessa@gmail.com    | currently secret       | Core, S3, SES |\n| Nathan
  Howell      | [[https://github.com/NathanHowell][NathanHowell]] | nhowell@alphaheavy.com
  \   | [[http://www.alphaheavy.com][Alpha Heavy Industries]] | S3            |\n|
  Ozgun Ataman       | [[https://github.com/ozataman][ozataman]]     | ozgun.ataman@soostone.com
  | [[http://soostone.com][Soostone Inc]]           | Core, S3, DynamoDb |\n| Steve
  Severance    | [[https://github.com/sseveran][sseveran]]     | sseverance@alphaheavy.com
  | [[http://www.alphaheavy.com][Alpha Heavy Industries]] | S3, SQS       |\n| John
  Wiegley       | [[https://github.com/jwiegley][jwiegley]]     | johnw@fpcomplete.com
  \     | [[http://fpcomplete.com][FP Complete]]            | Co-Maintainer, S3            |\n|
  Chris Dornan | [[https://github.com/cdornan][cdornan]] | chris.dornan@irisconnect.co.uk
  | [[http://irisconnect.co.uk][Iris Connect]] | Core |\n| John Lenz | [[https://github/com/wuzzeb][wuzzeb]]
  | | | DynamoDB, Core |\n"
