homepage: https://github.com/gdevanla/pptable#readme
changelog-type: ''
hash: 7e771fbac19cbcdeaa62c3707ef74dcd0285195e91bf6ec08794e492783f022a
test-bench-deps:
  base: -any
  HUnit: -any
  containers: -any
  tasty-quickcheck: -any
  tasty-hunit: -any
  tasty: -any
  boxes: -any
  QuickCheck: -any
  pptable: -any
  vector: -any
maintainer: grdvnl@gmail.com
synopsis: Pretty Print containers in a tabular format
changelog: ''
basic-deps:
  base: ! '>=4.7 && <5'
  syb: -any
  generic-deriving: -any
  containers: -any
  boxes: -any
  pretty: -any
  vector: -any
all-versions:
- '0.1.0.0'
author: Guru Devanla
latest: '0.1.0.0'
description-type: markdown
description: ! "# README #\n\nPrettyTable : Print any list, vector or map as a well-formatted
  readable table.\n\n### Text.PrettyPrint.PrettyTable ###\n\n* This module provides
  simple functions used to print values in tabular format\n* Version 0.1.0\n* Contributes
  and Bug Reports Welcome\n\n### Examples ###\n\n``` haskell\n -- Printing a list
  of records\n :set -XDeriveGeneric\n :set -XDeriveDataTypeable\n\n import qualified
  GHC.Generics as G\n import Data.Data\n\n -- A record structure that will in a list\n
  data Stock = Stock {ticker::String, price::Double, marketCap::Double} deriving (Data,
  G.Generic)\n\n -- Create an instance of Tabilize\n instance Tabilize Stock\n\n let
  yahoo =  Stock {ticker=\"YHOO\", price=42.29101010, marketCap=40e9}\n let google
  = Stock {ticker=\"GOOG\", price=774.210101, marketCap=532.09e9}\n let amazon = Stock
  {ticker=\"AMZN\", price=799.161717, marketCap=378.86e9}\n\n -- List of records\n
  let tickers = [yahoo, google, amazon]\n\n printList tickers\n\n ticker     price
  \         marketCap\n \"YHOO\"     42.2910101         4.0e10\n \"GOOG\"     774.210101
  \     5.3209e11\n \"AMZN\"     799.161717      3.7886e11\n\n```\n"
license-name: MIT
