changelog-type: ''
hash: 21587590ad932a177d85ab3193e8ce0137fa626deae50d52de8adc2318d9a948
synopsis: Generate test-suites from refinement types.
changelog: ''
all-versions:
- '0.1.0.0'
- '0.1.1.0'
latest: '0.1.1.0'
description-type: haddock
description: ! 'Target is a library for testing Haskell functions based on

  properties encoded as refinement types.


  The programmer specifies the expected behavior of a

  function with a refinement type, and Target then checks

  that the function satisfies the specification by

  enumerating valid inputs up to some size, calling the

  function, and validating the output. Target excels when the

  space of valid inputs is a sparse subset of all possible

  inputs, e.g. when dealing with dataypes with complex

  invariants like red-black trees.


  "Test.Target" is the main entry point and should contain

  everything you need to use Target with types from the

  "Prelude". "Test.Target.Targetable" will also be useful if

  you want to test functions that use other types.


  For information on how to /specify/ interesting properties

  with refinement types, we have a series of

  <http://goto.ucsd.edu/~rjhala/liquid/haskell/blog/blog/categories/basic/ blog posts>

  as well as an

  <http://github.com/ucsd-progsys/liquidhaskell/tree/master/docs/tutorial evolving
  tutorial>.

  Target uses the same specification language as LiquidHaskell,

  so the examples should carry over.


  Finally, Target requires either <https://z3.codeplex.com/ Z3>

  (@>=4.3@) or <http://cvc4.cs.nyu.edu/web/ CVC4> (@>=1.4@) to

  be present in your @PATH@.'
