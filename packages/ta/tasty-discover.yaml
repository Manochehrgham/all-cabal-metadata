homepage: https://github.com/lwm/tasty-discover#readme
changelog-type: markdown
hash: aa074b4dfece7296b80efc2aa616dfd60960e90768167279b9a8a7826f8b438e
test-bench-deps:
  tasty-smallcheck: -any
  base: ! '>=4.8 && <5'
  tasty-discover: -any
  tasty-hspec: -any
  filepath: ! '>=1.3 && <1.5'
  tasty-quickcheck: -any
  tasty-hunit: -any
  tasty: -any
  directory: ! '>=1.1 && <1.4'
maintainer: Luke Murphy <lukewm@riseup.net>
synopsis: Test discovery for the tasty framework.
changelog: ! '# Change Log


  All notable changes to this project will be documented in this file.


  The format is based on [Keep a Changelog] and this project adheres to

  [Semantic Versioning].


  [Keep a Changelog]: http://keepachangelog.com/

  [Semantic Versioning]: http://semver.org/


  # 2.0.3 [2017-04-13]


  ### Fixed

  - Make the Cabal description more clear for Hackage.


  # 2.0.2 [2017-04-13]


  ### Added

  - Change log is in `extra-source-files` now.

  - [#96]: README is in `extra-source-files` now.


  ### Fixed

  - [#88]: stylish-haskell automated checking.


  [#88]: https://github.com/lwm/tasty-discover/pull/88

  [#96]: https://github.com/lwm/tasty-discover/pull/96


  ## 2.0.1 [2017-03-18]


  ### Fixed

  - [#86]: Flaky test comparison.


  [#86]: https://github.com/lwm/tasty-discover/pull/86


  ### Removed

  - [#83]: The `Test.Tasty.Type` module.


  [#83]: https://github.com/lwm/tasty-discover/pull/83


  ## 2.0.0 [2017-03-15]


  ### Added

  - Use hpack format.

  - Use generator style test discovery from tasty-auto.

  - New configuration options: debug, ingredients and module name.

  - Unit tests for all functionality.


  ### Fixed

  - Re-license to MIT.


  ### Removed

  - RTD documentation.

  - TemplateHaskell dependency

  - Example project and integration test project.


  ### Changed

  - Move all tests into test folder.


  ## 1.1.0 [2017-01-19]


  ### Added

  - `--ignore-module` configuration option.


  ## 1.0.1 [2017-11-13]


  ### Added

  - Cabal testing on Travis CI.

  - Documentation testing on Travis CI.


  ### Fixed

  - Include missing `extra-source-files`.

  - Slim down LICENSE.md and mark as GPL-3 in Cabal file.


  ## 1.0.0 [2016-11-04]


  ### Added

  - Documentation to RTD.

  - Release on Hackage and Stackage.


  ## 0.0.3 [2016-09-20]


  ### Added

  - `--no-module-suffix` configuration option.


  ## 0.0.2 [2016-02-20]


  ### Added

  - `--module-suffix` configuration option.


  ## 0.0.1 [2016-02-13]

  - tasty-discover initial release.

'
basic-deps:
  base: ! '>=4.8 && <5'
  tasty-discover: -any
  filepath: ! '>=1.3 && <1.5'
  directory: ! '>=1.1 && <1.4'
all-versions:
- '1.0.0'
- '1.0.1'
- '1.1.0'
- '2.0.0'
- '2.0.1'
- '2.0.2'
- '2.0.3'
author: Luke Murphy
latest: '2.0.3'
description-type: markdown
description: ! "[![Build Status](https://travis-ci.org/lwm/tasty-discover.svg?branch=master)](https://travis-ci.org/lwm/tasty-discover)\n[![Hackage
  Status](https://img.shields.io/badge/Hackage-2.0.1-brightgreen.svg)](http://hackage.haskell.org/package/tasty-discover)\n[![Stackage
  Status](https://img.shields.io/badge/Stackage-2.0.1-brightgreen.svg)](https://www.stackage.org/package/tasty-discover/)\n[![GitHub
  license](https://img.shields.io/badge/license-MIT-brightgreen.svg)](https://raw.githubusercontent.com/lwm/tasty-discover/master/LICENSE)\n\n#
  tasty-discover\n\nAutomatic test discovery and runner for the [tasty framework].\n\n[tasty
  framework]: https://github.com/feuerbach/tasty\n\n# Getting Started\n\n![Usage GIF](http://i.imgur.com/gpdHc6x.gif)\n\n5
  steps to tasty test discovery satori:\n  - Create a `Tasty.hs` in the `hs-source-dirs`
  of your test suite.\n  - Set your test suite `main-is` to the `Tasty.hs`.\n  - Create
  test modules in files with suffix `*Test.hs` or `*Spec.hs`.\n  - Write your tests
  with the following prefixes:\n    - `prop_`: [QuickCheck](http://hackage.haskell.org/package/tasty-quickcheck)
  properties.\n    - `scprop_`: [SmallCheck](http://hackage.haskell.org/package/tasty-smallcheck)
  properties.\n    - `case_`: [HUnit](http://hackage.haskell.org/package/tasty-hunit)
  test cases.\n    - `spec_`: [Hspec](http://hackage.haskell.org/package/tasty-hspec)
  specifications.\n    - `test_`: [Tasty](http://hackage.haskell.org/package/tasty)
  TestTrees.\n\n# Examples\n\n``` haskell\n{-# LANGUAGE ScopedTypeVariables #-}\n\nmodule
  ExampleTest where\n\nimport Test.Tasty\nimport Test.Tasty.HUnit\nimport Test.Tasty.Hspec\nimport
  Test.Tasty.QuickCheck\n\n-- HUnit test case\ncase_listCompare :: IO ()\ncase_listCompare
  = [1, 2, 3] `compare` [1,2] @?= GT\n\n-- QuickCheck property\nprop_additionCommutative
  :: Int -> Int -> Bool\nprop_additionCommutative a b = a + b == b + a\n\n-- SmallSheck
  property\nscprop_sortReverse :: [Int] -> Bool\nscprop_sortReverse list = sort list
  == sort (reverse list)\n\n-- Hspec specification\nspec_prelude :: Spec\nspec_prelude
  = do\n  describe \"Prelude.head\" $ do\n    it \"returns the first element of a
  list\" $ do\n      head [23 ..] `shouldBe` (23 :: Int)\n\n-- Tasty TestTree\ntest_multiplication
  :: [TestTree]\ntest_multiplication = [testProperty \"One is identity\" $ \\(a ::
  Int) -> a * 1 == a]\n\n-- Tasty IO TestTree\ntest_generateTree :: IO TestTree\ntest_generateTree
  = do\n  input <- pure \"Some input\"\n  pure $ testCase input $ pure ()\n\n-- Tasty
  IO [TestTree]\ntest_generateTrees :: IO [TestTree]\ntest_generateTrees = do\n  inputs
  <- pure [\"First input\", \"Second input\"]\n  pure $ map (\\s -> testCase s $ pure
  ()) inputs\n```\n\n# Configuration\n\nPass configuration options within your `Tasty.hs`
  like so:\n\n``` haskell\n{-#\n OPTIONS_GHC -F -pgmF tasty-discover\n -optF <OPTION>\n
  -optF <OPTION>\n#-}\n```\n\n## No Arguments\nExample: `{-# OPTIONS_GHC -F -pgmF
  tasty-discover -optF --debug #-}`\n\n  - `--no-module-suffix`: Collect all test
  modules, regardless of module suffix.\n  - `--debug`: Output the contents of the
  generated module while testing.\n\n## With Arguments\nExample: `{-# OPTIONS_GHC
  -F -pgmF tasty-discover -optF --moduleSuffix=FooBar #-}`\n\n  - `--module-suffix`:
  Which test module suffix you wish to have discovered.\n  - `--generated-module`:
  The name of the generated test module.\n  - `--ignore-module`: Which test modules
  to ignore from discovery.\n  - `--ingredient`: Tasty ingredients to add to your
  test runner.\n\n# Change Log\nSee the [Change log] for the latest changes.\n\n[Change
  log]: https://github.com/lwm/tasty-discover/blob/master/CHANGELOG.md\n\n# Contributing\nAll
  contributions welcome!\n\n# Acknowledgements\nThanks to [hspec-discover] and [tasty-auto]
  for making this possible.\n\n[hspec-discover]: https://hspec.github.io/hspec-discover.html\n[tasty-auto]:
  https://github.com/minad/tasty-auto\n"
license-name: MIT
