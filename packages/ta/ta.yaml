changelog-type: ''
hash: b24066e583d5c6b782f91a38b87e7a5cd5a38e27f8df3f144290be18ba5d3f56
synopsis: ! 'Transito Abierto: convenience library when using Takusen and Oracle.'
changelog: ''
all-versions:
- '0.1'
latest: '0.1'
description-type: haddock
description: ! 'The purpose of this library is to add convenience in database

  accesses when using Takusen and Oracle, by generating boilerplate code.

  It''s not a substitute to Takusen.


  Transito Abierto is implemented in the library (Database.TA.TAB) and this

  also provides functionality used by the generated code.


  TA will generate the declarations of:


  1. The datatype declaration for the result of a query,


  2. The DBM action that run the query and accumulates

  the result,


  3.Optionally, a meta-variable whose value is the former two declarations.


  This initial version has the following benefits:


  - TA contains code to test if your program will fail before it runs, based

  on comparing the original generated code versus a fresh

  version of generated code,


  - The user can code queries with more than eight columns length,


  - The code generator process is aware if the column can be null,

  and generate the appropiate code.


  Some TA drawbacks at this point are:


  - The user only can specify queries, that is, select statements.


  - The select specification is awkward.


  - The select specification is a list. You can specify one or many

  under a sole name.

  - You can bind parameters or not (by means of [[]]).


  - Functions names and constructors are named in spanish.'
