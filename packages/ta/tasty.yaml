homepage: http://documentup.com/feuerbach/tasty
changelog-type: markdown
hash: c7790d2b22f4036533a69fc523f0fb1cd03945d336c5a50500d2355b0090741b
test-bench-deps: {}
maintainer: Roman Cheplyaka <roma@ro-che.info>
synopsis: Modern and extensible testing framework
changelog: ! "Changes\n=======\n\nVersion 0.11.2.1\n----------------\n\nFix compatibility
  with the latest `unbounded-delays`\n\nVersion 0.11.2\n--------------\n\nAdd `composeReporters`,
  a function to run multiple reporter ingredients\n\nVersion 0.11.1\n--------------\n\nIntroduce
  `mkOptionCLParser` and `mkFlagCLParser`\n\nVersion 0.11.0.4\n----------------\n\nFix
  compatibility with `optparse-applicative-0.13`\n\nVersion 0.11.0.3\n----------------\n\nSwitch
  from `regex-tdfa-rc` to `regex-tdfa`, which got a new maintainer.\n\nVersion 0.11.0.2\n----------------\n\nClarify
  `IsTest`’s specification with regard to exceptions\n\nVersion 0.11.0.1\n----------------\n\nUse
  monotonic clock when measuring durations.\n\nVersion 0.11\n------------\n\nNew field
  `resultShortDescription` of `Result`\n\nVersion 0.10.1.2\n----------------\n\n*
  Improve the docs\n* Fix compatibility with GHC HEAD\n\nVersion 0.10.1.1\n----------------\n\n*
  Prevent parsing non-positive number of threads via program options (#104)\n* Buffer
  output to avoid slowdowns when printing test results (#101)\n* Default to using
  the maximum number of available cores for test execution\n\nVersion 0.10.1\n--------------\n\nExport
  `Test.Tasty.Runners.formatMessage`\n\nVersion 0.10.0.4\n----------------\n\nDon't
  output ANSI codes for the Emacs terminal emulator\n\nVersion 0.10.0.3\n----------------\n\nBetter
  handle the situation when there are no ingredients to run\n\nVersion 0.10.0.2\n----------------\n\nSplit
  the changelog into per-project changelogs\n\nVersion 0.10.0.1\n----------------\n\nUpdate
  to optparse-applicative 0.11\n\nVersion 0.10\n------------\n\n* Add the `--color`
  option\n* Timings\n    * Introduce the `Time` type synonym\n    * Change the types
  of `launchTestTree` and `TestReporter` to accept the\n      total run time\n    *
  `consoleTestReporter` now displays the timings\n\nVersion 0.9.0.1\n---------------\n\nUpgrade
  to optparse-applicative-0.10.\n\nVersion 0.8.1.3\n---------------\n\nBe careful
  not to export the `Show (a -> b)` instance, see\n<https://github.com/feuerbach/tasty/issues/71>\n\nVersion
  0.8.1.2\n---------------\n\nHide cursor when running tests\n\nVersion 0.8.1.1\n---------------\n\nFix
  for GHC 7.9\n\nVersion 0.8.0.4\n---------------\n\nRemove the old 'colors' flag
  description from the cabal file\n\nVersion 0.8.0.2\n---------------\n\nMake ansi-terminal
  an unconditional dependency\n\nVersion 0.8\n-----------\n\n* `Test.Tasty.Ingredients`
  is now exposed\n* `Test.Tasty.Ingredients.Basic` is added, which exports the ingredients
  defined\n    in the `tasty` package. These exports should now be used instead of
  ones\n    exported from `Test.Tasty.Runners`\n* The `Result` type is now structured
  a bit differently. Providers now should\n  use `testPassed` and `testFailed` functions
  instead of constructing `Result`s\n  directly.\n* Add «quiet mode» (see README)\n*
  Add «hide successes» mode (see README)\n* Add short command-line options: `-j` for
  `--num-threads`, `-p` for `--pattern`\n* Add timeout support\n* `AppMonoid` is renamed
  to `Traversal` for consistency with the 'reducers'\n  package. Another similar wrapper,
  `Ap`, is introduced.\n* Fix a resources bug (resources were not released if the
  test suite was\n  interrupted)\n* The type of `launchTestTree` is changed. It now
  takes a continuation as an\n  argument. This is necessary to fix the bug mentioned
  above.\n* Add `flagCLParser` to be used as the `optionCLParser` implementation for\n
  \ boolean options.\n* Add the ability to pass options via environment\n\nVersion
  0.7\n-----------\n\n* Use `regex-tdfa` instead of `regex-posix` (which is a native\n
  \ implementation, and as such is more portable)\n* `foldTestTree` now takes the
  algebra in the form of a record rather than\n  multiple arguments, to minimize breakage
  when new nodes are added or\n  existing ones change\n* `withResource` now passes
  the IO action to get the resource to the inner test tree\n\nVersion 0.6\n-----------\n\n*
  Better handling of exceptions that arise during resource creation or\n  disposal\n*
  Expose the `AppMonoid` wrapper\n* Add `askOption` and `inludingOptions`\n\nVersion
  0.5.2.1\n---------------\n\nDepend on ansi-terminal >= 0.6.1. This fixes some issues
  with colors on Windows.\n\nVersion 0.5.2\n-------------\n\n* Export `Result` and
  `Progress` from `Test.Tasty.Runners`\n* Make it clear that only GHC 7.4+ is supported\n\nVersion
  0.5.1\n-------------\n\nExport `ResourceSpec` from `Test.Tasty.Runners`\n\nVersion
  0.5\n-----------\n\nAdd a capability to acquire and release resources. See the «Resources»
  section\nin the `Test.Tasty` docs.\n\nFor the end users, the API is backwards-compatible.\n\nTest
  runners may have to be adjusted — there is a new constructor of `TestTree`\nand
  a new argument of `foldTestTree`.\n\nVersion 0.4.2\n-------------\n\nAdd `defaultIngredients`\n\nVersion
  0.4.1.1\n---------------\n\nPrint the failure description in red\n\nVersion 0.4.0.1\n---------------\n\nFix
  a bug ([#25](https://github.com/feuerbach/tasty/issues/25))\n\nVersion 0.4\n-----------\n\nThe
  big change in this release is introduction of ingredients, which is a\nreplacement
  for runners. But unless you have a custom runner, this is unlikely\nto affect you
  much.\n\nThe `Ingredient` data type has replaced the `Runner` type.\n\nThe following
  functions have been renamed and possibly changed their types:\n\n* `defaultMainWithRunner`
  → `defaultMainWithIngredients`\n* `treeOptionParser` → `suiteOptionParser`\n* `getTreeOptions`
  → `treeOptions`\n* `runUI` → `consoleTestReporter`\n\nAdded in this release:\n\n*
  `suiteOptions`\n* `optionParser`\n* functions operating on ingredients\n* `testsNames`\n*
  the `listingTests` ingredient and its option, `ListTests`\n\n`NumThreads` is no
  longer a core option, but is automatically included in the\ntest reporting ingredients
  (see its haddock).\n\nVersion 0.3.1\n-------------\n\n* Proper reporting of (some)
  non-terminating tests (#15)\n* Upgrade to optparse-applicative 0.6\n\nVersion 0.3\n-----------\n\n*
  Restrict dependency versions\n* Fix a bug where non-terminating test would lead
  to a deadlock (#15)\n\nVersion 0.2\n-----------\n\n* Add an `execRunner` function\n*
  Make `Runner` return `IO Bool`\n\nVersion 0.1.1\n-------------\n\nSet lower bound
  on optparse-applicative dependency version\n"
basic-deps:
  stm: ! '>=2.3'
  base: ! '>=4.5 && <5'
  clock: ! '>=0.4.4.0'
  unbounded-delays: ! '>=0.1'
  async: ! '>=2.0'
  tagged: ! '>=0.5'
  containers: -any
  ansi-terminal: ! '>=0.6.2'
  regex-tdfa: ! '>=1.1.8.2'
  mtl: -any
  optparse-applicative: ! '>=0.11'
  deepseq: ! '>=1.3'
all-versions:
- '0.1'
- '0.1.1'
- '0.2'
- '0.3'
- '0.3.1'
- '0.4'
- '0.4.0.1'
- '0.4.1.1'
- '0.4.2'
- '0.5'
- '0.5.1'
- '0.5.2'
- '0.5.2.1'
- '0.6'
- '0.7'
- '0.8'
- '0.8.0.2'
- '0.8.0.4'
- '0.8.1.1'
- '0.8.1.2'
- '0.8.1.3'
- '0.9.0.1'
- '0.10'
- '0.10.0.1'
- '0.10.0.2'
- '0.10.0.3'
- '0.10.0.4'
- '0.10.1'
- '0.10.1.1'
- '0.10.1.2'
- '0.11'
- '0.11.0.1'
- '0.11.0.2'
- '0.11.0.3'
- '0.11.0.4'
- '0.11.1'
- '0.11.2'
- '0.11.2.1'
author: Roman Cheplyaka <roma@ro-che.info>
latest: '0.11.2.1'
description-type: haddock
description: ! 'Tasty is a modern testing framework for Haskell.

  It lets you combine your unit tests, golden

  tests, QuickCheck/SmallCheck properties, and any

  other types of tests into a single test suite.

  See <http://documentup.com/feuerbach/tasty>.'
license-name: MIT
