homepage: https://github.com/quchen/show-prettyprint#readme
changelog-type: ''
hash: 77d24389b373da827d4aa7b6fa37d0919ea4cb95895830aada098874a94ce947
test-bench-deps:
  base: -any
  doctest: ! '>=0.9'
maintainer: David Luposchainsky <dluposchainsky (λ) google>
synopsis: ! 'Robust prettyprinter for output of auto-generated Show

  instances'
changelog: ''
basic-deps:
  ansi-wl-pprint: -any
  trifecta: ! '>=1.6'
  base: ! '>=4.7 && <5'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.2'
author: David Luposchainsky <dluposchainsky (λ) google>
latest: '0.1.2'
description-type: markdown
description: ! "Prettyprint `Show` output\n=========================\n\nOutput of
  nested data structures by `Show` instances is often very hard to read.\nThis package
  offers a simple function to insert line breaks and indentation into\nthat output
  so that the semantics are unchanged, but makes it *much* easier to\nread.\n\nThe
  package does not rely on a parser for actual Haskell; instead, it merely\nreacts
  on parentheses, commas and the like. This makes it fairly robust even in\nthe face
  of invalid `Show` instances, that may not produce valid Haskell code.\n\nFor example,
  consider this nested data structure:\n\n```haskell\nnestedExample = fromList\n    [
  (\"hello\", Left  (Pair True ()))\n    , (\"world\", Right (Record { r1 = ('c',
  -1.2e34), r2 = 123 }))\n    , (\"!\"    , Left  (Pair False ())) ]\n```\n\nApplying
  show to it results in the fairly dense representation\n\n```haskell\nfromList [(\"!\",Left
  (Pair False ())),(\"hello\",Left (Pair True ())),(\"world\",Right (Record {r1 =
  ('c',-1.2e34), r2 = 123}))]\n```\n\nWith the functions defined in this module, we
  can make this output a bit more\nreadable,\n\n```haskell\nfromList [(\"!\"\n          ,Left
  (Pair False ()))\n         ,(\"hello\",Left (Pair True ()))\n         ,(\"world\"\n
  \         ,Right (Record {r1 = ('c'\n                               ,-1.2e34)\n
  \                        ,r2 = 123}))]\n```\n"
license-name: BSD3
