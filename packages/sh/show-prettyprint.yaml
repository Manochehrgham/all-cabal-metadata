homepage: https://github.com/quchen/show-prettyprint#readme
changelog-type: markdown
hash: 772e18a541e9d2af73554edf8092a6d907dd2f89e6af119a46731171eb40d967
test-bench-deps:
  base: -any
  doctest: ! '>=0.9'
maintainer: David Luposchainsky <dluposchainsky (λ) google>
synopsis: ! 'Robust prettyprinter for output of auto-generated Show

  instances'
changelog: ! '# 0.2


  Prettyprint based on the `prettyprinter` library, instead of `ansi-wl-pprint`.

  To support the `Diagnostic` module, the Trifecta-generated `Doc` has to be

  rendered still, so we cannot drop the dependency on ansi-wl-pprint just yet.

'
basic-deps:
  ansi-wl-pprint: -any
  trifecta: ! '>=1.6'
  base: ! '>=4.7 && <5'
  prettyprinter: <1.1
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.2'
- '0.1.2.1'
- '0.2'
author: David Luposchainsky <dluposchainsky (λ) google>
latest: '0.2'
description-type: markdown
description: ! "Prettyprint `Show` output\n=========================\n\nOutput of
  nested data structures by `Show` instances is often very hard to read.\nThis package
  offers a simple function to insert line breaks and indentation into\nthat output
  so that the semantics are unchanged, but makes it *much* easier to\nread.\n\nThe
  package does not rely on a parser for actual Haskell; instead, it merely\nreacts
  on parentheses, commas and the like. This makes it fairly robust even in\nthe face
  of invalid `Show` instances, that may not produce valid Haskell code.\n\nFor example,
  consider this nested data structure:\n\n```haskell\nnestedExample = fromList\n    [
  (\"hello\", Left  (Pair True ()))\n    , (\"world\", Right (Record { r1 = ('c',
  -1.2e34), r2 = 123 }))\n    , (\"!\"    , Left  (Pair False ())) ]\n```\n\nApplying
  show to it results in the fairly dense representation\n\n```haskell\nfromList [(\"!\",Left
  (Pair False ())),(\"hello\",Left (Pair True ())),(\"world\",Right (Record {r1 =
  ('c',-1.2e34), r2 = 123}))]\n```\n\nWith the functions defined in this module, we
  can make this output a bit more\nreadable,\n\n```haskell\nfromList [(\"!\"\n          ,Left
  (Pair False ()))\n         ,(\"hello\",Left (Pair True ()))\n         ,(\"world\"\n
  \         ,Right (Record {r1 = ('c'\n                               ,-1.2e34)\n
  \                        ,r2 = 123}))]\n```\n\nRelated packages\n================\n\nThere
  is a similar package on Hackage called *[pretty-show][1]*, which takes a\nmore flexible
  approach to prettyprinting show-formatted strings. This has its\nadvantages and
  disadvantages.\n\n&nbsp;        | prettyprint-show (this)            | [pretty-show][1]
  (alternative)\n------------- | ---------------------------------- | -----------------------------\nUse
  case      | fire and forget, debugging         | flexible, working with the output\nAPI
  \          | One core value (rest: convenience) | Multiple combinable values\nExtensibility
  | low, not intended                  | decent, e.g. HTML rendering\nRobustness    |
  high: only cares about parentheses, bugs in bad output can be hacked around | medium:
  relies on output that follows Haskell's lexical structure\n\n\n[1]: http://hackage.haskell.org/package/pretty-show\n"
license-name: BSD3
