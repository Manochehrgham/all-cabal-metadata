changelog-type: ''
hash: b469f9306760d8d1560edc6d1f3830250380a81040467205753d86bdf30662a1
synopsis: A toolkit for making compile-time interpolated templates
changelog: ''
all-versions:
- '0.10.0'
- '0.10.1'
- '0.10.1.1'
- '0.10.2'
- '0.10.3'
- '0.10.3.1'
- '0.11'
- '1.0.0'
- '1.0.0.1'
- '1.0.0.2'
- '1.0.1'
- '1.0.1.1'
- '1.0.1.2'
- '1.0.1.3'
- '1.0.1.4'
- '1.0.2'
- '1.0.3'
- '1.0.3.1'
- '1.0.4'
- '1.0.5'
- '1.0.5.1'
- '1.2.0'
- '1.2.0.1'
- '1.2.0.2'
- '1.2.0.3'
- '1.2.0.4'
- '1.2.1'
- '1.2.1.1'
- '2.0.0'
- '2.0.0.1'
- '2.0.0.3'
- '2.0.1'
- '2.0.1.1'
- '2.0.1.2'
- '2.0.2'
- '2.0.2.1'
- '2.0.2.2'
- '2.0.3'
- '2.0.4'
- '2.0.4.1'
- '2.0.5'
latest: '2.0.5'
description-type: haddock
description: ! 'Shakespeare is a family of type-safe, efficient template languages.
  Shakespeare templates are expanded at compile-time, ensuring that all interpolated
  variables are in scope. Variables are interpolated according to their type through
  a typeclass.


  Shakespeare templates can be used inline with a quasi-quoter or in an external file.


  Note there is no dependency on haskell-src-extras. Instead Shakespeare believes
  logic should stay out of templates and has its own minimal Haskell parser.


  Packages that use this: shakespeare-js, shakespeare-css, shakespeare-text, hamlet,
  and xml-hamlet


  Please see the documentation at <http://www.yesodweb.com/book/shakespearean-templates>
  for more details.'
