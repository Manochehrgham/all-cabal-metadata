homepage: ''
changelog-type: markdown
hash: 3e5e7774c59434af374759f31b4a4483e80b6354f282ff921fad08c1945b3a2f
test-bench-deps:
  bytestring: ! '>=0.9 && <0.11'
  base: -any
  criterion: ! '>=1.1 && <1.2'
  bloomfilter-redis: -any
  tasty-quickcheck: ! '>=0.8 && <0.9'
  hashable: ! '>=1.2 && <1.3'
  tasty-hunit: ! '>=0.9 && <0.10'
  tasty-rerun: ! '>=1.1 && <1.2'
  random: ! '>=1.1 && <1.2'
  tasty: ! '>=0.8 && <0.12'
  QuickCheck: ! '>=2.8 && <2.9'
  hedis: ! '>=0.5 && <0.9'
maintainer: Tobias Markus <tobias AT miglix DOT eu>
synopsis: Distributed bloom filters on Redis (using the Hedis client).
changelog: ! '0.1.0.1

  ------

  * README improvements

  * Compatibility with GHC 7.8/base-4.7

  * Test suite improvements


  0.1.0.0

  ------

  Initial release

'
basic-deps:
  bytestring: ! '>=0.9 && <0.11'
  base: ! '>=4.7 && <4.10'
  binary: ! '>=0.7 && <0.9'
  arithmoi: ! '>=0.3 && <0.5'
  hashable: ! '>=1.2 && <1.3'
  hedis: ! '>=0.5 && <0.9'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
author: Tobias Markus <tobias AT miglix DOT eu>
latest: '0.1.0.1'
description-type: markdown
description: ! "# bloomfilter-redis [![Build Status](https://travis-ci.org/hesiod/bloomfilter-redis.svg?branch=master)](https://travis-ci.org/hesiod/bloomfilter-redis)\n\nDistributed
  bloom filters on Redis (using the Hedis client).\n\nThe hash family algorithm is
  partly inspired by\n[Brian O'Sullivan's bloomfilter package](https://hackage.haskell.org/package/bloomfilter).\n\n##
  Features\n\n* Implementation of the FNV-1/FNV-1a hash function is included\n* Automatic
  derivation of a hash family from a single hash function\n  as described by Kirsch
  and Mitzenmacher\n* The bloom filter is distributed without extra effort since\n
  \ Redis does the heavy lifting\n* Every `Hashable` type can be added to the bloom
  filter\n* Every `Binary` type can be hashed\n\n## Benchmark and Testing suite\n\nA
  benchmark for the FNV hash function is included and can\nbe invoked using `cabal
  bench` or `stack bench`.\nAn HTML report is generated as `report.html`.\n\nA testing
  suite using `tasty` is included.\n\n## Further Information\n### Todo\n\n* Separate
  the FNV hash function into a separate package\n* The actual operations (`addBF`,
  `queryBF`, etc) should\n  ideally live in a `MonadReader (Bloom a)`, but this requires\n
  \ some work on the Hedis side because of `RedisCtx`\n\n### Caveats\n\n* The only
  supported FNV hash sizes are 32 and 64 bits.\n  Support for larger widths is a matter
  of having a\n  data type with instances for `FiniteBits` and `Num`.\n* The offset
  basis (`fnvOffsetBasis`) is not correctly\n  computed, although this has absolutely
  no effect on\n  the performance of the hash function in practice.\n"
license-name: BSD3
