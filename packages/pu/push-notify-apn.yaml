homepage: https://github.com/memrange/apn#readme
changelog-type: markdown
hash: e7b3bad9b16c1fba188f04b637cc13191b9de820fefca9ce54c777698d4c5c7d
test-bench-deps:
  base: -any
  push-notify-apn: -any
maintainer: hc@hcesperer.org
synopsis: Send push notifications to mobile iOS devices
changelog: ! '0.1.0.3

  =======


  - Filter out invalid token characters when hex encoded tokens are supplied

  - Clarify the documentation

  - Close the flow control thread when closing connections


  0.1.0.1

  =======


  - Initial release

'
basic-deps:
  bytestring: -any
  http2: -any
  base: ! '>=4.7 && <5'
  time: -any
  text: -any
  tls: -any
  http2-client: -any
  x509-store: -any
  data-default: -any
  containers: -any
  x509: -any
  binary: -any
  push-notify-apn: -any
  base16-bytestring: -any
  optparse-applicative: -any
  random: -any
  aeson: -any
all-versions:
- '0.1.0.2'
- '0.1.0.3'
author: Hans-Christian Esperer
latest: '0.1.0.3'
description-type: markdown
description: ! "# push-notify-apn\n\npush-notify-apn is a library and command line
  utility that can be used to send\npush notifications to mobile devices running iOS.
  Push notifications are small\nmessages that can be sent to apps on smart phones
  and tablets\nwithout the need to keep open a long lived TCP connection per app,
  dramatically\nreducing the power consumption in standby mode.\n\nThe library is
  still in an experimental state. Bug and success reports\nas well as feature and
  pull requests are very welcome.\n\nSending a message is as simple as:\n\n    let
  sandbox = True -- Development environment\n        timeout = 10   -- Minutes to
  keep the connection open\n    session <- newSession \"my.key\" \"my.crt\"\n        \"/etc/ssl/ca_certificates.txt\"
  sandbox\n        timeout \"my.bundle.id\"\n    let payload = alertMessage \"Title\"
  \"Hello From Haskell\"\n        message = newMessage payload\n        token   =
  base16EncodedToken \"the-token\"\n    success <- sendMessage session token payload\n
  \   print success\n\n# command line utility\n\nThe command line utility can be used
  for testing your app. Use like this:\n\n    sendapn -c ../apn.crt -k ../apn.key
  -a \\\n        /etc/ssl/certs/ca-certificates.crt -b your.bundle.id -s \\\n        -t
  your-token -m \"Your-message\"\n\nThe -s flag means \"sandbox\", i.e., for apps
  that are deployed in a\ndevelopment environment.\n\n# credentials\n\napn.crt and
  apn.key are the certificate and private key of your\nAPN certificate from apple.
  To extract them from a .p12 file,\nuse openssl:\n\n    openssl pkcs12 -in mycredentials.p12
  -out apn.crt -nokeys\n    openssl pkcs12 -in mycredentials.p12 -nodes -out apn.key
  -nocerts\n    \nca-certificates.crt is a truststore that contains the root certificates\nthat
  are used to verify the apn server's server certificates.\n"
license-name: BSD3
