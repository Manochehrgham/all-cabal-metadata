homepage: ''
changelog-type: markdown
hash: 5fea0f8c8d0cfa462dc0e71277e7a75de1cb66f6d443062653d10088aa7ffcd8
test-bench-deps:
  diagrams-lib: ! '>=1.2'
  blaze-svg: ! '>=0.3'
  bytestring: ! '>=0.10'
  base: ! '>=4.2'
  text: ! '>=1.1'
  diagrams-svg: ! '>=1.1'
  containers: ! '>=0.5'
  tasty-hunit: ! '>=0.8'
  tasty: ! '>=0.8'
  deepseq: ! '>=1.3'
  puzzle-draw: -any
  yaml: ! '>=0.8.4'
maintainer: rfvollmert@gmail.com
synopsis: Creating graphics for pencil puzzles.
changelog: ! '0.1.0.4: 20141115

  -----------------


  * add installation and usage instructions to README

  * merge puzzle-draw-cmdline

  * update for diagrams 1.2 and ghc 7.8

  * add new puzzle types: Bahnhof, Cave

  * rename `countnumbers` to `meanderingnumbers`

  * include and use a nicer font

  * command-line option to list supported puzzle types

  * various tweaks and fixes


  0.1.0.3: 20140519

  -----------------


  * add new puzzle types: Maximal Lengths, Prime Place, Magic Labyrinth



  0.1.0.2: 20140419

  -----------------


  * add new puzzle types: Japanese Sums, Coral


  0.1.0.1: 20140409

  -----------------


  * add new puzzle type: Tapa


  0.1.0.0

  -------


  * first release

'
basic-deps:
  diagrams-lib: ! '>=1.2'
  SVGFonts: ! '>=1.4'
  base: ! '>=4.2 && <5'
  unordered-containers: ! '>=0.2'
  text: ! '>=1.1'
  vector-space: ! '>=0.8'
  filepath: ! '>=1.3'
  parsec: ! '>=3.1'
  diagrams-svg: ! '>=1.1'
  containers: ! '>=0.5'
  mtl: ! '>=2.1'
  hashable: ! '>=1.2'
  optparse-applicative: ! '>=0.7'
  aeson: ! '>=0.7'
  puzzle-draw: -any
  yaml: ! '>=0.8.4'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
author: Robert Vollmert
latest: '0.1.0.4'
description-type: markdown
description: ! "[![Build Status](https://api.travis-ci.org/robx/puzzle-draw.png)][travis]\n\npuzzle-draw\n===========\n\npuzzle-draw
  is a library and command-line tool for drawing pencil\npuzzles using [Diagrams][diagrams].
  It aims to provide a utility layer\non top of Diagrams to help with drawing arbitrary
  puzzles, as well as\nsupporting several specific puzzle types directly. In addition,
  it\nincludes functionality for parsing puzzle data from a YAML file format.\n\nExamples\n--------\n\nA
  [liar slitherlink][liarslither] with solution:\n\n![Liar Slitherlink](doc/slitherlink-liar-example.png)\n\nThis
  was rendered from the following YAML document:\n\n```\ntype: slitherlinkliar\npuzzle:
  |\n  1..0.3\n  .03222\n  0....1\n  3....3\n  32202.\n  3.3..3\nsolution:\n  loop:
  |\n    .┌──┐┌┐\n    .│┌─┘││\n    .│└──┘│\n    ┌┘.┌─┐│\n    └┐┌┘.││\n    ┌┘│..││\n
  \   └─┘..└┘\n  liars: |\n    ...X..\n    .X....\n    X.....\n    .....X\n    ....X.\n
  \   ..X...\n```\n\nThere is a demo web application at [demo] that provides some
  more\nexamples and that can be used to generate SVG images from such\npuzzle descriptions.\n\nOr
  see a [puzzle set][twentyfour] that covers the puzzle types\nthat are supported
  as of 2014-05.\n\nInstalling\n----------\n\nThis is a brief overview of how to install
  the command line tool.\nYou'll need to get a Haskell environment, by installing
  the\n[Haskell Platform][platform]. Then install `puzzle-draw` with cabal:\n\n```\n$
  cabal install puzzle-draw\n```\n\nThis will compile puzzle-draw against the SVG
  backend, and install\na binary `drawpuzzle` that formats puzzles to SVG. Alternatively,\nyou
  can compile against the Cairo backend by passing `-fcairo`:\n\n```\n$ cabal install
  -fcairo puzzle-draw\n```\n\nThis will enable PDF and PNG output. Be warned that
  getting Cairo\ninstalled can be tricky on non-Linux platforms.\n\nRunning\n-------\n\nAs
  an example, suppose the Liar Slitherlink puzzle description above\nis copied into
  a file `slitherliar.pzl`.\n\n```\n$ drawpuzzle slitherliar.pzl\n```\n\nThis will
  generate two files `slitherliar.svg` and `slitherliar-sol.svg`,\ncontaining the
  puzzle and solved puzzle, respectively. Run\n\n```\n$ drawpuzzle -h\n```\n\nto see
  some command line options that allow modifying the program's\nbehaviour, e.g., choosing
  the output format.\n\n[travis]: https://travis-ci.org/robx/puzzle-draw\n[cmdline]:
  https://github.com/robx/puzzle-draw-cmdline\n[liarslither]: https://maybepuzzles.wordpress.com/types/liar-slither-link/\n[twentyfour]:
  https://maybepuzzles.wordpress.com/2014/03/29/puzzle-set-24-hour-marathon/\n[diagrams]:
  http://projects.haskell.org/diagrams/\n[demo]: https://puzzle-draw-demo.herokuapp.com\n[platform]:
  https://www.haskell.org/platform/\n"
license-name: MIT
