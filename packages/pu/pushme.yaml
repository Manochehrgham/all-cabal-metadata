changelog-type: ''
hash: 6450dc1672a93914d1f6abbb4fcd99a4cadff49187b09584346eb77d02e8ddfe
test-bench-deps: {}
synopsis: Tool to synchronize multiple directories with rsync, zfs or git-annex
changelog: ''
basic-deps:
  shelly: ! '>=0.14.0.1'
  bytestring: ! '>=0.9.2'
  unix: ! '>=2.5.1'
  io-storage: ! '>=0.3'
  base: ! '>=4 && <5'
  time: ! '>=1.4'
  unordered-containers: ! '>=0.2.2'
  text: ! '>=0.11.2'
  system-fileio: ! '>=0.3.9'
  containers: ! '>=0.4.2'
  lens: ! '>=2.8'
  hslogger: ! '>=1.2'
  old-locale: ! '>=1.0.0'
  pointless-fun: ! '>=1.1'
  regex-posix: ! '>=0.95'
  parallel-io: ! '>=0.3.2'
  optparse-applicative: ! '>=0.5.2.1'
  text-format: ! '>=0.3'
  deepseq: ! '>=1.3'
  system-filepath: ! '>=0.4.7'
  aeson: ! '>=0.6.0'
  yaml: ! '>=0.8'
all-versions:
- '0.2.0'
- '1.0.0'
- '1.0.1'
- '1.1.0'
- '1.4.0'
- '1.5.0'
latest: '1.5.0'
description-type: markdown
description: ! "This is the script I use for synchronizing data between my machines
  (and also\nto directories on the same machine, externally connected drives, and
  to and\nbetween ZFS filesystems).\n\nHere is an example set of files for synchronizing
  my home directory and\n`/usr/local` via rsync between two machines: `foo` and `bar`.
  \ First,\n`~/.pushme/stores.yml`:\n\n    - Targets:\n      - - bar\n        - -
  home\n          - local\n      HostRe: [Ff]oo\n      Name: Foo\n      UserName:
  johnw\n      SelfRe: [Ff]oo\n      ZfsPool: null\n      ZfsPath: null\n      IsPrimary:
  true\n      AnnexName: foo\n      AnnexFlags: []\n    - Targets:\n      - - foo\n
  \       - - home\n          - local\n      HostRe: [Bb]ar\n      Name: Bar\n      UserName:
  johnw\n      SelfRe: [Bb]ar\n      ZfsPool: null\n      ZfsPath: null\n      IsPrimary:
  false\n      AnnexName: bar\n      AnnexFlags:\n      - - 'foo'\n        - - - 'home'\n
  \           - - '-\\('\n              - '--not'\n              - '--in'\n              -
  'foo'\n              - '--and'\n              - '--not'\n              - '--in'\n
  \             - 'web'\n              - '-\\)'\n\nThen, `~/.pushme/filesets.yml`:\n\n
  \   - Priority: 60\n      Name: home\n      Class: quick,main\n      ReportMissing:
  true\n    - Priority: 80\n      Name: local\n      Class: system,main\n      ReportMissing:
  false\n\nAnd finally, `~/.pushme/containers.yml`:\n\n    - Store: foo,bar\n      Recurse:
  false\n      Fileset: home\n      PoolPath: null\n      IsAnnex: false\n      LastRev:
  null\n      LastSync: null\n      Path: ~/\n    - Store: foo,bar\n      Recurse:
  false\n      Fileset: local\n      PoolPath: null\n      IsAnnex: false\n      LastRev:
  null\n      LastSync: null\n      Path: /usr/local/\n\nNow I can run the following
  command:\n\n    foo $ pushme bar\n    15:18:44 - [NOTICE] Synchronizing Foo -> Bar\n
  \   15:18:44 - [NOTICE] Sending Foo/home → Bar\n    15:18:52 - [NOTICE] Sent 151.0M
  in 131 files (out of 1.37G in 12,418)\n    15:20:26 - [NOTICE] Sending Foo/local
  → Bar\n    15:21:02 - [NOTICE] Sent 0b in 0 files (out of 6.45G in 207,453)\n\nIf
  you are wondering about the complexity of keeping filesets separate from\ncontainers,
  it's because I use pushme for several different scenarios:\nrsync'ing between machines,
  rsync'ing into ZFS filesystems, and sending ZFS\nfilesystems as snapshot stream
  between servers.  Pushme is able to handle all\nof these scenarios, but doing so
  required a bit more abstraction than a simple\nrsync-only tool would have needed.\n\nSome
  common options include:\n\n    $ pushme -c quick bar       # only sync filesets
  with the \"quick\" class\n    $ pushme -f home bar        # only sync the \"home\"
  fileset\n    $ pushme -n bar             # don't do anything, just scan\n    $ pushme
  -N bar             # don't even scan\n    $ pushme -v bar             # show commands
  being executed\n    $ pushme -D bar             # show more info than you want to
  see\n"
