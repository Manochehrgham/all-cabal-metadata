homepage: ''
changelog-type: ''
hash: 486340a281393cd1e5c12e875e8975dcb4f9f3ac340a918e4581bb37f372e965
test-bench-deps:
  hspec-expectations-pretty-diff: -any
  base: -any
  hspec: -any
  text: -any
  containers: -any
  purescript-bridge: -any
maintainer: robert . klotzner A T gmx . at
synopsis: Generate PureScript data types from Haskell data types
changelog: ''
basic-deps:
  base: ! '>=4.8 && <=5.1'
  text: -any
  generic-deriving: -any
  filepath: -any
  containers: -any
  lens: -any
  mtl: -any
  transformers: -any
  directory: -any
all-versions:
- '0.1.0.0'
- '0.3.0.0'
- '0.3.0.2'
- '0.3.0.3'
- '0.3.0.4'
- '0.3.0.5'
- '0.3.0.6'
- '0.3.1.0'
- '0.3.1.1'
- '0.3.2.0'
- '0.4.0.0'
- '0.6.0.0'
- '0.6.0.1'
- '0.6.0.2'
- '0.7.0.0'
- '0.7.0.1'
author: Robert Klotzner
latest: '0.7.0.1'
description-type: markdown
description: ! '# purescript-bridge



  [![Build Status](https://travis-ci.org/eskimor/purescript-bridge.svg?branch=master)](https://travis-ci.org/eskimor/purescript-bridge)




  Translate your Haskell types to PureScript types. It should in theory work for almost
  all Haskell types, including type constructors!

  You just have to instantiate it with dummy parameters from e.g. "Language.PureScript.Bridge.TypeParameters".


  Data type translation is fully and easily customizable by providing your own `BridgePart`
  instances!


  ## JSON encoding / decoding


  For compatible JSON representations you should be using [aeson](http://hackage.haskell.org/package/aeson)''s
  generic encoding/decoding with default options

  and `encodeJson` and `decodeJson` from "Data.Argonaut.Generic.Aeson" in [purescript-argonaut-generic-codecs](https://github.com/eskimor/purescript-argonaut-generic-codecs).



  ## Documentation


  Usage of this library is documented in [`Language.Purescript.Bridge`](http://hackage.haskell.org/package/purescript-bridge/docs/Language-PureScript-Bridge.html).


  All you should need to get started is: [`writePSTypes`](http://hackage.haskell.org/package/purescript-bridge/docs/Language-PureScript-Bridge.html#writePSTypes).


  ## Status


  This library is at a quite early stage. It works for my use case at the moment and
  I will fix bugs when they come along. Also PRs for more `PSType`s definitions and
  bridges are very welcome!


  Expect bugs - especially for more advanced use cases. Although I have tested the
  most advanced one already with no issues, bugs always creep in.

'
license-name: BSD3
