changelog-type: ''
hash: 68f8285ef4be72c3fbd9d3a253fbd65b34df7e5847518e5e83d0a3382d60f097
synopsis: Newtype wrappers for approximate equality
changelog: ''
all-versions:
- '1.0'
- '1.1'
- '1.1.0.1'
- '1.1.0.2'
latest: '1.1.0.2'
description-type: haddock
description: ! 'The purpose of this module is to provide newtype wrappers that allow
  one to effectively override the equality operator of a value so that it is /approximate/
  rather than /exact/.  The wrappers use type annotations to specify the tolerance;
  the ''Digits'' type constructor has been provided for specifying the tolerance using
  type-level natural numbers.  Instances for all of the classes in the numerical hierarchy
  have been provided for the wrappers, so the wrapped values can mostly be used in
  the same way as the original values. (In fact, most of the time one doesn''t even
  have to wrap the starting values, since expressions such as @(1+sqrt 2/3)@ are automatically
  wrapped thanks to the ''fromIntegral'' method of the ''Num'' typeclass.)

  See the documentation for Data.Eq.Approximate for more detailed information on how
  to use this package.

  New in version 1.1:  Added explicit Show constraints to the Show instances, as the
  Num class in the newest version of GHC (wisely) no longer includes Show as a constraint.'
