changelog-type: ''
hash: ac37fd488425c23475de24602c80e0ac3b4ea3cb0362908a6a921338943f00a7
synopsis: Simple and type safe web framework that generate web API documentation.
changelog: ''
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.2.0.0'
- '0.3.0.0'
- '0.3.1.0'
- '0.3.2.0'
- '0.4.0.0'
- '0.4.0.1'
- '0.4.0.2'
- '0.4.2.0'
- '0.4.3.0'
- '0.4.3.1'
- '0.4.3.2'
- '0.5.0.0'
- '0.5.1.0'
- '0.6.0.0'
- '0.6.0.1'
- '0.6.1.0'
- '0.7.0.0'
- '0.8.0.0'
- '0.9.0.0'
- '0.10.0'
- '0.11.0'
- '0.11.1'
- '0.11.2'
- '0.11.3'
- '0.12.0'
- '0.12.1'
- '0.12.2'
- '0.12.3'
- '0.12.4'
- '0.12.5'
- '0.12.6'
- '0.12.7'
- '0.12.8'
- '0.13.0'
- '0.14.0'
- '0.14.0.1'
- '0.15.0'
- '0.15.1'
- '0.15.2'
- '0.16.0'
- '0.17.0'
- '0.17.1'
- '0.17.2'
- '1.0.0'
- '1.1.0'
- '1.1.1'
- '1.1.2'
- '1.1.3'
- '1.1.4'
- '1.2.0'
- '1.2.1'
- '1.2.2'
- '1.2.3'
- '1.3.0'
- '1.4.0'
- '1.4.1'
- '1.4.2'
- '1.4.3'
latest: '1.4.3'
description-type: haddock
description: ! 'Simple and type safe web framework that can be automatically generate
  API documentation.


  @

  &#123;-&#35; LANGUAGE QuasiQuotes &#35;-&#125;

  &#123;-&#35; LANGUAGE OverloadedStrings &#35;-&#125;


  import Web.Apiary

  import Network.Wai.Handler.Warp

  import qualified Data.ByteString.Lazy.Char8 as L


  main :: IO ()

  main = runApiary (run 3000) def $ do

  &#32;&#32;[capture|/age::Int|] . ([key|name|] =: pLazyByteString) . method GET .
  action $ do

  &#32;&#32;&#32;&#32;&#32;&#32;(age, name) <- [params|age,name|]

  &#32;&#32;&#32;&#32;&#32;&#32;guard (age >= 18)

  &#32;&#32;&#32;&#32;&#32;&#32;contentType &#34;text/html&#34;

  &#32;&#32;&#32;&#32;&#32;&#32;mapM_ appendLazyBytes [&#34;&#60;h1&#62;Hello, &#34;,
  name, &#34;!&#60;/h1&#62;\\n&#34;]

  @


  @

  $ curl localhost:3000

  404 Page Notfound.

  $ curl ''localhost:3000/20?name=arice''

  &#60;h1&#62;Hello, arice!&#60;/h1&#62;

  $ curl ''localhost:3000/15?name=bob''

  404 Page Notfound.

  $ curl -XPOST ''localhost:3000/20?name=arice''

  404 Page Notfound.

  @


  * High performance(benchmark: <https://github.com/philopon/apiary-benchmark>).


  * Nestable route handling(Apiary Monad; capture, method and more.).


  * Type safe route filter.


  * Auto generate API documentation(example: <http://find-hackage.herokuapp.com/api/documentation>).


  more examples: <https://github.com/philopon/apiary/blob/v1.4.0/examples/>


  live demo: <http://find-hackage.herokuapp.com/> (source code: <https://github.com/philopon/find-hackage>)'
