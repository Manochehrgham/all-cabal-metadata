changelog-type: ''
hash: b15a8307bb73ff23e87499cdbf181a99933e7210ec31def3303d87e592cee035
synopsis: Type safe URLs for Snap
changelog: ''
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.3.0.1'
- '0.4.0.0'
- '0.5.0.0'
latest: '0.5.0.0'
description-type: haddock
description: ! 'Type safe URL generation and routing for Snap using <http://hackage.haskell.org/package/web-routes
  web-routes>, and builds on <https://github.com/stepcut/snap-web-routes-demo work>

  done by Jeremy Shaw.


  Get started with the comprehensive  __<https://github.com/lukerandall/snap-web-routes/blob/master/README.md
  tutorial>__.


  = Brief overview


  It allows you to define a data type that represents the routes in your application:


  > data AppUrl

  >     = Login                   -- routes to /login

  >     | Logout                  -- routes to /logout

  >     | User (Resource UserId)  -- provides RESTful routes at /user


  ''Resource'' is documented in Snap.Snaplet.Router.REST, and makes defining RESTful
  routes easier. Also provided are functions to use the URL data type in your app:


  > someHandler :: Handler App App ()

  > someHandler :: doSomething >> redirectURL $ User Index


  and to generate URLs in views:


  > linksHandler :: Handler App App ()

  > linksHandler = heistLocal (I.bindSplices linksSplices) $ render "links"

  >   where

  >     linksSplices = do

  >         "loginUrl" ## urlSplice Login

'
