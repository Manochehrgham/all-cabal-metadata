changelog-type: ''
hash: 1d73b564724a4b35602b49d6dab07a4822c65ba6660b3699d8efa18ea0782a62
synopsis: Extracts labeled snippets of code to files.
changelog: ''
all-versions:
- '0.1'
- '0.2.0'
latest: '0.2.0'
description-type: haddock
description: ! 'Snippet-extractor looks for snippets in files and

  places those snippets in their own files.


  A snippet is defined as consecutive lines in a

  file delimited by \"\@snippet-start \<filename\>\" and

  \"\@snippet-end\", the extracted snippet is placed in

  the provided filename.  If the desired filename

  contains spaces, put the filename in quotes.


  Everything on the line with the start and end

  markers is discarded.  Snippet-extractor should

  be agnostic to the syntax of the file you are

  extracting from.


  Here is an example:


  >  /* @snippet-start snippet1.c */

  >  for(i = 0; i < 100; i++)

  >    printf("%d\n",i);

  >

  >  /* @snippet-end */


  The above snippet would be extracted and placed in

  snippet1.c


  Snippet-extractor is intended for use in

  documentation.  For example, the snippets could

  be extracted from working code and then included

  in a text about the code.'
