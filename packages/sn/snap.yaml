homepage: http://snapframework.com/
changelog-type: markdown
hash: 27e804d1f6070f0899ad3770dfded3db1b6ce44309b28c33f11701edcfe6428a
test-bench-deps: {}
maintainer: snap@snapframework.com
synopsis: Top-level package for the Snap Web Framework
changelog: ! '# 0.14.0


  * Allow lens-4.8

  * Remove re-export of Control.Lens.Loupe, since it was removed upstream.

  * Remove re-exports of other non-snap modules in Snap.

'
basic-deps:
  cereal: ! '>=0.3 && <0.5'
  MonadCatchIO-transformers: ! '>=0.2 && <0.4'
  bytestring: ! '>=0.9.1 && <0.11'
  clientsession: ! '>=0.8 && <0.10'
  mwc-random: ! '>=0.8 && <0.14'
  logict: ! '>=0.4.2 && <0.7'
  stm: ! '>=2.2 && <2.5'
  base: ! '>=4.4 && <5'
  time: ! '>=1.1 && <1.6'
  comonad: ! '>=1.1 && <4.3'
  configurator: ! '>=0.1 && <0.4'
  unordered-containers: ! '>=0.1.4 && <0.3'
  text: ! '>=0.11 && <1.3'
  syb: ! '>=0.1 && <0.5'
  filepath: ! '>=1.1 && <1.5'
  dlist: ! '>=0.5 && <0.8'
  containers: ! '>=0.3 && <0.6'
  snap-server: ! '>=0.9 && <0.11'
  xmlhtml: ! '>=0.1 && <0.3'
  lens: ! '>=3.7.6 && <4.10'
  old-time: ! '>=1.0 && <1.2'
  snap-core: ! '>=0.9 && <0.11'
  directory-tree: ! '>=0.11 && <0.13'
  regex-posix: ! '>=0.95 && <1'
  mtl: ! '>2.0 && <2.3'
  pwstore-fast: ! '>=2.2 && <2.5'
  hashable: ==1.1.* || >=1.2.0.6 && <1.3
  vector-algorithms: ! '>=0.4 && <0.8'
  attoparsec: ! '>=0.10 && <0.13'
  transformers: ! '>=0.2 && <0.5'
  heist: ! '>=0.14 && <0.15'
  errors: ! '>=1.4 && <1.5'
  aeson: (>=0.6 && <0.7) || (>=0.7.0.4 && <0.9)
  template-haskell: ! '>=2.2 && <2.11'
  vector: ! '>=0.7.1 && <0.11'
  directory: ! '>=1.0 && <1.3'
all-versions:
- '0.3.0'
- '0.3.0.1'
- '0.3.1'
- '0.4'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.5.0'
- '0.5.1'
- '0.5.1.1'
- '0.5.1.2'
- '0.5.1.3'
- '0.5.2'
- '0.5.3'
- '0.5.3.1'
- '0.5.4'
- '0.5.5'
- '0.5.5.1'
- '0.6.0'
- '0.6.0.1'
- '0.6.0.2'
- '0.7'
- '0.8.0'
- '0.8.0.1'
- '0.8.0.2'
- '0.8.1'
- '0.9.0'
- '0.9.0.1'
- '0.9.1'
- '0.9.1.1'
- '0.9.2'
- '0.9.2.1'
- '0.9.2.2'
- '0.10.0'
- '0.10.0.1'
- '0.11.0'
- '0.11.1'
- '0.11.2'
- '0.11.2.1'
- '0.11.2.2'
- '0.11.3'
- '0.11.3.1'
- '0.12.0'
- '0.12.1'
- '0.13.0'
- '0.13.0.1'
- '0.13.0.2'
- '0.13.0.3'
- '0.13.0.4'
- '0.13.1'
- '0.13.1.1'
- '0.13.1.2'
- '0.13.2.0'
- '0.13.2.1'
- '0.13.2.2'
- '0.13.2.3'
- '0.13.2.4'
- '0.13.2.5'
- '0.13.2.6'
- '0.13.2.7'
- '0.13.2.8'
- '0.13.2.9'
- '0.13.3'
- '0.13.3.1'
- '0.13.3.2'
- '0.14.0'
- '0.14.0.1'
- '0.14.0.2'
author: Ozgun Ataman, Doug Beardsley, Gregory Collins, Carl Howells, Chris Smith
latest: '0.14.0.2'
description-type: markdown
description: ! "Snap Framework\n==============\n\nSnap is a web framework for Haskell,
  based on iteratee I/O (as [popularized by\nOleg Kiselyov](http://okmij.org/ftp/Streams.html#iteratee)).
  \ For more\ninformation about Snap, read the `README.SNAP.md` or visit the Snap
  project\nwebsite at http://www.snapframework.com/.\n\n## Library contents\n\nThis
  is top-level project for the Snap Framework, which contains:\n\n  * a command-line
  utility for creating initial Snap applications\n\n  * a library allowing Snap applications
  to recompile actions on the\n    fly in development mode, with no performance loss
  in production\n    mode.\n\n  * a \"snaplet\" API allowing web applications to be
  build from composable\n    pieces.\n\nBuilding snap\n=============\n\nThe snap tool
  and library are built using\n[Cabal](http://www.haskell.org/cabal/) and\n[Hackage](http://hackage.haskell.org/packages/hackage.html).
  Just run\n\n    cabal install\n\nfrom the `snap` toplevel directory.\n\n\n## Building
  the Haddock Documentation\n\nThe haddock documentation can be built using 'cabal
  haddock'.\n\nThe docs get put in `dist/doc/html/`.\n\n\n## Building the testsuite\n\nTo
  build the test suite, `cd` into the `test/` directory and run\n\n    $ cabal configure\n
  \   $ cabal build\n\nFrom here you can invoke the testsuite by running:\n\n    $
  ./runTestsAndCoverage.sh\n\n\nThe testsuite generates an `hpc` test coverage report
  in `test/dist/hpc`.\n\n\n## Roadmap to Understanding Snaplets\n\n1. Read Tutorial.lhs
  which is in `project_template/tutorial/src`.\n2. Generate and read the haddock docs.\n3.
  The test code has the nice property that it actually functions as a pretty good
  example app and covers a lot of the use cases.\n4. If you're interested in the implementation,
  read design.md.\n\n"
license-name: BSD3
