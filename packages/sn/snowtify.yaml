homepage: https://github.com/aiya000/hs-snowtify#README.md
changelog-type: ''
hash: 2ab6ae010fff57dd24fa49bfc0db2557e10921d3cfa2edf49fbbdb2af53f5af8
test-bench-deps: {}
maintainer: aiya000.develop@gmail.com
synopsis: ! 'snowtify send your result of `stack build` (`stack test`) to notify-daemon
  :dog2:'
changelog: ''
basic-deps:
  either: -any
  base: ! '>=4.7 && <5'
  text: -any
  safe-exceptions: -any
  turtle: -any
  safe: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
author: aiya000
latest: '0.1.0.2'
description-type: markdown
description: ! '# :snowman: hs-snowtify :snowman:

  snowtify send your result of `stack build` (`stack test`) to notify-daemon :dog2:


  ![screenshot](screenshot.png)



  # :notes: Usage :notes:

  ```console

  $ snowtify test

  (`stack test` results is shown, it is like above screenshot)

  $ snowtify build

  (same as snowtify test, but stack build is executed)

  $ snowtify

  (same as snowtify build, snowtify run build by default)

  ```



  # :muscle: Example :muscle:

  ```console

  $ dunst &

  (dunst is a notify-daemon)

  $ cd <some haskell project directory>

  $ watchexec -w . ''snowtify test''

  (`stack test` results is shown after you update some file)

  ```



  # :diamonds: How to install this ? :diamonds:


  - This way is never supported now ~~1. Use haskell-stack~~


  ```console

  $ stack install snowtify

  ```


  - 2. Use cabal


  ```console

  $ cabal install snowtify

  ```

'
license-name: MIT
