homepage: https://github.com/vmchale/QRImager#readme
changelog-type: ''
hash: 78f5656d4cdf8466301386e0515c2b213d1f12067d0bfcb8b70067deaece79cd
test-bench-deps:
  base: -any
  process: -any
  qr-imager: -any
maintainer: tmchale@wisc.edu
synopsis: Library to generate QR codes from bytestrings and objects
changelog: ''
basic-deps:
  MissingH: -any
  JuicyPixels: -any
  bytestring: -any
  base: ! '>=4.7 && <5'
  process: -any
  lens: -any
  haskell-qrencode: -any
  jose-jwt: -any
  cryptonite: -any
  optparse-applicative: -any
  qr-imager: -any
  aeson: -any
  vector: -any
  directory: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.2.0'
- '0.1.2.1'
- '0.2.0.0'
author: Vanessa McHale
latest: '0.2.0.0'
description-type: markdown
description: ! "# QR Imager Library\nThis is a library to generate `.png` files from
  QR codes.\n\n## Dependencies\nThe library depends on the C library [https://github.com/fukuchi/libqrencode](libqrencode)
  which you will need to install separately, as well as the C library `Zbar` from
  [here](https://github.com/ZBar/ZBar). You should also be able to get them from your
  distro. \n\n## Usage\nThe library exports three main functions - `createQRCode`,
  `readQRString`, and `byteStringToQR` - and their secured/signed versions. The first
  takes any object that is an instance of `ToJSON` and writes an image to file, while
  the second takes filepath pointing to an image and returns the text in the QR code.
  The third takes a (strict) bytestring and writes it to file.\n\n## Executable\n\n###
  Installation\nFor building haskell, the best tool is currently [http://haskellstack.org](stack).
  Install it, and then type\n\n```\nstack install --install-ghc\n```\n\nin the appropriate
  directory, and it will be installed to your path. \n\n### Use\n\nCompiling will
  generate an executable called `qrpipe` which reads from `stdin` and outputs a file
  as the second argument, e.g.\n\n```\necho 'My name is: Vanessa\" | qrpipe write
  -v \"nametag.png\"\n```\n\nTo then read the nametag:\n\n```\nqrpipe read \"nametag.png\"\n```\n\n##
  Library\nThe library can be used via the exported functions `createQRCode`, `byteStringToQR`
  and `readQRString`, plus their signed counterparts. \n"
license-name: BSD3
