homepage: https://github.com/vmchale/QRImager#readme
changelog-type: ''
hash: 940e799d07168eb9a4354e1d4740c04c3fea675b23da0111ee143fbc225e4cf0
test-bench-deps:
  base: ! '>=4.9.0.0 && <4.10'
  hspec: ! '>=2.2.4 && <2.3'
  qr-imager: ! '>=0.2.2.0 && <0.3'
maintainer: tmchale@wisc.edu
synopsis: Library to generate QR codes from bytestrings and objects
changelog: ''
basic-deps:
  MissingH: ! '>=1.4.0.1 && <1.5'
  JuicyPixels: ! '>=3.2.8 && <3.3'
  bytestring: ! '>=0.10.8.1 && <0.11'
  base: ! '>=4.9.0.0 && <4.10'
  process: ! '>=1.4.2.0 && <1.5'
  lens: ==4.14.*
  haskell-qrencode: ! '>=1.0.4 && <1.1'
  jose-jwt: ! '>=0.7.4 && <0.8'
  cryptonite: ==0.21.*
  optparse-applicative: ! '>=0.12.1.0 && <0.13'
  qr-imager: ! '>=0.2.2.0 && <0.3'
  aeson: ! '>=0.11.2.1 && <0.12'
  vector: ! '>=0.11.0.0 && <0.12'
  directory: ! '>=1.2.6.2 && <1.3'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.2.0'
- '0.1.2.1'
- '0.2.0.0'
- '0.2.1.0'
- '0.2.1.1'
- '0.2.1.2'
- '0.2.1.3'
- '0.2.2.0'
author: Vanessa McHale
latest: '0.2.2.0'
description-type: markdown
description: ! "# QR Imager Library\n[![Build Status](https://travis-ci.org/vmchale/QR-writer.svg?branch=master)](https://travis-ci.org/vmchale/QR-writer)\n\nThis
  is a library to generate `.png` files from QR codes.\n\n## Dependencies\nThe library
  depends on the C library [libqrencode](https://github.com/fukuchi/libqrencode) which
  you will need to install separately, as well as the C library `Zbar` from [here](https://github.com/ZBar/ZBar).
  You should also be able to get them from your distro. \n\n## Library\nThe library
  can be used via the exported functions `createQRCode`, `byteStringToQR` and `readQRString`,
  plus their signed counterparts. The first two export to \".png\" while the third
  can be used on any image format `Zbar` supports.\n\nThe functions `bsToImg` and
  `objToImg` output JuicyPixels images for your further manipulation.\n\n## Executable\n\n###
  Installation\nFor building haskell, the best tool is currently [http://haskellstack.org](stack).
  Install it, and then type\n\n```\nstack install --install-ghc\n```\n\nin the appropriate
  directory, and it will be installed to your path. \n\n### Use\n\nCompiling will
  generate an executable called `qrpipe` which reads from `stdin` and outputs a file
  as the second argument, e.g.\n\n```\necho 'My name is: Vanessa\" | qrpipe write
  -v \"nametag.png\"\n```\n\nTo then read the nametag:\n\n```\nqrpipe read \"nametag.png\"\n```\n\n"
license-name: BSD3
