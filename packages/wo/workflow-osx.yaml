homepage: https://github.com/sboosali/workflow-osx#readme
changelog-type: ''
hash: eb8c9b4d810191b01d15af60999e00a7a8268260ab4835b0d3039615cbeb3814
test-bench-deps: {}
maintainer: samboosalis@gmail.com
synopsis: a "Desktop Workflow" monad with Objective-C bindings
changelog: ''
basic-deps:
  exceptions: ==0.8.*
  free: ==4.12.*
  bytestring: ==0.10.*
  workflow-osx: ==0.0.0
  base: ==4.8.*
  filepath: ==1.4.*
  bv: ==0.3.*
  mtl: ==2.2.*
  transformers: ==0.4.2.*
  http-types: ==0.8.*
all-versions:
- '0.0.0'
author: Spiros Boosalis
latest: '0.0.0'
description-type: markdown
description: ! "# workflow-osx\n\na (free) monad, with Objective-C bindings, for \"Workflow\"
  actions. \n\ne.g. press some keys, click the mouse, get and set the clipboard. GHC's
  C FFI takes only microseconds.\n\nfor examples, see the documentation on hackage
  <https://hackage.haskell.org/package/workflow-osx>\n\n# Issues\n\n## the build\n\nforeign
  dependencies always complicate the build process. it's known to work with the following:\n\n*
  OS \n\n        $ sw_vers\n        ProductName:\tMac OS X\n        ProductVersion:\t10.9.5\n
  \       BuildVersion:\t13F34\n\n* C compiler \n\n        $ gcc --version\n        Configured
  with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/usr/include/c++/4.2.1\n
  \       Apple LLVM version 6.0 (clang-600.0.51) (based on LLVM 3.5svn)\n        Target:
  x86_64-apple-darwin13.4.0\n        Thread model: posix\n\n* Haskell compiler \n\n
  \       $ ghc --version \n        The Glorious Glasgow Haskell Compilation System,
  version 7.10.1\n\n# TODO\n\n## platform agnosticism\n\nexploit the free monad\\'s
  flexibility to define platform-agnostic workflows \n\nproblem: windows (Linux/Windows)
  versus processes (OS X) \n\nproblem: keyboards. Apple keyboards don't have the Windows
  key, Windows keyboards don't have the Apple key. some keyboards have a dozen random
  extra unbound keys.  \n\n## automatic `delay` insertion \n\nproblem: currently,
  delays must be inserted manually. keyboard shortcuts in Emacs succeed with no delay.
  keyboard shortcuts in Chrome, like closing a tab with `M-w`, may drop without a
  long delay (like 250ms). furthermore, different actions need different delays between
  them (e.g. inserting text into Chrome can be done without delay). \n\n## parameterize
  `Workflow` on a keyboard type\n\n"
license-name: GPL-3
