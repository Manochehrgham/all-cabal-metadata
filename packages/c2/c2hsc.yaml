changelog-type: ''
hash: 00932d647003cbeb0f21d24c1a419577779681bc2826efd951abd473e3f3c53b
test-bench-deps: {}
synopsis: Convert C API header files to .hsc and .hsc.helper.c files
changelog: ''
basic-deps:
  split: ! '>=0.2'
  HStringTemplate: ! '>=0.6'
  base: ! '>=4 && <5'
  filepath: ! '>=1.3'
  containers: ! '>=0.4'
  language-c: ! '>=0.4'
  mtl: ! '>=2.0'
  cmdargs: ! '>=0.9'
  transformers: ! '>=0.2'
  pretty: ! '>=1.1'
  directory: ! '>=1.1'
all-versions:
- '0.1.0'
- '0.2.0'
- '0.3.0'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.4.0'
- '0.5.0'
- '0.5.1'
- '0.6.2'
- '0.6.3'
- '0.6.4'
- '0.6.5'
latest: '0.6.5'
description-type: markdown
description: ! "Converts C API header files to `.hsc` and `.hsc.helper.c` files\n\n
  \   Usage: c2hsc --prefix=<Lib Prefix> <FILE>.h\n\nThis will create `<FILE>.hsc`,
  and `<FILE>.hsc.helper.c` if the header file\ncontains inline functions.\n\nFor
  example, in `hlibgit2` on the Mac I'm using:\n\n    c2hsc --prefix=Bindings.Libgit2
  --cppopts=-U__BLOCKS__ \\\n        libgit2/include/git2/tree.h\n\nKnown issues:\n\n
  - Need to output vararg functions with a comment mentioning they are not\n   translatable
  to the Haskell FFI\n\nAlso, please note that this tool will never be 100% accurate.
  \ It cannot\ntranslate macros, or anything related to the preprocessor, for example.
  \ It\noften misses necessary `#include` files, and will get them wrong in any case\nif
  preprocessor conditionals are involved.\n\nThe goal of `c2hsc` is to solve the hardest
  80% of the problem of creating an\nFFI library.  The remaining 20%, plus validation
  of the results, is an\nexercise necessarily left to the user.\n"
