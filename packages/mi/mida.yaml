homepage: https://github.com/mrkkrp/mida
changelog-type: markdown
hash: 98d5441b89ed4939b266a0774a0e98ab8ed5d23e5217890ceceb77da045b4e11
test-bench-deps:
  tf-random: ! '>=0.5'
  test-framework: ! '>=0.4 && <1'
  base: ! '>=4.8 && <5'
  text: ! '>=1.2.0.4'
  megaparsec: ==4.*
  test-framework-quickcheck2: ! '>=0.3 && <0.4'
  containers: ! '>=0.5.5.1'
  HCodecs: ! '>=0.5'
  mtl: ! '>=2.1.3.1'
  transformers: ! '>=0.2.0.0 && <0.5'
  random: -any
  QuickCheck: ! '>=2.4 && <3'
  mida: ! '>=0.4.3'
maintainer: Mark Karpov
synopsis: Language for algorithmic generation of MIDI files
changelog: ! "# History of changes\n\n## MIDA 0.4.5\n\n* various cosmetic changes;\n\n*
  make the executable Cabal-installable.\n\n## MIDA 0.4.4\n\n* cosmetic corrections
  in source code;\n\n* switch to better libraries.\n\n## MIDA 0.4.3\n\n* various corrections
  and cosmetic changes;\n\n* improved printing of syntax trees;\n\n* allow more flexible
  looping expressions.\n\n## MIDA 0.4.2\n\n* introduced simplifications on the level
  of internal language;\n\n* changed default values of some parameters;\n\n* some
  characters have been replaced with pretty Unicode symbols;\n\n* improved manual.\n\n##
  MIDA 0.4.1\n\n* dramatically improved efficiency, now very long compositions can
  be\n  quickly rendered;\n\n* lexer: changed style of comments, shell-like comments
  adopted;\n\n* changed alias of notes: dièse is written now as `s` not as `#`, so
  middle\n  octave is: `c5`, `cs5`, `d5`, `ds5`, `e5`, etc.;\n\n* now there are alias
  for all supported (in MIDI) pitches from 0 to 127,\n  that is: from `c0` to `g10`
  (alias `c10` -- `g10` added);\n\n* changed alias of modulation signs, reason for
  such change is purely\n  technical -- all alias now are predefined definitions,
  rather than\n  syntactic sugar, so all alias must be valid identifiers;\n\n* identifiers
  can contain underline sign (`_`);\n\n* arbitrary number of files can be specified
  for loading (from command line,\n  as well as from interactive REPL);\n\n* many
  purely technical changes that are difficult to explain concisely, but\n  they should
  be mentioned, most important being addition of test suite and\n  ability to generate
  source files from syntax trees;\n\n* added command line options: `--license` and
  `--version`.\n\n## MIDA 0.4.0\n\n* fixed bug in batch mode;\n\n* added tab completion
  based on contents of current input line, including\n  completion of file names for
  some commands;\n\n* detection and rejection of recursive definitions;\n\n* improved
  interface;\n\n* wholly refactored (and sometimes rewritten) code (it's finally\n
  \ sufficiently elegant);\n\n* more intuitive logic of evaluation in some corner
  cases;\n\n* optional displaying of simplified principles (for debug and educational\n
  \ purposes);\n\n* ability to set tempo and program for preview;\n\n* improved documentation.\n\n##
  MIDA 0.3.0\n\n* improved interface and parsing;\n\n* added `:prv` and `:load` special
  commands;\n\n* added additional parameters: modulation, breath, aftertouch, and
  pitch\n  bend;\n\n* fixed minor bugs.\n\n## MIDA 0.2.0\n\n* better command line
  experience: history, auto-completion and more;\n\n* fixed bug with infinite translation
  of scores that consist of elements\n  which have zero duration;\n\n* introduced
  conception of sections;\n\n* all operations have become fully polymorphic.\n\n##
  MIDA 0.1.0\n\nInitial release.\n"
basic-deps:
  tf-random: ! '>=0.5'
  haskeline: ! '>=0.7.1.3'
  base: ! '>=4.8 && <5'
  text: ! '>=1.2.0.4'
  megaparsec: ==4.*
  filepath: ! '>=1.3.0.2'
  process: ! '>=1.2.0.0'
  containers: ! '>=0.5.5.1'
  HCodecs: ! '>=0.5'
  mtl: ! '>=2.1.3.1'
  transformers: ! '>=0.2.0.0 && <0.5'
  optparse-applicative: ! '>=0.11.0.2'
  random: -any
  text-format: ! '>=0.3.1.1'
  mida: ! '>=0.4.3'
  directory: ! '>=1.2.1.0'
all-versions:
- '0.4.3'
- '0.4.4'
- '0.4.5'
author: Mark Karpov
latest: '0.4.5'
description-type: markdown
description: ! "# MIDA\n\n[![License GPL 3](https://img.shields.io/badge/license-GPL_3-green.svg)](http://www.gnu.org/licenses/gpl-3.0.txt)\n[![Hackage](https://img.shields.io/hackage/v/mida.svg?style=flat)](https://hackage.haskell.org/package/mida)\n[![Build
  Status](https://travis-ci.org/mrkkrp/mida.svg?branch=master)](https://travis-ci.org/mrkkrp/mida)\n\nMIDA
  is a minimalistic declarative language for algorithmic generation of\nMIDI files.
  MIDA is not interactive in sense that you cannot control result\nof its activity
  in real time, it is intended for producers and should be\nused with a DAW. MIDA
  can help you create variative elements in your music\nin a very simple way. Since
  MIDI can control a lot of different instruments,\npower of MIDA is truly great.\n\nMain
  reason for MIDA development is to create software tool that can\nbe used in such
  a way that does not change established workflow, so\npeople could use familiar plugins
  and software instruments.\n\nCurrently MIDA can be used to translate source files
  into `.mid` files, and\nalso in interactive mode that will help you to understand
  how MIDA language\nworks.\n\nMIDA is a\n[member of Linux Audio consortium](http://linuxaudio.org/members.html).\n\n##
  Installation\n\n1. Install [Haskell Platform](https://www.haskell.org/platform/);\n2.
  Install [Cabal](https://www.haskell.org/cabal/);\n3. Download and untar git repository
  of MIDA, or clone it:\n\n   ```\n   $ git clone https://github.com/mrkkrp/mida.git\n
  \  ```\n\n4. Go to the root directory of the repository and execute:\n\n   ```\n
  \  $ cabal update\n   $ cabal configure\n   $ cabal install --only-dependencies\n
  \  $ cabal build\n   # sh install.sh\n   ```\n\n   or (if you use Stack):\n\n   ```\n
  \  $ stack build\n   ```\n\n5. Done (you can use `uninstall.sh` to uninstall the
  program).\n\nAlternatively, instead of steps 3–5, you can just:\n\n```\n$ cabal
  install mida\n```\n\nIn this case you will need to add `~/.cabal/bin` directory
  to your `PATH`:\n\n```\n# in .bashrc or similar\nexport PATH=$HOME/.cabal/bin:$PATH\n```\n\n##
  Example\n\nHere is a simple example of MIDA program that demonstrates syntax and\ndeclarative
  nature of the language.\n\n```\n#\n# Example of MIDA program\n# Recommended tempo
  is 60\n#\n\ndur0 = 12 6 6\ndur1 = @[dur0]\npch0 = {0 5 7} + [c5 {e5 d5} c6 {f5 g5}]\npch1
  = pch0\nvel0 = {7..11} * 10\nvel1 = vel0\n```\n\nSee [MIDA Manual](https://mrkkrp.github.io/mida/)
  for more information.\n\n## How to control other things?\n\nIf you're into this
  sort of thing, you may like my another project, called\n[ALGA](https://github.com/mrkkrp/alga).
  It allows to control automation in\nvarious DAWs.\n\n## License\n\nCopyright © 2014,
  2015 Mark Karpov\n\nDistributed under GNU GPL, version 3.\n"
license-name: GPL-3
