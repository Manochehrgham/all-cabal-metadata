homepage: http://github.com/jtobin/mighty-metropolis
changelog-type: ''
hash: 34e1f9f7589b668a575a2e2bdcd8f1eeb50af760de9e7084c0d8a6ce10fdfe21
test-bench-deps:
  base: <5
  containers: -any
  mighty-metropolis: -any
  mwc-probability: ! '>=1.0.1'
maintainer: jared@jtobin.ca
synopsis: The Metropolis algorithm.
changelog: ''
basic-deps:
  base: <5
  mcmc-types: ! '>=1.0.1'
  pipes: ! '>=4 && <5'
  transformers: -any
  mwc-probability: ! '>=1.0.1'
  primitive: -any
all-versions:
- '1.0.0'
- '1.0.1'
- '1.0.2'
author: Jared Tobin
latest: '1.0.2'
description-type: haddock
description: ! 'The classic Metropolis algorithm.


  Wander around parameter space according to a simple spherical Gaussian

  distribution.


  Exports a ''mcmc'' function that prints a trace to stdout, as well as a

  ''metropolis'' transition operator that can be used more generally.


  > import Numeric.MCMC.Metropolis

  >

  > rosenbrock :: [Double] -> Double

  > rosenbrock [x0, x1] = negate (5  *(x1 - x0 ^ 2) ^ 2 + 0.05 * (1 - x0) ^ 2)

  >

  > main :: IO ()

  > main = withSystemRandom . asGenIO $ mcmc 10000 1 [0, 0] rosenbrock'
license-name: MIT
