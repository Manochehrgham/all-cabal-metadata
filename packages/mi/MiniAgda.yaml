homepage: http://www.tcs.ifi.lmu.de/~abel/miniagda/
changelog-type: ''
hash: 1608083ae4af7472717fc71da6f1e6464c22ade385b1e80d09ad6a275f3f67cb
test-bench-deps: {}
maintainer: Andreas Abel <andreas.abel@ifi.lmu.de>
synopsis: A toy dependently typed programming language with type-based termination.
changelog: ''
basic-deps:
  base: ! '>=4.6 && <5'
  array: ! '>=0.3 && <0.6'
  containers: ! '>=0.3 && <0.6'
  haskell-src-exts: ! '>=1.17 && <1.18'
  mtl: ! '>=2.2.0.1 && <2.3'
  pretty: ! '>=1.0 && <1.2'
all-versions:
- '0.2014.1.9'
- '0.2014.5.5'
- '0.2014.9.12'
- '0.2016.12.19'
- '0.2017.2.18'
author: Andreas Abel and Karl Mehltretter
latest: '0.2017.2.18'
description-type: haddock
description: ! 'MiniAgda is a tiny dependently-typed programming language in the style

  of Agda. It serves as a laboratory to test potential additions to the

  language and type system of Agda. MiniAgda''s termination checker is a

  fusion of sized types and size-change termination and supports

  coinduction. Equality incorporates eta-expansion at record and

  singleton types. Function arguments can be declared as static; such

  arguments are discarded during equality checking and compilation.

  Recent features include bounded size quantification and destructor

  patterns for a more general handling of coinduction.'
license-name: OtherLicense
