changelog-type: ''
hash: efe84b854a020421f0d46f8d600f857ef3745a65981c7c0d1ade11b8fd89333d
test-bench-deps: {}
synopsis: A toy dependently typed programming language with type-based termination.
changelog: ''
basic-deps:
  base: ! '>=4.2 && <4.8'
  array: ! '>=0.3 && <0.6'
  containers: ! '>=0.3 && <0.6'
  haskell-src-exts: ! '>=1.14 && <1.16'
  mtl: ! '>=2.2.0.1 && <2.3'
  pretty: ! '>=1.0 && <1.2'
all-versions:
- '0.2014.1.9'
- '0.2014.5.5'
- '0.2014.9.12'
latest: '0.2014.9.12'
description-type: haddock
description: ! 'MiniAgda is a tiny dependently-typed programming language in the style

  of Agda. It serves as a laboratory to test potential additions to the

  language and type system of Agda. MiniAgda''s termination checker is a

  fusion of sized types and size-change termination and supports

  coinduction. Equality incorporates eta-expansion at record and

  singleton types. Function arguments can be declared as static; such

  arguments are discarded during equality checking and compilation.

  Recent features include bounded size quantification and destructor

  patterns for a more general handling of coinduction.'
