homepage: http://github.com/llvm-hs/llvm-hs/
changelog-type: markdown
hash: cf9b04e34ad81b4373ca567831a57978f9133b2821435af69ac074c4741a516c
test-bench-deps:
  bytestring: ! '>=0.10 && <0.11'
  base: ! '>=4.9 && <5'
  containers: ! '>=0.4.2.1'
  llvm-hs-pure: ==4.1.0.0
  llvm-hs: -any
  tasty-quickcheck: ! '>=0.8'
  mtl: ! '>=2.1'
  tasty-hunit: ! '>=0.9'
  pretty-show: ! '>=1.6 && <1.7'
  transformers: ! '>=0.3.0.0'
  temporary: ! '>=1.2 && <1.3'
  tasty: ! '>=0.11'
  QuickCheck: ! '>=2.5.1.1 && <2.10'
  transformers-compat: -any
maintainer: Anthony Cowley, Stephen Diehl, Moritz Kiefer <moritz.kiefer@purelyfunctional.org>
synopsis: General purpose LLVM bindings
changelog: ! "## 4.1.0 (2017-05-17)\n\n* Switch most of the API from `String` to `ByteString`.\n*
  Switch from ExceptT to using exceptions.\n  See `LLVM.Exception` for an overview
  of the exceptions potentially thrown.\n\n## 4.0.1\n\n* Fix linking of system libraries\n\n##
  4.0.0 (initial release, changes in comparison to llvm-general)\n\n* Move modules
  from `LLVM.General*` to `LLVM.*`\n* Support for LLVM 4.0\n* Improved support for
  LLVMâ€™s exception handling instructions\n* `-fshared-llvm` is now supported on windows
  (thanks to @RyanGLScott)\n* Default to `-fshared-llvm`\n* Expose `LLVM.Internal.*`
  modules.\n"
basic-deps:
  exceptions: ! '>=0.8'
  bytestring: ! '>=0.9.1.10'
  base: ! '>=4.9 && <5'
  array: ! '>=0.4.0.0'
  containers: ! '>=0.4.2.1'
  utf8-string: ! '>=0.3.7'
  llvm-hs-pure: ==4.1.0.0
  mtl: ! '>=2.1.3'
  attoparsec: ! '>=0.13'
  transformers: ! '>=0.3 && <0.6'
  template-haskell: ! '>=2.5.0.0'
  transformers-compat: ! '>=0.4'
all-versions:
- '4.0.0.0'
- '4.0.1.0'
- '4.1.0.0'
author: Anthony Cowley, Stephen Diehl, Moritz Kiefer <moritz.kiefer@purelyfunctional.org>,
  Benjamin S. Scarlet
latest: '4.1.0.0'
description-type: haddock
description: ! 'llvm-hs is a set of Haskell bindings for LLVM <http://llvm.org/>.
  Unlike other current Haskell bindings,

  it uses an ADT to represent LLVM IR (<http://llvm.org/docs/LangRef.html>), and so
  offers two advantages: it

  handles almost all of the stateful complexities of using the LLVM API to build IR;
  and it supports moving IR not

  only from Haskell into LLVM C++ objects, but the other direction - from LLVM C++
  into Haskell.'
license-name: BSD3
