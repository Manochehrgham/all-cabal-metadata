homepage: http://haskell.cs.yale.edu/
changelog-type: ''
hash: 37eb4414737234525cc74965bbff6e4b14a11ef0328c6b9f8efb8ce910eda00b
test-bench-deps:
  Euterpea: -any
  Cabal: ! '>=1.9.2'
  base: -any
  ansi-terminal: -any
  QuickCheck: ! '>=2.6'
maintainer: ! 'Donya Quick <donya.quick@yale.edu>,

  Dan Winograd-Cort <daniel.winograd-cort@yale.edu>,

  Mark Santolucito <mark.santolucito@yale.edu>'
synopsis: Library for computer music research and education
changelog: ''
basic-deps:
  markov-chain: -any
  bytestring: -any
  arrows: ! '>=0.4'
  stm: -any
  base: ==4.*
  array: -any
  containers: -any
  heap: ==0.6.0
  ghc-prim: -any
  HCodecs: ! '>=0.2'
  PortMidi: -any
  random: -any
  deepseq: -any
  pure-fft: -any
  UISF: ! '>=0.3'
all-versions:
- '1.0.0'
- '1.1.0'
author: ! 'Paul Hudak <paul.hudak@yale.edu>,

  Eric Cheng <eric.cheng@aya.yale.edu>,

  Hai (Paul) Liu <hai.liu@aya.yale.edu>'
latest: '1.1.0'
description-type: text
description: ! " _____      _                             \n|  ___|    | |                            \n|
  |__ _   _| |_ ___ _ __ _ __   ___  __ _ \n|  __| | | | __/ _ \\ '__| '_ \\ / _ \\/
  _` |\n| |__| |_| | ||  __/ |  | |_) |  __/ (_| |\n\\____/\\__,_|\\__\\___|_|  |
  .__/ \\___|\\__,_|\n                        | |               \n                        |_|
  \              \n\nEuterpea is a domain-specific language embedded in Haskell for
  \ncomputer music research, education, and development, providing \nboth note-level
  and signal-level abstractions.  It is a descendant \nof Haskore and HasSound, and
  is intended for both educational purposes \nas well as serious computer music applications.
  \ Euterpea is a \nwide-spectrum DSL, suitable for high-level music representation,
  \nalgorithmic composition, and analysis; mid-level concepts such as \nMIDI; and
  low-level audio processing, sound synthesis, and instrument \ndesign.  It also includes
  a \"musical user interface,\" a set of \ncomputer-music specific GUI widgets such
  as keyboards, pushbuttons, \nsliders, and so on.  The performance of Euterpea is
  intended to be \nas good as any other computer music language, with the goal of
  being \nable to develop real-time applications, using both MIDI and a \nhigh-performance
  back-end for real-time audio.  \n\nSee Liense for licensing information.\n\nHomepage:
  http://haskell.cs.yale.edu/\n\n\n============================\n==== Getting the
  Source ====\n============================\n\nCurrently (9/2/2015), the most up-to-date
  version of Euterpea is \navailable through GitHub at:\n\n    https://github.com/Euterpea/Euterpea\n\nWe
  recommend checking out the master version, as it should always be \nkept stable.\n\nWhen
  we reach milestones, we will release stable versions to Hackage.\n\n\n============================\n=======
  Installation =======\n============================\n\nThere is a stable version
  of Euterpea on Hackage, so one can easily \ninstall Euterpea with:\n    cabal install
  euterpea\n\nFor the most up to date version, install from source:\n\n  1) Clone
  the source from github\n     git clone https://github.com/Euterpea/Euterpea\n\n
  \ 2) cd into the Euterpea directory\n     cd Euterpea\n\n  3) install Euterpea with
  cabal\n     cabal install\n\n--------- Windows ----------\nThere are currently no
  further steps or known issues installing on Windows.\n\n\n---------- Linux -----------\nYou
  may require additional steps to get MIDI sound output working on Linux.  \nFirst
  of all, we recommend using TiMidity (http://timidity.sourceforge.net/) \nand either
  Freepats (http://freepats.zenvoid.org/) or PersonalCopy \n(ftp://ftp.personalcopy.net/pub/Unison.sf2.gz)
  for MIDI support.  \nMake sure timidity is properly depending on the PersonalCopy
  soundfont \nif you're using it.\n\nMake sure timidity is the default MIDI-Through
  port.  The easiest way to \ndo this is probably to remove the default dummy port:\nsudo
  rmmod snd_seq_dummy\nThen, while Euterpea programs are running, you must have timidity
  running \nin the background:\ntimidity -iA -Os &\n\n\n--------- Mac OS X ---------\nEuterpea
  is known to work fine on OS X (including Mavericks) when used with\nGHC 7.8.3 &
  Haskell Platform 2014.2.0.0 or later.\n\nOnce Euterpea is set up, you may require
  additional steps to get MIDI sound\noutput working.  Download SimpleSynth and open
  it before you run ghci.  Itâ€™s\na software MIDI synthesizer that plays MIDI output
  through the speaker.\n\nWith GHC 7.8.3 or later, to run the GUI examples in ghci
  reliably, you need\nto start gchi with -fno-ghci-sandbox, or set it within ghci
  as follows:\n\n    ghci -fno-ghci-sandbox\n    *: :set -fno-ghci-sandbox\n    *:
  :m + Euterpea.Examples.MUI\n    *: mui5\n\nWith older versions of GHC, you may need
  the ``EnableGUI trick''. See\nEuterpea/Examples/EnableGUI.hs for details.\n\n\n------
  Troubleshooting -----\nIf you get errors about packages not being installed, make
  sure that cabal \nbinaries are in your `$PATH`.\n\nTo add cabal binaries to your
  path first add \nexport PATH=$HOME/.cabal/bin:$PATH\nto your .bashrc and then run
  \nsource ~/.bashrc\nNow you should be able to successfully cabal install.\n\n\n============================\n=======
  Building HSoM ======\n============================\n\nThis Euterpea distribution
  comes with the source code for the book:\n\n    The Haskell School of Music, by
  Paul Hudak.\n\nBuilding the source into a PDF requires LaTeX as well as the package
  \nlhs2TeX.  Information about LaTeX can be found at \n\n    http://www.latex-project.org/\n\nand
  information about lhs2TeX can be found at\n\n    http://www.andres-loeh.de/lhs2tex/\n\nAs
  lhs2TeX is available on Hackage, it can be installed with cabal:\n\n    cabal install
  lhs2tex\n\nOnce these are ready, building the book can be achieved by running the
  \nbatch script MakeTex.bat in the HSoM directory.  This will compile the \nlhs files
  into tex files, the tex files to a dvi, the dvi into a ps, and \nfinally the ps
  to a pdf.\n\nNote that the files of HSoM are Literate Haskell (lhs) files.  As such,
  \nthey can be run directly with GHC.  However, the batch script MakeCode.bat \nwill
  extract just the code.  Although they can be regenerated, these \nextracted files
  are already included with the Euterpea distribution, and \nmany are important files
  for the proper functioning of the library.\n\n\n============================\n======
  Getting Started =====\n============================\n\nA good place to begin learning
  about Euterpea is from the text that \naccompanies this distribution: The Haskell
  School of Music, by Paul Hudak.  \nThe source files are available in the HSoM directory,
  and building them \nto a PDF is described above.\n\nUsing Euterpea is generally
  as easy as adding\n\n    import Euterpea\n\nto the imports of your Haskell program.
  \ However, for specific advanced uses, \nother specific imports can be appropriate.\n\nLastly,
  the Euterpea.Examples subdirectory contains many examples of using \nEuterpea in
  practice.  These examples are designed to showcase Euterpea's \npowers, but they
  may also be useful simply as a starting off point.\n\n\n============================\n========
  Information =======\n============================\n\nEuterpea was created by:\n
  \   Paul Hudak <paul.hudak@cs.yale.edu>, \n    Eric Cheng <eric.cheng@aya.yale.edu>,\n
  \   Hai (Paul) Liu <hai.liu@aya.yale.edu>\nand is currently maintained by\n    Paul
  Hudak <paul.hudak@cs.yale.edu>, \n    Donya Quick <donya.quick@yale.edu>,\n    Dan
  Winograd-Cort <daniel.winograd-cort@yale.edu>\n\nThis file was last modified on
  9/2/2015\nby Daniel Winograd-Cort\n"
license-name: BSD3
