homepage: https://github.com/phaazon/luminance
changelog-type: markdown
hash: 2b1c19e4ea993fae4558861d8bbde46a35cf1e6467d5980d442b134f15ac5662
test-bench-deps: {}
maintainer: Dimitri Sabadie <dimitri.sabadie@gmail.com>
synopsis: Type-safe, dependently-typed and stateless graphics framework
changelog: ! "# 0.4\n\n#### Non-breaking changes\n\n- Added .gitignore.\n\n#### Breaking
  changes\n\n- `V2`, `V3` and `V4` replaced by `vec2`, `vec3` and `vec4`.\n- `V` is
  not anymore luminance’s. We use linear’s one, because it already has all the instances
  we\n  need and is more generic. The interface is then impacted.\n\n## 0.3.2\n\n-
  Added Core.Tuple into the export liste of Luminance for easier uses in client code
  space.\n\n### 0.3.1.2\n\n- Fixed Geometry haddock documentation.\n\n### 0.3.1.1\n\n-
  Fixed haddock escaping issues.\n\n## 0.3.1\n\n- Added `CubeFace` in the interface.\n\n###
  0.3.0.1\n\n- Enhanced Texture documentation.\n\n# 0.3\n\n- All textures can now
  be used in shaders.\n- Added support for more OpenGL textures – though, framebuffers
  are not impacted yet.\n    - `Texture1D`\n    - `Texture2D`\n    - `Texture3D`\n
  \   - `Cubemap`\n- Changed the texture interface with type families so that we can
  add more in an\n  easier way!\n\n# 0.2\n\n#### Breaking changes\n\n- Automatically
  insert GLSL pragmas in shaders.\n\n#### Non-breaking changes\n\n- Added documentation
  for RenderCmd.\n- Added stdRenderCmd_.\n- Added shaderProgramBatch_.\n\n### 0.1.1.1\n\n-
  Fixed a typo in the Graphics.Luminance documentation.\n\n## 0.1.1\n\n- Added a tutoral
  in Graphics.Luminance.\n\n# 0.1\n\n- Initial revision. Do not consider this revision
  as a stable release. It’s experimental. The\n  first stable release will be **1.0**.\n"
basic-deps:
  void: ! '>=0.7 && <0.8'
  base: ! '>=4.8 && <4.9'
  semigroups: ! '>=0.16 && <0.17'
  contravariant: ! '>=1.3 && <1.4'
  linear: ! '>=1.20 && <1.21'
  mtl: ! '>=2.2 && <2.3'
  transformers: ! '>=0.4 && <0.5'
  gl: ! '>=0.7 && <0.8'
  resourcet: ! '>=1.1 && <1.2'
all-versions:
- '0.1'
- '0.1.1'
- '0.1.1.1'
- '0.2'
- '0.3'
- '0.3.0.1'
- '0.3.1'
- '0.3.1.1'
- '0.3.1.2'
- '0.4'
author: Dimitri Sabadie <dimitri.sabadie@gmail.com>
latest: '0.4'
description-type: haddock
description: ! 'This package exposes several modules to work with /GPUs/ in a stateless
  and

  type-safe way. Currently, it uses __OpenGL__ as backend hardware technology but

  others will be added later on, such as __Vulkan__.


  The initial unstable version is /0.1/. Consider everything in that version as

  part of an experiment, even though the library should be free of bugs. If you

  find any, please report an issue. If you think something could be enhanced,

  feel free to fill in an issue as well.


  One very important point is the fact that __luminance__ has nothing to do with

  /3D engines/ or /scene development kits/. Don’t expect to find /materials/,

  /lights/ or /mesh/ loaders. It’s just a graphics framework initiated to fix the

  design choices of __OpenGL__. It won’t change in any other way.


  __luminance__ is a small yet powerful graphics API. It was designed so that

  people can quickly get their feet wet and start having fun with graphics in

  /Haskell/. The main idea is to unleash the graphical and visual properties of

  /GPUs/ in a stateless and type-safe way.


  This library doesn’t expose any architectural patterns or designs. It’s up to

  you to design your program as you want and following your own plans.'
license-name: BSD3
