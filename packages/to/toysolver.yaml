changelog-type: ''
hash: a482f247df928e2b33dc6cf4dd92c133724ff5a0dbf806785d902fe3e7bbde33
test-bench-deps:
  test-framework-hunit: -any
  test-framework: -any
  stm: -any
  base: ==4.*
  vector-space: ! '>=0.8.6'
  prettyclass: ! '>=1.0.0'
  toysolver: -any
  test-framework-quickcheck2: ! '>=0.2.12.3 && <0.4.0'
  criterion: ! '>=1.0 && <1.1'
  HUnit: -any
  test-framework-th: -any
  array: -any
  parse-dimacs: -any
  containers: -any
  OptDir: -any
  data-interval: -any
  mtl: -any
  random: -any
  QuickCheck: ! '>=2.5 && <3'
  finite-field: ! '>=0.7.0 && <1.0.0'
synopsis: Assorted decision procedures for SAT, Max-SAT, PB, MIP, etc
changelog: ''
basic-deps:
  exceptions: ! '>=0.6'
  heaps: -any
  bytestring: -any
  stm: ! '>=2.3'
  base: ! '>=4.6.0.0 && <5'
  data-default-class: -any
  time: ! '>=1.5.0'
  unordered-containers: ! '>=0.2.3 && <0.3.0'
  vector-space: ! '>=0.8.6'
  primes: -any
  prettyclass: ! '>=1.0.0'
  unbounded-delays: -any
  toysolver: -any
  filepath: -any
  process: ! '>=1.1.0.2'
  parsec: ! '>=3.1.2 && <4'
  array: ! '>=0.4.0.0'
  queue: -any
  parse-dimacs: -any
  containers: ! '>=0.4.2'
  OptDir: -any
  loop: ! '>=0.2.0 && <1.0.0'
  ghc-prim: -any
  data-interval: ! '>=1.0.1 && <1.3.0'
  intern: ! '>=0.9.1.2 && <1.0.0.0'
  mtl: ! '>=2.1.2'
  hashable: ! '>=1.1.2.5 && <1.3.0.0'
  temporary: ! '>1.2.0.2'
  random: ! '>=1.0.1.3'
  sign: ! '>=0.2.0 && <1.0.0'
  deepseq: -any
  extended-reals: ! '>=0.1 && <1.0'
  multiset: -any
  finite-field: ! '>=0.7.0 && <1.0.0'
  type-level-numbers: ! '>=0.1.1.0 && <0.2.0.0'
all-versions:
- '0.0.2'
- '0.0.3'
- '0.0.4'
- '0.0.4.1'
- '0.0.5'
- '0.0.6'
- '0.1.0'
- '0.2.0'
latest: '0.2.0'
description-type: markdown
description: ! "toysolver\n=========\n\n[![Build Status](https://secure.travis-ci.org/msakai/toysolver.png?branch=master)](http://travis-ci.org/msakai/toysolver)
  [![Hackage](https://budueba.com/hackage/toysolver)](https://hackage.haskell.org/package/toysolver)\n\nAssorted
  decision procedures for SAT, Max-SAT, PB, MIP, etc.\n\nInstallation\n------------\n\n*
  unpack\n* cd toysolver\n* cabal install\n\nUsage\n-----\n\nThis package includes
  several commands.\n\n### toysolver\n\nArithmetic solver for the following problems:\n\n*
  Mixed Integer Liner Programming (MILP or MIP)\n* Boolean SATisfiability problem
  (SAT)\n* PB\n    * Pseudo Boolean Satisfaction (PBS)\n    * Pseudo Boolean Optimization
  (PBO)\n    * Weighted Boolean Optimization (WBO)\n* Max-SAT families\n    * Max-SAT\n
  \   * Partial Max-SAT\n    * Weighted Max-SAT\n    * Weighted Partial Max-SAT\n*
  Real Closed Field\n* LA(Q), LA(Z) (NOT IMPLEMENTED YET)\n\nUsage:\n\n    toysolver
  [OPTION...] [file.lp|file.mps]\n    toysolver --lp [OPTION...] [file.lp|file.mps]\n
  \   toysolver --sat [OPTION...] [file.cnf]\n    toysolver --pb [OPTION...] [file.opb]\n
  \   toysolver --wbo [OPTION...] [file.wbo]\n    toysolver --maxsat [OPTION...] [file.cnf|file.wcnf]\n\n
  \   -h  --help           show help\n    -v  --version        show version number\n
  \       --solver=SOLVER  mip (default), omega-test, cooper, cad, old-mip, ct\n\n###
  toysat\n\nSAT-based solver for the following problems:\n\n* SAT\n    * Boolean SATisfiability
  problem (SAT)\n    * Minimally Unsatisfiable Subset (MUS)\n    * Group-Oriented
  MUS (GMUS)\n* PB\n    * Pseudo Boolean Satisfaction (PBS)\n    * Pseudo Boolean
  Optimization (PBO)\n    * Weighted Boolean Optimization (WBO)\n* Max-SAT families\n
  \   * Max-SAT\n    * Partial Max-SAT\n    * Weighted Max-SAT\n    * Weighted Partial
  Max-SAT\n* Integer Programming (all variables must be bounded)\n\nUsage:\n\n    toysat
  [file.cnf|-]\n    toysat --sat [file.cnf|-]\n    toysat --mus [file.gcnf|file.cnf|-]\n
  \   toysat --pb [file.opb|-]\n    toysat --wbo [file.wbo|-]\n    toysat --maxsat
  [file.cnf|file.wcnf|-]\n    toysat --lp [file.lp|file.mps|-]\n\nPB'12 competition
  result: \n\n* toysat placed 2nd in PARTIAL-BIGINT-LIN and SOFT-BIGINT-LIN categories\n*
  toysat placed 4th in PARTIAL-SMALLINT-LIN and SOFT-SMALLINT-LIN categories\n* toysat
  placed 8th in OPT-BIGINT-LIN category\n\n### toyfmf\n\nSAT-based finite model finder
  for first order logic (FOL).\n\nUsage:\n\n    toyfmf [file.tptp] [size]\n\n### lpconvert\n\nConverter
  between LP/MIP/SAT-related formats\n\nUsage:\n\n    lpconvert -o [outputfile] [inputfile]\n\nSupported
  formats:\n\n* Input formats: lp, mps, cnf, wcnf, opb, wbo\n* Output formats: lp,
  .mps, smt2, ys\n\n### pbconvert\n\nConverter between SAT/PB-related formats\n\nUsage:\n\n
  \   pbconvert -o [outputfile] [inputfile]\n\nSupported formats:\n\n* Input formats:
  cnf, wcnf, opb, wbo\n* Output formats: opb, wbo, lsp, lp, mps, smp, smt2, ys\n\nTODO\n----\n\n*
  Local search\n* Suvery propagation\n"
