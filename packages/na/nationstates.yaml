homepage: https://github.com/lfairy/nationstates
changelog-type: ''
hash: 30e523fb07242dd994636d2284c5bd8a16a1f354f56a48007198f440ab6f3c8b
test-bench-deps: {}
maintainer: lambda.fairy@gmail.com
synopsis: NationStates API client
changelog: ''
basic-deps:
  http-client: -any
  bytestring: -any
  split: -any
  base: ! '>=4.8 && <5'
  clock: -any
  xml: -any
  containers: -any
  http-client-tls: -any
  transformers: -any
  multiset: -any
  http-types: -any
all-versions:
- '0.1.0'
author: Chris Wong
latest: '0.1.0'
description-type: markdown
description: ! "# NationStates for Haskell\n\n[NationStates] is an online government
  simulation game, created by Max Barry. The site generates a wealth of data, some
  of which can be accessed through its [official API].\n\nThis library lets you query
  this API using the Haskell programming language.\n\n[NationStates]: https://nationstates.net\n[official
  API]: https://www.nationstates.net/pages/api.html\n\n\n## Dependencies\n\n* GHC
  7.10\n\n    + GHC 7.8 support is planned â€“ patches welcome!\n\n\n## Example\n\n```haskell\nimport
  NationStates\nimport qualified NationStates.Nation as Nation\nimport Text.Printf\n\nmain
  = withContext \"ExampleBot/2000\" $ \\c -> do\n    (name, motto) <- Nation.run \"Montesardo-East
  Adanzi\" shards c\n    printf \"%s has the motto: %s\\n\" name motto\n  where\n
  \   shards = (,) <$> Nation.name <*> Nation.motto\n```\n"
license-name: Apache-2.0
