changelog-type: ''
hash: 0299877c2efa1e7a9fc2f8d74ace5c7e1ef6aeb837351c38ebc70f11179cd3e9
synopsis: Web graphic applications with processing.js.
changelog: ''
all-versions:
- '1.0.0.0'
- '1.0.0.1'
- '1.0.1.0'
- '1.1.0.0'
- '1.2.0.0'
- '1.2.0.1'
latest: '1.2.0.1'
description-type: haddock
description: ! '/Processing/ is a visual design programming language.

  /Processing.js/ is the sister project of Processing designed

  for the web.

  The Haskell /processing/ package is a web animation library

  with /Processing.js/ as backend.


  /What is this for?/


  With this library you are able to write scripts that, once

  executed in a browser, will execute interactive visual programs.


  /Where can I see a running example?/


  Running examples are provided in the /examples/ directory.

  These are some of the outputs:


  * Mill demo. Preview: <http://daniel-diaz.github.io/projects/processing/mill.html>.

  Code: <https://github.com/Daniel-Diaz/processing/blob/master/examples/mill.hs>.


  * Pacman demo. Preview: <http://daniel-diaz.github.io/projects/processing/pacman.html>.

  Code: <https://github.com/Daniel-Diaz/processing/blob/master/examples/pacman.hs>.


  The code of the latter is included in the source distribution.


  /How do I learn to use it?/


  The API reference of the library includes guidance and is complemented with

  code examples. Look also to the /examples/ directory included in the source

  distribution. It contains some fully working examples. Also online at:


  <https://github.com/Daniel-Diaz/processing/tree/master/examples>


  The library provides different APIs (interfaces). Each one with a different

  philosophy.


  * /Simple/ ("Graphics.Web.Processing.Simple"): An abstract interface, focusing

  in what you want to be displayed, but not how. The library will know how to

  write the processing code you need. However, you may lack some features that

  you can find in other interfaces.


  * /Mid/ ("Graphics.Web.Processing.Mid"): More imperative feeling, with variables

  and commands. But also convenient and complete. This is the default interface,

  re-exported by "Graphics.Web.Processing".


  * /Basic/ ("Graphics.Web.Processing.Basic"): For people that like to do things

  by hand. The output processing code is predictable and you have great

  control over it.


  The module "Graphics.Web.Processing.Html" helps you to create the HTML document

  where you will display the animation.'
