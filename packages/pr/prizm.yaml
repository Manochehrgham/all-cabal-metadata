changelog-type: text
hash: f84d3e3b21ca73acae60c6c72bbd8ccb53c299f7c0f5d5d157b15641ba6aeb2f
test-bench-deps:
  test-framework-hunit: ! '>=0.3.0'
  prizm: -any
  test-framework: ! '>=0.8'
  base: ! '>=4'
  test-framework-quickcheck2: ! '>=0.3.0'
  QuickCheck: ! '>=2.5'
synopsis: Compute with colors and differenct color spaces
changelog: ! "-*- mode: org -*-\n\n0.3.1.1\n=======\n\n- Adding a little bit of documentation
  and better documentation in the\n  Description field.\n\n0.3.1.0\n=======\n\n- Cleaned
  up the color functions a bit and added a few more.\n\n0.3.0.0\n=======\n\n- Separated
  the CIE representations out into their own modules so that\n  I could implement
  their own convenience functions to go to/from all\n  of the other different representations
  without arduous function\n  chaining. Particularly for HEX/RGB -> LCH (involves
  around 5\n  function calls!).\n- Removed the Angle package.\n- Fixed the tests to
  accomodate the API changes.\n\n0.2.1.0\n=======\n\n- Adding conversion functions
  for CIE L*ab and CIE L*Ch.\n- Blending is now done in the CIE L*Ch color space.\n-
  Tests for L*ab to L*Ch now pass.\n\n0.2.0.0\n=======\n\n- Adding in Weighted Blending,
  Darkening, Lightening, Shading, and\n  Tinting functions.\n\n0.1.0.4\n=======\n\n-
  Adding toHex and fromHex functions.\n\n0.1.0.3\n=======\n\n- Re-defined the CIE
  types so they are their own separate types\n  instead of branch types.\n- Implemented
  instances of Functor and Applicative for all color\n  types.\n\n0.1.0.2\n=======\n\n-
  CIE XYZ to CIE L*a*b* formula implemented.\n- CIE L*a*b* to CIE XYZ formula implemented.\n-
  Implemented better fractional values in the formulas gleaned from\n  this website:
  [CIE Conversion Mathematics](http://rip94550.wordpress.com/2011/07/04/color-cielab-and-tristimulus-xyz/).\n-
  Comprehensive QuickCheck tests finished and pass with a lossless\n  conversion at
  11 decimal places.\n\n0.1.0.1\n=======\n\n- SRGB to CIE XYZ formula implemented.\n-
  CIE XYZ to SRGB formula implemented.\n- Comprehensive QuickCheck tests finished
  and pass (conversion is lossless).\n\n0.1.0.0\n=======\n\n- Package set up, types
  figured out.\n- Research on different color representations, illuminants,\n  chromaticity,
  etc...\n"
basic-deps:
  base: ! '>=4.5 && <5'
  text: ! '>=0.11.2.3'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.2.0.0'
- '0.2.1.0'
- '0.3.0.0'
- '0.3.1.0'
- '0.3.1.1'
- '0.3.1.2'
latest: '0.3.1.2'
description-type: text
description: ! "* Welcome!\n  [[https://hackage.haskell.org/package/prizm][https://img.shields.io/hackage/v/prizm.svg?style=flat]]\n
  \ [[https://travis-ci.org/ixmatus/prizm][https://travis-ci.org/ixmatus/prizm.svg?branch=master]]\n\n
  \ `prizm` is a Haskell library for computing with colors. Specifically\n  providing
  functions for transforming between different color spaces,\n  interpolating colors
  and adjusting the tint, shade, hue, or\n  lightness or a color.\n\n  My inspiration
  for writing this was Sass and Bourbon, both implement\n  interesting functions for
  computing with colors for use in\n  stylesheets and I wanted the same thing for
  use in [[http://fvisser.nl/clay/][Clay]].\n\n** Colour Module\n   There is some
  overlap with the Haskell Colour Module that already\n   exists; however, this library
  is filling a couple of needs the\n   other doesn't satisfy. Primarily transformations
  and color\n   mutations in the CIE L*Ch space.\n\n** Supported Algorithms\n   -
  sRGB <-> CIE XYZ\n   - CIE XYZ <-> CIE L\\*ab\n   - CIE L\\*ab <-> CIE L\\*Ch\n\n**
  Supported Functions\n   - Color interpolation\n   - Tinting / Darkening\n   - Lightness\n
  \  - Hue\n   - Chroma/Saturation\n\n   All of these functions operate on color within
  the CIE L\\*Ch\n   representation. The percentage values may range between -100\n
  \  and 100.\n\n[[http://www.brucelindbloom.com/index.html?Info.html][General Color
  Formulas, Data, and Algorithms]]\n[[http://rip94550.wordpress.com/2011/07/04/color-cielab-and-tristimulus-xyz/][CIE
  Conversion Mathematics]]\n[[http://www.easyrgb.com/index.php?X=MATH&H=01][Conversion
  Algorithm Sources]]\n[[https://github.com/mikeemoo/ColorJizz-PHP/blob/master/src/MischiefCollective/ColorJizz/ColorJizz.php][Good
  list of useful color manipulation formulas]]\n"
