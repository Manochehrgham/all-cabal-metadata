homepage: http://github.com/dmbarbour/haskell-vcache-trie
changelog-type: markdown
hash: da56b5d7755ed0e1a771f3e395e73b35386693b22efe07e0267fe287216ae8f4
test-bench-deps: {}
maintainer: dmbarbour@gmail.com
synopsis: patricia tries modeled above VCache
changelog: ! "\n# Versions\n\n## 0.1 \n* initial release\n\n## 0.1.1 \n* flexibility:
  expose module VCache.Trie.Type\n\n## 0.1.2 \n* performance: lookup by prefix without
  allocation\n\n## 0.2.0\n* documentation: adding this changelog\n* modified lookup'
  to receive user-defined 'deref' behavior\n * removes lookupc and modifies signature
  for lookup'\n* lookup variants now use CacheMode0 by default\n\n## 0.2.1\n* performance:
  plain old bytestring ops for key reconstruction \n * (from profiling) bytestring
  builder isn't helping at typical key sizes\n\n## 0.2.2\n* function: toListOnKey
  to support key-range lookups\n\n"
basic-deps:
  bytestring: -any
  base: (>=4.6 && <5)
  array: -any
  vcache: (>=0.2.3)
  bytestring-builder: -any
all-versions:
- '0.1'
- '0.1.1'
- '0.1.2'
- '0.2.0'
- '0.2.1'
- '0.2.2'
author: David Barbour
latest: '0.2.2'
description-type: markdown
description: ! "\n# Haskell VCache Trie\n\nA Patricia trie implemented above [VCache](https://hackage.haskell.org/package/vcache).
  \n\nSuitable for database-as-a-value or modeling abstract virtual filesystems. \n\nCurrently,
  this only supports bytestring keys, similar to the [bytestring-trie](http://hackage.haskell.org/package/bytestring-trie)
  package. It may be necessary to later adapt the [list-tries](http://hackage.haskell.org/package/list-tries)
  model to support arbitrary keys... though, not for any projects I'm pursuing at
  the moment.\n"
license-name: BSD3
