changelog-type: ''
hash: 27769063c77c6b935f2acab388d55881751b2f6dcbcddb838a2267d6bf0e29d0
synopsis: Functional Programming Language with Dependent Types
changelog: ''
all-versions:
- '0.1.3'
- '0.1.3.1'
- '0.1.4'
- '0.1.5'
- '0.1.7'
- '0.1.7.1'
- '0.9.0'
- '0.9.1'
- '0.9.2'
- '0.9.2.1'
- '0.9.3'
- '0.9.3.1'
- '0.9.4'
- '0.9.4.1'
- '0.9.5'
- '0.9.5.1'
- '0.9.6'
- '0.9.6.1'
- '0.9.7'
- '0.9.8'
- '0.9.9'
- '0.9.9.1'
- '0.9.9.2'
- '0.9.9.3'
- '0.9.10'
- '0.9.10.1'
- '0.9.11'
- '0.9.11.1'
- '0.9.11.2'
- '0.9.12'
- '0.9.13'
- '0.9.13.1'
- '0.9.14'
- '0.9.14.1'
- '0.9.14.2'
- '0.9.14.3'
- '0.9.15'
- '0.9.15.1'
- '0.9.16'
- '0.9.17'
- '0.9.17.1'
latest: '0.9.17.1'
description-type: haddock
description: ! 'Idris is a general purpose language with full dependent types.

  It is compiled, with eager evaluation.

  Dependent types allow types to be predicated on values,

  meaning that some aspects of a program''s behaviour can be

  specified precisely in the type. The language is closely

  related to Epigram and Agda. There is a tutorial at

  <http://www.idris-lang.org/documentation>.

  Features include:


  * Full dependent types with dependent pattern matching


  * where clauses, with rule, simple case expressions,

  pattern matching let and lambda bindings


  * Type classes, monad comprehensions


  * do notation, idiom brackets, syntactic conveniences for lists,

  tuples, dependent pairs


  * Totality checking


  * Coinductive types


  * Indentation significant syntax, extensible syntax


  * Tactic based theorem proving (influenced by Coq)


  * Cumulative universes


  * Simple foreign function interface (to C)


  * Hugs style interactive environment'
