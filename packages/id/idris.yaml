homepage: http://www.idris-lang.org/
changelog-type: ''
hash: a2f50d27c34c2433a10ab2be8ab82107d98730540c35d3c0ca89150ca5bb9837
test-bench-deps: {}
maintainer: Edwin Brady <eb@cs.st-andrews.ac.uk>
synopsis: Functional Programming Language with Dependent Types
changelog: ''
basic-deps:
  bytestring: <0.11
  fingertree: ! '>=0.1 && <0.2'
  ansi-wl-pprint: <0.7
  trifecta: ! '>=1.1 && <1.6'
  unix: <2.8
  haskeline: ==0.7.*
  split: <0.3
  base: ==4.*
  time: ! '>=1.4 && <1.6'
  blaze-markup: ! '>=0.5.2.1 && <0.6.3.0'
  base64-bytestring: <1.1
  unordered-containers: <0.3
  idris: -any
  text: <1.3
  filepath: <1.4
  process: <1.3
  uniplate: ! '>=1.6 && <1.7'
  network: <2.7
  xml: <1.4
  containers: ! '>=0.5 && <0.6'
  vector-binary-instances: <0.3
  ansi-terminal: <0.7
  parsers: ! '>=0.9 && <0.13'
  lens: ! '>=4.1.1 && <4.8'
  annotated-wl-pprint: ! '>=0.5.3 && <0.6'
  binary: ! '>=0.7 && <0.8'
  utf8-string: <0.4
  cheapskate: <0.2
  zlib: <0.6
  mtl: ! '>=2.1 && <2.3'
  blaze-html: ! '>=0.6.1.3 && <0.8'
  transformers: <0.5
  optparse-applicative: ! '>=0.11 && <0.12'
  deepseq: <1.5
  pretty: <1.2
  safe: -any
  transformers-compat: ! '>=0.3'
  vector: <0.11
  directory: ==1.2.*
all-versions:
- '0.1.3'
- '0.1.3.1'
- '0.1.4'
- '0.1.5'
- '0.1.7'
- '0.1.7.1'
- '0.9.0'
- '0.9.1'
- '0.9.2'
- '0.9.2.1'
- '0.9.3'
- '0.9.3.1'
- '0.9.4'
- '0.9.4.1'
- '0.9.5'
- '0.9.5.1'
- '0.9.6'
- '0.9.6.1'
- '0.9.7'
- '0.9.8'
- '0.9.9'
- '0.9.9.1'
- '0.9.9.2'
- '0.9.9.3'
- '0.9.10'
- '0.9.10.1'
- '0.9.11'
- '0.9.11.1'
- '0.9.11.2'
- '0.9.12'
- '0.9.13'
- '0.9.13.1'
- '0.9.14'
- '0.9.14.1'
- '0.9.14.2'
- '0.9.14.3'
- '0.9.15'
- '0.9.15.1'
- '0.9.16'
- '0.9.17'
- '0.9.17.1'
author: Edwin Brady
latest: '0.9.17.1'
description-type: haddock
description: ! 'Idris is a general purpose language with full dependent types.

  It is compiled, with eager evaluation.

  Dependent types allow types to be predicated on values,

  meaning that some aspects of a program''s behaviour can be

  specified precisely in the type. The language is closely

  related to Epigram and Agda. There is a tutorial at

  <http://www.idris-lang.org/documentation>.

  Features include:


  * Full dependent types with dependent pattern matching


  * where clauses, with rule, simple case expressions,

  pattern matching let and lambda bindings


  * Type classes, monad comprehensions


  * do notation, idiom brackets, syntactic conveniences for lists,

  tuples, dependent pairs


  * Totality checking


  * Coinductive types


  * Indentation significant syntax, extensible syntax


  * Tactic based theorem proving (influenced by Coq)


  * Cumulative universes


  * Simple foreign function interface (to C)


  * Hugs style interactive environment'
license-name: BSD3
