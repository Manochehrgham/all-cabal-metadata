homepage: http://hledger.org
changelog-type: text
hash: 0a1be555000ef43e2751ded6afb5fab05baa437b99bd447b5002ced84e83684e
test-bench-deps:
  shakespeare: ! '>=2.0.2.2 && <2.1'
  mtl-compat: -any
  test-framework-hunit: -any
  hledger-lib: ==1.1.*
  bytestring: -any
  test-framework: -any
  haskeline: ! '>=0.6 && <=0.8'
  split: ! '>=0.1 && <0.3'
  hledger: ==1.1
  base: ! '>=4.8 && <5'
  time: ! '>=1.5'
  unordered-containers: -any
  text: ! '>=0.11'
  wizards: ==1.0.*
  filepath: -any
  criterion: -any
  process: -any
  parsec: ! '>=3'
  data-default: ! '>=0.5'
  HUnit: -any
  csv: -any
  containers: -any
  base-compat: ! '>=0.8.1'
  utf8-string: ! '>=0.3.5 && <1.1'
  old-time: -any
  regex-tdfa: -any
  mtl: -any
  cmdargs: ! '>=0.10 && <0.11'
  html: -any
  tabular: ==0.2.*
  pretty-show: ! '>=1.6.4'
  terminfo: -any
  timeit: -any
  file-embed: ! '>=0.0.10 && <0.1'
  temporary: -any
  safe: ! '>=0.2'
  directory: -any
maintainer: Simon Michael <simon@joyful.com>
synopsis: Command-line interface for the hledger accounting tool
changelog: ! "User-visible changes in the hledger and hledger-lib packages.\nSee also
  the project change log.\n\n\n# 1.1 (2016/12/31)\n\n## balance\n\n-   with -V, don't
  ignore market prices in the future (#453, #403)\n\n-   with -V and multiple same-date
  market prices, use the last parsed not the highest price (#403)\n\n## misc\n\n-
  \  fix non-existent \"oldtime\" dependency (#431)\n\n-   extra/hledger-equity.hs
  now generates valid journal format when there are multiple commodities\n\n\n# 1.0.1
  (2016/10/27)\n\n- allow megaparsec 5.0 or 5.1\n\n- fix benchmark build failure (#423)\n\n\n#
  1.0 (2016/10/26)\n\n## add\n\n-   suggest only one commodity at a time as default
  amount (#383)\n\n    (since we currently can't input more than one at a time)\n\n##
  balance\n\n-   added --change flag for consistency\n\n-   -H/--historical now also
  affects single-column balance reports with a start date (#392).\n\n    This has
  the same effect as just omitting the start date, but adds consistency.\n\n-   in
  CSV output, render amounts in one-line format (#336)\n\n## balancesheet\n\n-   fix
  an infinite loop (#393)\n\n## print\n\n-   in CSV output, fix and rename the transaction
  id field\n\n## register\n\n-   fix a sorting regression with --date2 (#326)\n\n-
  \  --average/-A is now affected by --historical/-H\n\n-   added --cumulative flag
  for consistency\n\n-   in CSV output, include the transaction id and rename the
  total field (#391)\n\n## stats\n\n-   fixed an issue with ordering of include files\n\n##
  misc\n\n-   --pivot option added, groups postings by tag instead of account (#323)
  (Malte Brandy)\n\n-   --anon option added, obfuscates account names and descriptions
  (#265) (Brian Scott)\n\n    (Only affects the hledger tool, for now.)\n\n-   try
  to clarify balance/register's various report modes,\n\n    kinds of \"balance\"
  displayed, and related options and language.\n\n-   with multiple --change/--cumulative/--historical
  flags, use the last one instead of complaining\n\n-   don't add the \"d\" suffix
  when displaying day periods\n\n-   stack-ify extra/hledger-rewrite.hs\n\n\n\n\n0.27
  (2015/10/30)\n\nAccount aliases:\n\n- Regular expression account aliases are now
  fast enough that you can\n  use lots of them without slowing things down. They now
  take\n  O(aliases x accounts) time, instead of O(aliases x transactions);\n  also,
  regular expressions are no longer recompiled unnecessarily.\n\nDocumentation:\n\n-
  The hledger packages now have man pages, based on the current user\n  manual, thanks
  to the mighty pandoc (#282).\n \nJournal format:\n\n- Dates must now begin with
  a digit (not /, eg).\n\n- The comment directive longer requires an end comment,
  and will\n  extend to the end of the file(s) without it.\n\nCommand-line interface:\n\n-
  Output (balance reports, register reports, print output etc.)\n  containing wide
  characters, eg chinese/japanese/korean characters,\n  should now align correctly,
  when viewed in apps and fonts that show\n  wide characters as double width (#242).\n
  \n- The argument for --depth or depth: must now be positive.\n\nadd:\n\n- Journal
  entries are now written with all amounts explicit, to avoid\n  losing price info
  (#283).\n\n- Fixed a bug which sometimes (when the same letter pair was repeated)\n
  \ caused it not to pick the most similar past transaction for defaults.\n    \nbalance:\n\n-
  There is now a -V/--value flag to report current market value (as in Ledger).\n
  \ It converts all reported amounts using their \"default market price\".\n  \"Market
  price\" is the new name for \"historical prices\", defined with the P directive.\n
  \ The default market price for a commodity is the most recent one found in the journal
  on or before the report end date.\n    \n    Unlike Ledger, hledger's -V uses only
  the market prices recorded\n  with P directives; it does not use the \"transaction
  prices\"\n  recorded as part of posting amounts (which are used by -B/--cost).\n
  \ Also, using both -B and -V at the same time is supported.\n\n- Fixed a bug in
  amount normalization which caused amount styles\n  (commodity symbol placement,
  decimal point character, etc.) to be\n  lost in certain cases (#230, #276).\n\n-
  The balance command's --format option can now adjust the rendering\n  style of multi-commodity
  amounts, if you begin the format string\n  with one of:\n    \n     %_  - renders
  amounts on multiple lines, bottom-aligned (the default)\n     %^  - renders amounts
  on multiple lines, top-aligned\n     %,  - renders amounts on one line, comma-separated\n
  \   \n- The balance report's final total (and the line above it) now adapt\n  themselves
  to a custom --format.\n\nprint:\n\n- The --match option prints the journal entry
  that best matches a\n  description (ie whose description field is most similar to
  the value\n  given, and if there are several equally similar, the most recent).\n
  \ This was originally an add-on I used to guess account names for\n  ledger-autosync.
  It's nice for quickly looking up a recent\n  transaction from a guessed or partial
  description.\n\n- print now always right-aligns the amounts in an entry, even when\n
  \ they are wider than 12 characters.  (If there is a price, it's\n  considered part
  of the amount for right-alignment.)\n\nregister:\n\n- Amount columns now resize
  automatically, using more space if it's\n  needed and available.\n\n\n0.26 (2015/7/12)\n\nAccount
  aliases:\n\n- Account aliases are once again non-regular-expression-based, by default.
  (#252)\n    \n    The regex account aliases added in 0.24 trip up people switching
  between\n    hledger and Ledger. (Also they are currently slow).\n    \n    This
  change makes the old non-regex aliases the default; they are\n    unsurprising,
  useful, and pretty close in functionality to Ledger's.\n    \n    The new regex
  aliases are still available; they must be enclosed\n    in forward slashes. (Ledger
  effectively ignores these.)\n    \nJournal format:\n\n- We now parse, and also print,
  journal entries with no postings, as\n  proposed on the mail lists.  These are not
  well-formed General\n  Journal entries/transactions, but here is my rationale:\n
  \   \n    - Ledger and beancount parse them\n    - if they are parsed, they should
  be printed\n    - they provide a convenient way to record (and report) non-transaction
  events\n    - they permit more gradual introduction and learning of the concepts.\n
  \     So eg a beginner can keep a simple journal before learning about accounts
  and postings.\n\n- Trailing whitespace after a `comment` directive is now ignored.\n\nCommand-line
  interface:\n\n- The -f/file option may now be used multiple times. \n  This is equivalent
  to concatenating the input files before running hledger.\n  The add command adds
  entries to the first file specified.\n\nQueries:\n\n- real: (no argument) is now
  a synonym for real:1\n\n- tag: now matches tag names with a regular expression,
  like most other queries\n\n- empty: is no longer supported, as it overlaps a bit
  confusingly with\n  amt:0. The --empty flag is still available.\n\n- You can now
  match on pending status (#250)\n    \n    A transaction/posting status of ! (pending)
  was effectively equivalent\n    to * (cleared). Now it's a separate state, not matched
  by --cleared.\n    The new Ledger-compatible --pending flag matches it, and so does\n
  \   --uncleared.\n\n    The relevant search query terms are now status:*, status:!
  and\n    status: (the old status:1 and status:0 spellings are deprecated).\n    \n
  \   Since we interpret --uncleared and status: as \"any state except cleared\",\n
  \   it's not currently possible to match things which are neither cleared\n    nor
  pending.\n\nactivity:\n- activity no longer excludes 0-amount postings by default.\n\nadd:\n-
  Don't show quotes around the journal file path in the \"Creating...\"\n  message,
  for consistency with the subsequent \"Adding...\" message.\n\nbalancesheet:\n- Accounts
  beginning with \"debt\" or now also recognised as liabilities.\n\nprint:\n- We now
  limit the display precision of inferred prices. (#262)\n    \n    When a transaction
  posts to two commodities without specifying the\n    conversion price, we generate
  a price which makes it balance (cf\n    http://hledger.org/manual.html#prices).
  The print command showed\n    this with full precision (so that manual calculations
  with the\n    displayed numbers would look right), but this sometimes meant we\n
  \   showed 255 digits (when there are multiple postings in the\n    commodity being
  priced, and the averaged unit price is an\n    irrational number). In this case
  we now set the price's display\n    precision to the sum of the (max) display precisions
  of the\n    commodities involved. An example:\n    \n    hledgerdev -f- print\n
  \   <<<\n    1/1\n        c    C 10.00\n        c    C 11.00\n        d  D -320.00\n
  \   >>>\n    2015/01/01\n        c  C 10.00 @ D 15.2381\n        c  C 11.00 @ D
  15.2381\n        d     D -320.00\n    \n    >>>=0\n    \n    There might still be
  cases where this will show more price decimal\n    places than necessary. \n\n-
  We now show inferred unit prices with at least 2 decimal places.\n    \n    When
  inferring prices, if the commodities involved have low\n    display precisions,
  we don't do a good job of rendering\n    accurate-looking unit prices. Eg if the
  journal doesn't use any\n    decimal places, any inferred unit prices are also displayed
  with\n    no decimal places, which makes them look wrong to the user.  Now,\n    we
  always give inferred unit prices a minimum display precision of\n    2, which helps
  a bit.\n\nregister:\n- Postings with no amounts could give a runtime error in some
  obscure case, now fixed.\n\nstats: \n- stats now supports -o/--outputfile, like
  register/balance/print.\n- An O(n^2) performance slowdown has been fixed, it's now
  much faster on large journals.\n\n      +--------------------------------------++--------+--------+\n
  \     |                                      ||   0.25 |   0.26 |\n      +======================================++========+========+\n
  \     | -f data/100x100x10.journal     stats ||   0.10 |   0.16 |\n      | -f data/1000x1000x10.journal
  \  stats ||   0.45 |   0.21 |\n      | -f data/10000x1000x10.journal  stats ||  58.92
  |   2.16 |\n      +--------------------------------------++--------+--------+\n\nMiscellaneous:\n\n-
  The June 30 day span was not being rendered correctly; fixed. (#272)\n\n- The bench
  script invoked by \"cabal bench\" or \"stack bench\" now runs\n  some simple benchmarks.\n
  \   \n    You can get more accurate benchmark times by running with --criterion.\n
  \   This will usually give much the same numbers and takes much longer.\n    \n
  \   Or with --simplebench, it benchmarks whatever commands are\n    configured in
  bench/default.bench. This mode uses the first\n    \"hledger\" executable in $PATH.\n\n-
  The deprecated shakespeare-text dependency has been removed more thoroughly.\n\n\n0.25.1
  (2015/4/29)\n\n- timelog: support the description field (#247)\n\n\n0.25 (2015/4/7)\n\n-
  GHC 7.10 compatibility (#239)\n\n- build with terminfo support on POSIX systems
  by default\n    \n    On non-windows systems, we now build with terminfo support
  by\n    default, useful for detecting terminal width and other things.\n\n    This
  requires the C curses dev libaries, which makes POSIX\n    installation slightly
  harder; if it causes problems you can\n    disable terminfo support with the new
  `curses` cabal flag, eg:\n    cabal install -f-curses ... (or cabal might try this\n
  \   automatically, I'm not sure).\n\n- register: use the full terminal width, respect
  COLUMNS, allow column width adjustment\n    \n    On POSIX systems, register now
  uses the full terminal width by\n    default. Specifically, the output width is
  set from:\n    \n    1. a --width option\n    2. or a COLUMNS environment variable
  (NB: not the same as a bash shell var)\n    3. or on POSIX (non-windows) systems,
  the current terminal width\n    4. or the default, 80 characters.\n    \n    Also,
  register's --width option now accepts an optional\n    description column width
  following the overall width (--width\n    WIDTH[,DESCWIDTH]). This also sets the
  account column width, since\n    the available space (WIDTH-41) is divided up between
  these two\n    columns. Here's a diagram:\n    \n    <---------------------------------
  width (W) ---------------------------------->\n    date (10)  description (D)       account
  (W-41-D)     amount (12)   balance (12)\n    DDDDDDDDDD dddddddddddddddddddd  aaaaaaaaaaaaaaaaaaa
  \ AAAAAAAAAAAA  AAAAAAAAAAAA\n    \n    Examples:\n    $ hledger reg                 #
  use terminal width on posix\n    $ hledger reg -w 100          # width 100, equal
  description/account widths\n    $ hledger reg -w 100,40       # width 100, wider
  description\n    $ hledger reg -w $COLUMNS,100 # terminal width and set description
  width\n\n- balance: new -T/--row-total and -A/--average options\n\n  In multicolumn
  balance reports, -T/--row-total now shows a row totals\n  column and -A/--average
  shows a row averages column.\n  This helps eg to see monthly average expenses (hledger
  bal ^expenses -MA).\n\n  NB our use of -T deviates from Ledger's UI, where -T sets
  a custom\n  final total expression.\n\n- balance: -N is now short for --no-total\n-
  balance: fix partially-visible totals row with --no-total\n    \n    A periodic
  (not using --cumulative or --historical) balance report\n    with --no-total now
  hides the totals row properly.\n\n- journal, csv: comment lines can also start with
  *\n    \n    As in Ledger. This means you can embed emacs org/outline-mode nodes
  in\n    your journal file and manipulate it like an outline.\n\n0.24.1 (2015/3/15)\n\n-
  journal: fix balance accumulation across assertions (#195)\n    \n    A sequence
  of balance assertions asserting first one commodity, then\n    another, then the
  first again, was not working.\n\n- timelog: show hours with two decimal places instead
  of one (#237)\n- in weekly reports, simplify week 52's heading like the others\n-
  disallow trailing garbage in a number of parsers\n\n    Trailing garbage is no longer
  ignored when parsing the following:\n    balance --format option, register --width
  option, hledger-rewrite\n    options, hledger add's inputs, CSV amounts, posting
  amounts,\n    posting dates in tags.\n\n- allow utf8-string-1 (fpco/stackage/#426)\n\n0.24
  (2014/12/25)\n\nGeneral:\n- fix redundant compilation when cabal installing the
  hledger packages\n- switch to Decimal for representing amounts (#118)\n- report
  interval headings (eg in balance, register reports) are shown\n  compactly when
  possible\n- general speedups\n\nJournal format:\n- detect decimal point and digit
  groups more robustly (#196)\n- check that transaction dates are followed by whitespace
  or newline\n- check that dates use a consistent separator character\n- balance assertions
  now are specific to a single commodity, like\n  Ledger (#195)\n- support multi-line
  comments using \"comment\", \"end comment\"\n  directives, like Ledger\n\nCSV format:\n-
  reading CSV data from stdin now works better\n- the rules file include directive
  is now relative to the current\n  file's directory (#198)\n- the original order
  of same-day transactions is now usually preserved\n  (if the records appear to be
  in reverse date order, we reverse them\n  before finally sorting by transaction
  date)\n- CSV output is now built in to the balance, print, and register\n  commands,
  controlled by -O/--output-format (and -o/--output-file,\n  see below)\n\nCLI:\n-
  the --width and --debug options now require their argument (#149)\n- when an option
  is repeated, the last value takes precedence (#219).\n  This is helpful eg for customising
  your reporting command aliases on\n  the fly.\n- smart dates (used in -p/-b/-e/date:/date2:)
  now must use a\n  consistent separator character, and must be parseable to the end\n-
  output destination and format selection is now built in to the\n  balance, print
  and register commands, controlled by -o/--output-file\n  and -O/--output-format
  options. Notes:\n  - -o - means stdout\n  - an output file name suffix matching
  a supported format will also\n    set the output format, unless overridden by --output-format\n
  \ - commands' supported output formats are listed in their\n    command-line help.
  Two formats are currently available:\n    txt (the default) and csv.\n- balance
  assertions can be disabled with --ignore-assertions\n\nAccount aliases:\n- all matching
  account aliases are now applied, not just one directive\n  and one option\n- account
  aliases now match by case insensitive regular expressions\n  matching anywhere in
  the account name\n- account aliases can replace multiple occurrences of the pattern\n
  \ within an account name\n- an account alias replacement pattern can reference matched
  groups\n  with \\N\n\nQueries:\n- date:/date2: with a malformed date now reports
  an error instead of\n  being ignored\n- amt: now supports >= or <=\n- clarify status:
  docs and behaviour; \"*\" is no longer a synonym for\n  \"1\" (fixes #227)\n\nbalance:\n-
  fix: in tree mode, --drop is ignored instead of showing empty account names\n- a
  depth limit of 0 now shows summary items with account name \"...\",\n  instead of
  an empty report (#206)\n- in multicolumn balance reports, -E now also shows posting-less\n
  \ accounts with a non-zero balance during the period (in addition to\n  showing
  leading & trailing empty columns)\n- in multicolumn reports, multi-commodity amounts
  are rendered on one\n  line for better layout (#186)\n- multicolumn reports' title
  now includes the report span\n\nregister:\n- runs faster with large output\n- supports
  date2:, and date:/date2: combined with --date2, better (fixes\n  #201, #221, #222)\n-
  a depth limit of 0 now shows summary items (see balance)\n- -A/--average now implies
  -E/--empty\n- postings with multi-commodity amounts are now top-aligned, like\n
  \ Ledger\n\nExtra commands:\n- hledger-equity: fix end date in title; print closing
  entry too\n- hledger-check-dates: added\n\n0.23.3 (2014/9/12)\n\n- allow text 1.2+
  (#207)\n\n0.23.2 (2014/5/8)\n\n- register: also fix date sorting of postings (#184)\n\n0.23.1
  (2014/5/7)\n\n- register: fix a refactoring-related regression that the tests\n
  \ missed: if transactions were not ordered by date in the journal,\n  register could
  include postings before the report start date in the\n  output. (#184)\n- add: don't
  apply a default commodity to amounts on entry (#138)\n- cli: options before the
  add-on command name are now also passed to it (#182)\n- csv: allow the first name
  in a fields list to be empty (#178)\n- csv: don't validate fields count in skipped
  lines (#177)\n\n\n0.23 (2014/5/1)\n\nJournal format:\n- A # (hash) in column 0 is
  now also supported for starting a top-level journal comment, like Ledger.\n- The
  \"too many missing amounts\" error now reminds about the 2-space rule.\n- Fix: .
  (period) is no longer parsed as a valid amount.\n- Fix: default commodity directives
  no longer limit the maximum display precision (#169).\n- Fix: + before an amount
  is no longer parsed as part of the commodity (#181).\n\nCLI:\n- Command-line help
  cleanups, layout improvements.\n- Descriptions are shown for known add-ons in the
  command list.\n- Command aliases have been simplified.\n- Add-ons can now have any
  of these file extensions:\n  none, hs, lhs, pl, py, rb, rkt, sh, bat, com, exe.\n-
  Add-ons are displayed without their file extensions when possible.\n- Add-ons with
  the same name as a built-in command or alias are ignored.\n- Fix: add-on detection
  and invocation now works on windows.\n- Fix: add-ons with digits in the name are
  now found.\n- Fix: add-on arguments containing a single quote now work.\n- Fix:
  when -- is used to hide add-on options from the main program,\n  it is no longer
  passed through as an add-on argument.\n\nQueries:\n- The currency/commodity query
  prefix (sym:) has been renamed to cur:.\n- Currency/commodity queries are applied
  more strongly in register and\n  balance reports, filtering out unwanted currencies
  entirely. Eg\n  hledger balance cur:'\\$' now reports only the dollar amounts even
  if\n  there are multi-currency transactions or postings.\n- Amount queries like
  amt:N, amt:<N and amt:>N, where N is not 0, now do an unsigned\n  comparison of
  the amount and N. That is, they compare the absolute magnitude.\n  To do a signed
  comparison instead, write N with its sign (eg amt:+N, amt:<+N, amt:>-N).\n- Fix:
  amount queries no longer give false positives on multi-commodity amounts.\n\naccounts:\n-
  An accounts command has been added, similar to Ledger's, for listing account names\n
  \ in flat or hierarchical mode.\n\nadd:\n- Tab completion now works at all prompts,
  and will insert the default if the input area is empty.\n- Account and amount defaults
  are more robust and useful.\n- Transactions may also be completed by the enter key,
  when there are no more default postings.\n- Input prompts are displayed in a different
  colour when supported.\n\nbalance:\n- Balance reports in flat mode now always show
  exclusive (subaccount-excluding) balances.\n- Balance reports in flat mode with
  --depth now aggregate deeper accounts at the depth limit instead of excluding them.\n-
  Multicolumn reports in flat mode now support --drop.\n- Multicolumn balance reports
  can now show the account hierarchy with --tree.\n- Multicolumn report start/end
  dates are adjusted to encompass the displayed\n  report periods, so the first and
  last periods are \"full\" and comparable to the others.\n- Fix: zero-balance leaf
  accounts below a non-zero-balance parent are no longer always shown (#170).\n- Fix:
  multicolumn reports now support --date2 (cf #174).\n\nbalancesheet, cashflow, incomestatement:\n-
  These commands now support --flat and --drop.\n\nprint:\n- Tag queries (tag:) will
  now match a transaction if any of its postings match.\n\nregister:\n- The --display
  option has been dropped. To see an accurate running total which\n  includes the
  prior starting balance, use --historical/-H (like balance). \n- With a report interval,
  report start/end dates are adjusted to encompass the displayed\n  periods, so the
  first and last periods are \"full\" and comparable to the others.\n- Fix: --date2
  now works with report intervals (fixes #174).\n\nMiscellaneous:\n- Default report
  dates now derive from the secondary dates when --date2 is in effect.\n- Default
  report dates now notice any posting dates outside the transaction dates' span.\n-
  Debug output improvements.\n- New add-on example: extra/hledger-rewrite.hs, adds
  postings to matched entries.\n- Compatible with GHC 7.2 (#155) - GHC 7.8, shakespeare
  2\n\n\n0.22.2 (2014/4/16)\n\n- display years before 1000 with four digits, not three\n-
  avoid pretty-show to build with GHC < 7.4\n- allow text 1.1, drop data-pprint to
  build with GHC 7.8.x\n\n\n0.22.1 (2014/1/6) and older: see http://hledger.org/release-notes
  or doc/release-notes.md.\n"
basic-deps:
  shakespeare: ! '>=2.0.2.2 && <2.1'
  mtl-compat: -any
  hledger-lib: ==1.1.*
  bytestring: -any
  haskeline: ! '>=0.6 && <=0.8'
  split: ! '>=0.1 && <0.3'
  hledger: ==1.1
  base: ! '>=4.8 && <5'
  time: ! '>=1.5'
  unordered-containers: -any
  text: ! '>=0.11'
  megaparsec: ! '>=5.0 && <5.2'
  wizards: ==1.0.*
  filepath: -any
  process: -any
  parsec: ! '>=3'
  data-default: ! '>=0.5'
  HUnit: -any
  csv: -any
  containers: -any
  base-compat: ! '>=0.8.1'
  utf8-string: ! '>=0.3.5 && <1.1'
  old-time: -any
  regex-tdfa: -any
  mtl: -any
  cmdargs: ==0.10.*
  tabular: ==0.2.*
  hashable: ! '>=1.2.4'
  pretty-show: ! '>=1.6.4'
  terminfo: -any
  file-embed: ! '>=0.0.10 && <0.1'
  transformers: -any
  temporary: -any
  safe: ! '>=0.2'
  directory: -any
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- '0.5.1'
- '0.6'
- '0.6.1'
- '0.7.0'
- '0.8'
- '0.9'
- '0.10'
- '0.11'
- '0.11.1'
- '0.12'
- '0.12.1'
- '0.13'
- '0.14'
- '0.15'
- '0.15.1'
- '0.15.2'
- '0.16'
- '0.16.1'
- '0.17'
- '0.18'
- '0.18.1'
- '0.18.2'
- '0.19'
- '0.19.1'
- '0.19.2'
- '0.19.3'
- '0.20'
- '0.20.0.1'
- '0.21'
- '0.21.1'
- '0.21.2'
- '0.21.3'
- '0.22'
- '0.22.1'
- '0.22.2'
- '0.23'
- '0.23.1'
- '0.23.2'
- '0.23.3'
- '0.24'
- '0.24.1'
- '0.25'
- '0.25.1'
- '0.26'
- '0.27'
- '0.27.1'
- '1.0'
- '1.0.1'
- '1.1'
author: Simon Michael <simon@joyful.com>
latest: '1.1'
description-type: markdown
description: ! '#  hledger


  ## lightweight, portable, dependable accounting tools


  hledger is a computer program for easily tracking money, time, or other commodities,

  on unix, mac and windows (and web-capable mobile devices, to some extent).


  It is first a command-line tool, but there are also curses-style and

  web interfaces, and a Haskell library

  (http://hackage.haskell.org/package/hledger-lib) for building your own

  programs and scripts (hledger is written in Haskell).  hledger was

  inspired by and is largely compatible with Ledger.  hledger is free

  software available under the GNU General Public License v3+.


  hledger aims to help both computer experts and regular folks

  to gain clarity and control in their finances and time management,

  but currently it is a bit more suited to techies.

  I use it every day to:


  -   track spending and income

  -   see time reports by day/week/month/project

  -   get accurate numbers for client billing and tax filing

  -   track invoices


  Though limited in features, hledger is lightweight, usable and reliable.

  For some, it is a simpler, less distracting, more future-proof alternative to Quicken
  or GnuCash.


  For more, see http://hledger.org.


  [![license](https://img.shields.io/badge/license-GPLv3+-brightgreen.svg)](http://www.gnu.org/licenses/gpl.html)

  [![hackage release](https://img.shields.io/hackage/v/hledger.svg?label=current+release)](http://hackage.haskell.org/package/hledger)

  [![stackage LTS package](http://stackage.org/package/hledger/badge/lts)](http://stackage.org/lts/package/hledger)

  <!-- [![github

  release](https://img.shields.io/github/release/simonmichael/hledger.svg?label=github+release)](https://github.com/simonmichael/hledger/releases)

  --> <!-- [![github latest release

  downloads](https://img.shields.io/github/downloads/simonmichael/hledger/latest/total.svg?label=github+downloads)](https://github.com/simonmichael/hledger/releases)

  --> <!-- [![gratipay](https://img.shields.io/gratipay/hledger.svg)]()

  -->


  [![travis build status](https://img.shields.io/travis/simonmichael/hledger.svg)](https://travis-ci.org/simonmichael/hledger)

  [![hackage upper bounds](https://img.shields.io/hackage-deps/v/hledger.svg?label=hackage+bounds)](http://packdeps.haskellers.com/feed?needle=hledger)

  [![github issues](https://img.shields.io/github/issues/simonmichael/hledger.svg)](http://bugs.hledger.org)

  [![bountysource](https://api.bountysource.com/badge/team?team_id=75979&style=bounties_received)](https://github.com/simonmichael/hledger/issues?q=label:bounty)


'
license-name: GPL
