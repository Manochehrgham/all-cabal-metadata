changelog-type: text
hash: 389622f5fb7136bbea67f21bc454610c7fcfcc7b8b095d369772e7966650e293
test-bench-deps:
  shakespeare: ! '>=1.0 && <2.1'
  mtl-compat: -any
  shakespeare-text: ! '>=1.0 && <1.2'
  test-framework-hunit: -any
  hledger-lib: -any
  test-framework: -any
  haskeline: -any
  split: -any
  hledger: -any
  base: ! '>=4.3 && <5'
  time: ! '>=1.5'
  text: -any
  wizards: ==1.0.*
  filepath: -any
  process: -any
  parsec: ! '>=3'
  HUnit: -any
  csv: -any
  containers: -any
  base-compat: ! '>=0.8.1'
  regexpr: -any
  old-time: -any
  regex-tdfa: -any
  mtl: -any
  cmdargs: -any
  html: -any
  tabular: ==0.2.*
  pretty-show: ! '>=1.6.4'
  transformers: -any
  safe: -any
  directory: -any
synopsis: The main command-line interface for the hledger accounting tool.
changelog: ! "User-visible changes in hledger and hledger-lib.\n\n\n0.25.1 (2015/4/29)\n\n-
  timelog: support the description field (#247)\n\n0.25 (2015/4/7)\n\n- GHC 7.10 compatibility
  (#239)\n\n- build with terminfo support on POSIX systems by default\n    \n    On
  non-windows systems, we now build with terminfo support by\n    default, useful
  for detecting terminal width and other things.\n\n    This requires the C curses
  dev libaries, which makes POSIX\n    installation slightly harder; if it causes
  problems you can\n    disable terminfo support with the new `curses` cabal flag,
  eg:\n    cabal install -f-curses ... (or cabal might try this\n    automatically,
  I'm not sure).\n\n- register: use the full terminal width, respect COLUMNS, allow
  column width adjustment\n    \n    On POSIX systems, register now uses the full
  terminal width by\n    default. Specifically, the output width is set from:\n    \n
  \   1. a --width option\n    2. or a COLUMNS environment variable (NB: not the same
  as a bash shell var)\n    3. or on POSIX (non-windows) systems, the current terminal
  width\n    4. or the default, 80 characters.\n    \n    Also, register's --width
  option now accepts an optional\n    description column width following the overall
  width (--width\n    WIDTH[,DESCWIDTH]). This also sets the account column width,
  since\n    the available space (WIDTH-41) is divided up between these two\n    columns.
  Here's a diagram:\n    \n    <--------------------------------- width (W) ---------------------------------->\n
  \   date (10)  description (D)       account (W-41-D)     amount (12)   balance
  (12)\n    DDDDDDDDDD dddddddddddddddddddd  aaaaaaaaaaaaaaaaaaa  AAAAAAAAAAAA  AAAAAAAAAAAA\n
  \   \n    Examples:\n    $ hledger reg                 # use terminal width on posix\n
  \   $ hledger reg -w 100          # width 100, equal description/account widths\n
  \   $ hledger reg -w 100,40       # width 100, wider description\n    $ hledger
  reg -w $COLUMNS,100 # terminal width and set description width\n\n- balance: new
  -T/--row-total and -A/--average options\n\n  In multicolumn balance reports, -T/--row-total
  now shows a row totals\n  column and -A/--average shows a row averages column.\n
  \ This helps eg to see monthly average expenses (hledger bal ^expenses -MA).\n\n
  \ NB our use of -T deviates from Ledger's UI, where -T sets a custom\n  final total
  expression.\n\n- balance: -N is now short for --no-total\n- balance: fix partially-visible
  totals row with --no-total\n    \n    A periodic (not using --cumulative or --historical)
  balance report\n    with --no-total now hides the totals row properly.\n\n- journal,
  csv: comment lines can also start with *\n    \n    As in Ledger. This means you
  can embed emacs org/outline-mode nodes in\n    your journal file and manipulate
  it like an outline.\n\n0.24.1 (2015/3/15)\n\n- journal: fix balance accumulation
  across assertions (#195)\n    \n    A sequence of balance assertions asserting first
  one commodity, then\n    another, then the first again, was not working.\n\n- timelog:
  show hours with two decimal places instead of one (#237)\n- in weekly reports, simplify
  week 52's heading like the others\n- disallow trailing garbage in a number of parsers\n\n
  \   Trailing garbage is no longer ignored when parsing the following:\n    balance
  --format option, register --width option, hledger-rewrite\n    options, hledger
  add's inputs, CSV amounts, posting amounts,\n    posting dates in tags.\n\n- allow
  utf8-string-1 (fpco/stackage/#426)\n\n0.24 (2014/12/25)\n\nGeneral:\n- fix redundant
  compilation when cabal installing the hledger packages\n- switch to Decimal for
  representing amounts (#118)\n- report interval headings (eg in balance, register
  reports) are shown\n  compactly when possible\n- general speedups\n\nJournal format:\n-
  detect decimal point and digit groups more robustly (#196)\n- check that transaction
  dates are followed by whitespace or newline\n- check that dates use a consistent
  separator character\n- balance assertions now are specific to a single commodity,
  like\n  Ledger (#195)\n- support multi-line comments using \"comment\", \"end comment\"\n
  \ directives, like Ledger\n\nCSV format:\n- reading CSV data from stdin now works
  better\n- the rules file include directive is now relative to the current\n  file's
  directory (#198)\n- the original order of same-day transactions is now usually preserved\n
  \ (if the records appear to be in reverse date order, we reverse them\n  before
  finally sorting by transaction date)\n- CSV output is now built in to the balance,
  print, and register\n  commands, controlled by -O/--output-format (and -o/--output-file,\n
  \ see below)\n\nCLI:\n- the --width and --debug options now require their argument
  (#149)\n- when an option is repeated, the last value takes precedence (#219).\n
  \ This is helpful eg for customising your reporting command aliases on\n  the fly.\n-
  smart dates (used in -p/-b/-e/date:/date2:) now must use a\n  consistent separator
  character, and must be parseable to the end\n- output destination and format selection
  is now built in to the\n  balance, print and register commands, controlled by -o/--output-file\n
  \ and -O/--output-format options. Notes:\n  - -o - means stdout\n  - an output file
  name suffix matching a supported format will also\n    set the output format, unless
  overridden by --output-format\n  - commands' supported output formats are listed
  in their\n    command-line help. Two formats are currently available:\n    txt (the
  default) and csv.\n- balance assertions can be disabled with --ignore-assertions\n\nAccount
  aliases:\n- all matching account aliases are now applied, not just one directive\n
  \ and one option\n- account aliases now match by case insensitive regular expressions\n
  \ matching anywhere in the account name\n- account aliases can replace multiple
  occurrences of the pattern\n  within an account name\n- an account alias replacement
  pattern can reference matched groups\n  with \\N\n\nQueries:\n- date:/date2: with
  a malformed date now reports an error instead of\n  being ignored\n- amt: now supports
  >= or <=\n- clarify status: docs and behaviour; \"*\" is no longer a synonym for\n
  \ \"1\" (fixes #227)\n\nbalance:\n- fix: in tree mode, --drop is ignored instead
  of showing empty account names\n- a depth limit of 0 now shows summary items with
  account name \"...\",\n  instead of an empty report (#206)\n- in multicolumn balance
  reports, -E now also shows posting-less\n  accounts with a non-zero balance during
  the period (in addition to\n  showing leading & trailing empty columns)\n- in multicolumn
  reports, multi-commodity amounts are rendered on one\n  line for better layout (#186)\n-
  multicolumn reports' title now includes the report span\n\nregister:\n- runs faster
  with large output\n- supports date2:, and date:/date2: combined with --date2, better
  (fixes\n  #201, #221, #222)\n- a depth limit of 0 now shows summary items (see balance)\n-
  -A/--average now implies -E/--empty\n- postings with multi-commodity amounts are
  now top-aligned, like\n  Ledger\n\nExtra commands:\n- hledger-equity: fix end date
  in title; print closing entry too\n- hledger-check-dates: added\n\n0.23.3 (2014/9/12)\n\n-
  allow text 1.2+ (#207)\n\n0.23.2 (2014/5/8)\n\n- register: also fix date sorting
  of postings (#184)\n\n0.23.1 (2014/5/7)\n\n- register: fix a refactoring-related
  regression that the tests\n  missed: if transactions were not ordered by date in
  the journal,\n  register could include postings before the report start date in
  the\n  output. (#184)\n- add: don't apply a default commodity to amounts on entry
  (#138)\n- cli: options before the add-on command name are now also passed to it
  (#182)\n- csv: allow the first name in a fields list to be empty (#178)\n- csv:
  don't validate fields count in skipped lines (#177)\n\n\n0.23 (2014/5/1)\n\nJournal
  format:\n- A # (hash) in column 0 is now also supported for starting a top-level
  journal comment, like Ledger.\n- The \"too many missing amounts\" error now reminds
  about the 2-space rule.\n- Fix: . (period) is no longer parsed as a valid amount.\n-
  Fix: default commodity directives no longer limit the maximum display precision
  (#169).\n- Fix: + before an amount is no longer parsed as part of the commodity
  (#181).\n\nCLI:\n- Command-line help cleanups, layout improvements.\n- Descriptions
  are shown for known add-ons in the command list.\n- Command aliases have been simplified.\n-
  Add-ons can now have any of these file extensions:\n  none, hs, lhs, pl, py, rb,
  rkt, sh, bat, com, exe.\n- Add-ons are displayed without their file extensions when
  possible.\n- Add-ons with the same name as a built-in command or alias are ignored.\n-
  Fix: add-on detection and invocation now works on windows.\n- Fix: add-ons with
  digits in the name are now found.\n- Fix: add-on arguments containing a single quote
  now work.\n- Fix: when -- is used to hide add-on options from the main program,\n
  \ it is no longer passed through as an add-on argument.\n\nQueries:\n- The currency/commodity
  query prefix (sym:) has been renamed to cur:.\n- Currency/commodity queries are
  applied more strongly in register and\n  balance reports, filtering out unwanted
  currencies entirely. Eg\n  hledger balance cur:'\\$' now reports only the dollar
  amounts even if\n  there are multi-currency transactions or postings.\n- Amount
  queries like amt:N, amt:<N and amt:>N, where N is not 0, now do an unsigned\n  comparison
  of the amount and N. That is, they compare the absolute magnitude.\n  To do a signed
  comparison instead, write N with its sign (eg amt:+N, amt:<+N, amt:>-N).\n- Fix:
  amount queries no longer give false positives on multi-commodity amounts.\n\naccounts:\n-
  An accounts command has been added, similar to Ledger's, for listing account names\n
  \ in flat or hierarchical mode.\n\nadd:\n- Tab completion now works at all prompts,
  and will insert the default if the input area is empty.\n- Account and amount defaults
  are more robust and useful.\n- Transactions may also be completed by the enter key,
  when there are no more default postings.\n- Input prompts are displayed in a different
  colour when supported.\n\nbalance:\n- Balance reports in flat mode now always show
  exclusive (subaccount-excluding) balances.\n- Balance reports in flat mode with
  --depth now aggregate deeper accounts at the depth limit instead of excluding them.\n-
  Multicolumn reports in flat mode now support --drop.\n- Multicolumn balance reports
  can now show the account hierarchy with --tree.\n- Multicolumn report start/end
  dates are adjusted to encompass the displayed\n  report periods, so the first and
  last periods are \"full\" and comparable to the others.\n- Fix: zero-balance leaf
  accounts below a non-zero-balance parent are no longer always shown (#170).\n- Fix:
  multicolumn reports now support --date2 (cf #174).\n\nbalancesheet, cashflow, incomestatement:\n-
  These commands now support --flat and --drop.\n\nprint:\n- Tag queries (tag:) will
  now match a transaction if any of its postings match.\n\nregister:\n- The --display
  option has been dropped. To see an accurate running total which\n  includes the
  prior starting balance, use --historical/-H (like balance). \n- With a report interval,
  report start/end dates are adjusted to encompass the displayed\n  periods, so the
  first and last periods are \"full\" and comparable to the others.\n- Fix: --date2
  now works with report intervals (fixes #174).\n\nMiscellaneous:\n- Default report
  dates now derive from the secondary dates when --date2 is in effect.\n- Default
  report dates now notice any posting dates outside the transaction dates' span.\n-
  Debug output improvements.\n- New add-on example: extra/hledger-rewrite.hs, adds
  postings to matched entries.\n- Compatible with GHC 7.2 (#155) - GHC 7.8, shakespeare
  2\n\n\n0.22.2 (2014/4/16)\n\n- display years before 1000 with four digits, not three\n-
  avoid pretty-show to build with GHC < 7.4\n- allow text 1.1, drop data-pprint to
  build with GHC 7.8.x\n\n\n0.22.1 (2014/1/6) and older: see http://hledger.org/release-notes
  or doc/CHANGES.md.\n"
basic-deps:
  shakespeare: ! '>=2.0.2.2 && <2.1'
  mtl-compat: -any
  shakespeare-text: ! '>=1.0 && <1.2'
  hledger-lib: ==0.25.1
  haskeline: ! '>=0.6 && <=0.8'
  split: ! '>=0.1 && <0.3'
  hledger: ==0.25.1
  base: ! '>=4.3 && <5'
  time: ! '>=1.5'
  text: ! '>=0.11'
  wizards: ==1.0.*
  filepath: -any
  process: -any
  parsec: ! '>=3'
  HUnit: -any
  csv: -any
  containers: -any
  base-compat: ! '>=0.8.1'
  regexpr: ! '>=0.5.1'
  utf8-string: ! '>=0.3.5 && <1.1'
  old-time: -any
  regex-tdfa: -any
  mtl: -any
  cmdargs: ==0.10.*
  tabular: ==0.2.*
  pretty-show: ! '>=1.6.4'
  terminfo: -any
  safe: ! '>=0.2'
  directory: -any
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- '0.5.1'
- '0.6'
- '0.6.1'
- '0.7.0'
- '0.8'
- '0.9'
- '0.10'
- '0.11'
- '0.11.1'
- '0.12'
- '0.12.1'
- '0.13'
- '0.14'
- '0.15'
- '0.15.1'
- '0.15.2'
- '0.16'
- '0.16.1'
- '0.17'
- '0.18'
- '0.18.1'
- '0.18.2'
- '0.19'
- '0.19.1'
- '0.19.2'
- '0.19.3'
- '0.20'
- '0.20.0.1'
- '0.21'
- '0.21.1'
- '0.21.2'
- '0.21.3'
- '0.22'
- '0.22.1'
- '0.22.2'
- '0.23'
- '0.23.1'
- '0.23.2'
- '0.23.3'
- '0.24'
- '0.24.1'
- '0.25'
- '0.25.1'
latest: '0.25.1'
description-type: haddock
description: ! 'hledger is a library and set of user tools for working

  with financial data (or anything that can be tracked in a

  double-entry accounting ledger.) It is a haskell port and

  friendly fork of John Wiegley''s Ledger. hledger provides

  command-line, curses and web interfaces, and aims to be a

  reliable, practical tool for daily use.'
