homepage: https://github.com/lpeterse/haskell-socket
changelog-type: markdown
hash: 0ae9858844ea5efd98d4b92cd189717621ec2c8de9c19b9b83aebfbedff73762
test-bench-deps:
  bytestring: <0.11
  base: ! '>=4.7 && <5'
  socket: -any
  async: -any
maintainer: info@lars-petersen.net
synopsis: A portable and extensible sockets library.
changelog: ! "0.3.0.1 Lars Petersen <info@lars-petersen.net> 2015-06-07\n\n * Fixed
  documentation of eaiNONAME.\n * Fixed typo in .cabal file in reference to cbits
  file.\n\n0.3.0.0 Lars Petersen <info@lars-petersen.net> 2015-06-07\n\n * `AddrInfoFlags`
  and `NameInfoFlags` are now instances of `Bits`.\n * Dropped all sendmsg/recvmsg
  related operations (harden the core first!)\n * Dropped support for UNIX socket
  (will be separate package `socket-unix`)\n * Renamed type function `Address` to
  `SockAddr`.\n * Added GetAddrInfo and GetNameInfo classes.\n * Dropped support for
  SCTP (will be separate package `socket-sctp`)\n * Added support for RAW sockets.\n
  * Started to support Windows (still unfinished).\n * New operation `recvRecord`.\n
  * ReceiveMsg now returns a strict `ByteString`.\n * New operations `sendV`, `sendToV`.\n
  * Restricted getAddrInfo and getNameInfo and added `getAddrInfo6` and\n   `getNameInfo6`\n
  * Added address family types INET, INET6 and UNIX (API breaking change)\n * Hide
  `SockAddrIn6` address constructor\n * Hide `SockAddrIn` address constructor\n *
  Added `recvMsg` operation\n * Fixed unsafeSend, unsafeSendTo and unsafeSendMsg (they
  were waiting for\n   a read event instead of waiting for writing)\n * Use `aiStrError`
  values in Show instance\n * Added `aiStrError` function\n * Added constants for
  AddrInfoException\n * Changed definitin of AddrInfoException\n * Added `sendAllMsg`
  operation\n * Added `sendMsg` operation (+ some types and internals)\n\n0.2.0.0
  Lars Petersen <info@lars-petersen.net> 2015-05-29\n\n * Added a sendAll operation\n
  * Exposed the Socket constructor\n * Added `getNameInfo` operation\n * Added msgWAITALL
  and fixed serious bug regarding all other MsgFlags\n * Nicer Show instances for
  SockAddrIn and SockAddrIn6\n * Hiding internal modules\n * Added `getAddrInfo` operation\n\n0.1.0.1
  Lars Petersen <info@lars-petersen.net> 2015-05-28\n\n * Added CHANGELOG.md\n * Removed
  `threadWaitReadMVar` and `threadWaitWriteMVar`\n * Import `Data.Monoid` in `System.Socket.Unsafe`
  to support older Preludes\n\n0.1.0.0 Lars Petersen <info@lars-petersen.net> 2015-05-28\n\n
  * Initial release"
basic-deps:
  bytestring: <0.11
  base: ! '>=4.7 && <5'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.2.0.0'
- '0.3.0.1'
author: Lars Petersen
latest: '0.3.0.1'
description-type: markdown
description: ! "socket\n======\n\n[![Available on Hackage][badge-hackage]][hackage]\n[![License
  MIT][badge-license]][license]\n[![Build Status][badge-travis]][travis]\n\n### Motivation\n\nThis
  library aims to expose a minimal and platform-independant interface for\nPOSIX compliant
  networking code.\n\n### Implementation Philosophy\n\n  - Every operation and every
  flag exposed should be supported with same\n    semantics on every platform. If
  this cannot be guaranteed it should\n    be supplied by another (extension) package.\n
  \   Examples for things that have been ripped out of this library are:\n      -
  Support for Unix sockets which don't have an equivalent on Windows.\n      - Support
  for SCTP.\n      - Support for vectored IO (at least unless it can be guaranteed
  to\n        be supported on all platforms).\n\n  - Absolutely no conditional exports.\n\n
  \ - No `#ifdef` madness in the Haskell sources. The Haskell binding code\n    uses
  the FFI to reference the platform's native networking functions.\n    If they are
  not Posix compliant (i.e. under Windows) an level of\n    indirection is introduced
  to write an Posix compliant equivalent in C\n    using whatever the plaform specific
  building blocks are.\n\n### Platform Support\n\n#### Linux\n\nWorking.\n\n#### BSD\n\nUnknown.
  Should work. Please report if not.\n\n#### MacOS\n\nUnknown. Please report if you
  have a Mac.\n\n#### Windows\n\nUnfinished (problem with non-blocking IO).\n\nAim:
  Support Windows7 or higher. Don't have dependencies on autotools, just\nHaskell
  Platform with MinGW should suffice.\n\n#### Android\n\nUnknown. Should be supported.
  Please get in touch if you plan to use it.\n\n### Dependencies\n\n   - base\n   -
  bytestring\n\n### Tests\n\nRun the default test suite:\n\n```bash\ncabal test\n```\n\n[badge-travis]:
  https://img.shields.io/travis/lpeterse/haskell-socket.svg\n[travis]: https://travis-ci.org/lpeterse/haskell-socket\n[badge-hackage]:
  https://img.shields.io/hackage/v/socket.svg?dummy\n[hackage]: https://hackage.haskell.org/package/socket\n[badge-license]:
  https://img.shields.io/badge/license-MIT-green.svg?dummy\n[license]: https://github.com/lpeterse/haskell-socket/blob/master/LICENSE\n[issues]:
  https://github.com/lpeterse/haskell-socket/issues\n[Github]: https://github.com/lpeterse/haskell-socket"
license-name: MIT
