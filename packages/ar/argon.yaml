homepage: http://github.com/rubik/argon
changelog-type: markdown
hash: 74d40b8968eab66bd031789af590538e98bac5b28da26e91e7a1b5ec31b5318e
test-bench-deps:
  ghc: ! '>=7.10.2 && <8'
  hlint: ==1.*
  bytestring: ! '>=0.10'
  base: ! '>=4.7 && <5'
  hspec: ! '>=2.1'
  argon: -any
  syb: ! '>=0.5'
  filepath: ! '>=1.4'
  ansi-terminal: ! '>=0.6'
  ghc-paths: ! '>=0.1'
  QuickCheck: -any
  aeson: ! '>=0.8'
maintainer: michelelacchia@gmail.com
synopsis: Measure your code's complexity
changelog: ! '# Change log


  This package uses [Semantic Versioning][1].


  ## v0.3.0.0


  - Major: replace Haskell-Src-Exts with GHC API: #5

  - Add basic tests: #7


  ## v0.2.0.0


  - Add `USAGE.txt` to tarball: #2


  ## v0.1.0.0


  -   Initially created.


  [1]: http://semver.org/spec/v2.0.0.html

'
basic-deps:
  ghc: ! '>=7.10.2 && <8'
  bytestring: ! '>=0.10'
  base: ! '>=4.7 && <5'
  argon: -any
  syb: ! '>=0.5'
  docopt: ! '>=0.7'
  filepath: ! '>=1.4'
  containers: ! '>=0.5'
  ansi-terminal: ! '>=0.6'
  pathwalk: ! '>=0.3'
  ghc-paths: ! '>=0.1'
  aeson: ! '>=0.8'
  directory: ! '>=1.2'
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.3.0.0'
author: Michele Lacchia
latest: '0.3.0.0'
description-type: markdown
description: ! "<h1 align=\"center\">\n    <a href=\"https://github.com/rubik/argon\">\n
  \       Argon\n    </a>\n</h1>\n\n<p align=\"center\">\n    <a href=\"https://travis-ci.org/rubik/argon\">\n
  \       <img alt=\"Tests\"\n             src=\"https://img.shields.io/travis/rubik/argon.svg?style=flat-square\">\n
  \   </a>\n    <a href=\"https://github.com/rubik/argon/blob/master/LICENSE\">\n
  \       <img alt=\"License\"\n             src=\"https://img.shields.io/badge/license-ISC-blue.svg?style=flat-square\">\n
  \   </a>\n    <a href=\"https://hackage.haskell.org/package/argon\">\n        <img
  alt=\"Version\"\n             src=\"https://img.shields.io/hackage/v/argon.svg?label=version&amp;style=flat-square\">\n
  \   </a>\n</p>\n\n<p align=\"center\">\n    Argon measures your code's cyclomatic
  complexity.\n</p>\n\n<p align=\"center\">\n    <img alt=\"Argon screenshot\"\n         src=\"https://cloud.githubusercontent.com/assets/238549/10644166/5a0f5efc-7827-11e5-9b29-6e7bcccb2345.png\">\n</p>\n\n<hr>\n\n###
  Installing\n\nSimple as ``stack install argon`` or ``cabal install argon``.\n\n###
  Running\n\nThe Argon executable expects a list of file paths:\n\n    $ argon --no-color
  src/**/*.hs\n    src/Argon/Formatters.hs\n        47:1 formatResult - 3\n        33:1
  coloredFunc - 2\n        27:1 fore - 1\n        37:1 coloredRank - 1\n    src/Argon/Parser.hs\n
  \       51:1 parseCode - 2\n        44:1 handleExc - 1\n    src/Argon/Results.hs\n
  \       17:1 filterResults - 2\n        22:1 export - 2\n    src/Argon/Visitor.hs\n
  \       35:1 visitExp - 5\n        42:1 visitOp - 4\n        14:1 funCC - 3\n        16:11
  name - 2\n        11:1 funcsCC - 1\n        20:1 sumWith - 1\n        23:1 complexity
  - 1\n        28:11 descend - 1\n        32:11 inspect - 1\n\nFor every file, Argon
  sorts results with the following criteria (and in this\norder):\n\n    * complexity
  (descending)\n    * line number (ascending)\n    * alphabetically\n\nWhen colors
  are enabled (default), Argon computes a rank associated with the\ncoomplexity score:\n\n|
  Complexity | Rank |\n|:----------:|:----:|\n|    0..5    |   A  |\n|    5..10   |
  \  B  |\n|  above 10  |   C  |\n\n\n#### JSON\n\nResults can also be exported to
  JSON:\n\n    $ argon --json src/**/*.hs\n    [\n      {\n        \"blocks\": [\n
  \         { \"complexity\": 3, \"name\": \"formatResult\", \"lineno\": 58, \"col\":
  1 },\n          { \"complexity\": 2, \"name\": \"coloredFunc\", \"lineno\": 39,
  \"col\": 1 },\n          { \"complexity\": 1, \"name\": \"fore\", \"lineno\": 33,
  \"col\": 1 },\n          { \"complexity\": 1, \"name\": \"coloredRank\", \"lineno\":
  43, \"col\": 1 },\n          { \"complexity\": 1, \"name\": \"formatSingle\", \"lineno\":
  52, \"col\": 1 }\n        ],\n        \"path\": \"src/Argon/Formatters.hs\",\n        \"type\":
  \"result\"\n      },\n      { \"blocks\": [ ], \"path\": \"src/Argon.hs\", \"type\":
  \"result\" },\n      {\n        \"blocks\": [\n          { \"complexity\": 2, \"name\":
  \"parseCode\", \"lineno\": 55, \"col\": 1 },\n          { \"complexity\": 1, \"name\":
  \"handleExc\", \"lineno\": 48, \"col\": 1 }\n        ],\n        \"path\": \"src/Argon/Parser.hs\",\n
  \       \"type\": \"result\"\n      },\n      {\n        \"blocks\": [\n          {
  \"complexity\": 3, \"name\": \"export\", \"lineno\": 35, \"col\": 1 },\n          {
  \"complexity\": 2, \"name\": \"filterResults\", \"lineno\": 28, \"col\": 1 },\n
  \         { \"complexity\": 1, \"name\": \"sortOn\", \"lineno\": 12, \"col\": 1
  }\n        ],\n        \"path\": \"src/Argon/Results.hs\",\n        \"type\": \"result\"\n
  \     },\n      {\n        \"blocks\": [\n          { \"complexity\": 2, \"name\":
  \"toJSON\", \"lineno\": 30, \"col\": 5 },\n          { \"complexity\": 1, \"name\":
  \"toJSON\", \"lineno\": 18, \"col\": 5 }\n        ],\n        \"path\": \"src/Argon/Types.hs\",\n
  \       \"type\": \"result\"\n      },\n      {\n        \"blocks\": [\n          {
  \"complexity\": 5, \"name\": \"visitExp\", \"lineno\": 36, \"col\": 1 },\n          {
  \"complexity\": 4, \"name\": \"visitOp\", \"lineno\": 43, \"col\": 1 },\n          {
  \"complexity\": 3, \"name\": \"funCC\", \"lineno\": 15, \"col\": 1 },\n          {
  \"complexity\": 2, \"name\": \"name\", \"lineno\": 17, \"col\": 11 },\n          {
  \"complexity\": 1, \"name\": \"funcsCC\", \"lineno\": 12, \"col\": 1 },\n          {
  \"complexity\": 1, \"name\": \"sumWith\", \"lineno\": 21, \"col\": 1 },\n          {
  \"complexity\": 1, \"name\": \"complexity\", \"lineno\": 24, \"col\": 1 },\n          {
  \"complexity\": 1, \"name\": \"descend\", \"lineno\": 29, \"col\": 11 },\n          {
  \"complexity\": 1, \"name\": \"inspect\", \"lineno\": 33, \"col\": 11 }\n        ],\n
  \       \"path\": \"src/Argon/Visitor.hs\",\n        \"type\": \"result\"\n      }\n
  \   ]\n"
license-name: ISC
