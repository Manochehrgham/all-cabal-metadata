homepage: https://github.com/cartazio/arithmoi
changelog-type: text
hash: 754dabd9f5e30df42def7e5765e13333c62806e5aa9f192f41bbe9f17deec2a8
test-bench-deps:
  tasty-smallcheck: ! '>=0.8 && <0.9'
  base: ! '>=4.6 && <5'
  criterion: -any
  smallcheck: ! '>=1.1 && <1.2'
  containers: ==0.5.*
  arithmoi: ==0.4.*
  tasty-quickcheck: ! '>=0.8 && <0.9'
  tasty-hunit: ! '>=0.9 && <0.10'
  transformers: ! '>=0.3'
  random: -any
  tasty: ! '>=0.10 && <0.12'
  QuickCheck: ! '>=2.7.6 && <2.10'
  transformers-compat: ! '>=0.4'
maintainer: Carter Schonwald  carter at wellposed dot com
synopsis: ! 'Efficient basic number-theoretic functions.

  Primes, powers, integer logarithms.'
changelog: ! "0.4.3.0:\n    This release supports GHC 7.6, 7.8, 7.10 and 8.0.\n\n
  \   Add Math.NumberTheory.ArithmeticFunctions with brand-new machinery\n    for
  arithmetic functions: divisors, tau, sigma, totient, jordan,\n    moebius, liouville,
  smallOmega, bigOmega, carmichael, expMangoldt (#30).\n    Old implementations (exposed
  via Math.NumberTheory.Primes.Factorisation\n    and Math.NumberTheory.Powers.Integer)
  are deprecated and will be removed\n    in the next major release.\n\n    Add Karatsuba
  sqrt algorithm, improving performance on large integers (#6).\n\n    Fix incorrect
  indexing of FactorSieve (#35).\n\n0.4.2.0:\n    This release supports GHC 7.6, 7.8,
  7.10 and 8.0.\n\n    Add new cabal flag check-bounds, which replaces all unsafe
  array functions with safe ones.\n\n    Add basic functions on Gaussian integers.\n
  \   Add Moebius mu-function.\n\n    Forbid non-positive moduli in Math.NumberTheory.Moduli.\n\n
  \   Fix out-of-bounds error in Math.NumberTheory.Primes.Heap, Math.NumberTheory.Primes.Sieve
  and Math.NumberTheory.MoebiusInversion.\n    Fix 32-bit build.\n    Fix binaryGCD
  on negative numbers.\n    Fix highestPower (various issues).\n\n0.4.1.0:\n    Add
  integerLog10 variants at Bas van Dijk's request and expose\n    Math.NumberTheory.Powers.Integer,
  with an added integerWordPower.\n0.4.0.4:\n    Update for GHC-7.8, the type of some
  primops changed, they return Int# now\n    instead of Bool.\n    Fixed bugs in modular
  square roots and factorisation.\n0.4.0.3:\n    Relaxed dependencies on mtl and containers\n
  \   Fixed warnings from GHC-7.5, Word(..) moved to GHC.Types\n    Removed SPECIALISE
  pragma from inline function (warning from 7.5, probably\n    pointless anyway)\n0.4.0.2:\n
  \   Sped up factor sieves. They need more space now, but the speedup is worth it,
  IMO.\n    Raised spec-constr limit in MoebiusInversion.Int\n0.4.0.1:\n    Fixed
  Haddock bug\n0.4.0.0:\n    Added generalised Moebius inversion, to be continued\n0.3.0.0:\n
  \   Added modular square roots and Chinese remainder theorem\n0.2.0.6:\n    Performance
  tweaks for powerModInteger (~10%) and\n    invertMod (~25%).\n0.2.0.5:\n    Fix
  bug in psieveFrom\n0.2.0.4:\n    Fix bug in nthPrime\n0.2.0.3:\n    Fix bug in powerMod\n0.2.0.2:\n
  \   Relax bounds on array dependency for 7.4.*\n0.2.0.1:\n    Fix copy-pasto (only
  relevant for 7.3.*)\n    Fix imports for ghc >= 7.3\n0.2.0.0:\n    Added certificates
  and certified testing/factorisation\n0.1.0.2:\n    Fixed doc bugs\n0.1.0.1:\n    Elaborate
  on overflow, work more on native Ints in Eratosthenes\n0.1.0.0:\n    First release\n"
basic-deps:
  base: ! '>=4.6 && <5'
  semigroups: ! '>=0.8'
  array: ! '>=0.5 && <0.6'
  integer-gmp: <1.1
  containers: ! '>=0.5 && <0.6'
  ghc-prim: <0.6
  mtl: ! '>=2.0 && <2.3'
  random: ! '>=1.0 && <1.2'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.2.0.0'
- '0.2.0.1'
- '0.2.0.2'
- '0.2.0.3'
- '0.2.0.4'
- '0.2.0.5'
- '0.2.0.6'
- '0.3.0.0'
- '0.4.0.0'
- '0.4.0.1'
- '0.4.0.2'
- '0.4.0.3'
- '0.4.0.4'
- '0.4.1.0'
- '0.4.1.1'
- '0.4.1.2'
- '0.4.1.3'
- '0.4.2.0'
- '0.4.3.0'
author: Daniel Fischer
latest: '0.4.3.0'
description-type: haddock
description: ! 'A library of basic functionality needed for

  number-theoretic calculations. The aim of this library

  is to provide efficient implementations of the functions.

  Primes and related things (totients, factorisation),

  powers (integer roots and tests, modular exponentiation),

  integer logarithms.'
license-name: MIT
