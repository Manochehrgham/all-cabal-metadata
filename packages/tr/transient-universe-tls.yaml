homepage: http://github.com/transient-haskell/transient-universe-tls
changelog-type: markdown
hash: 937d3be9bc61281f04564e2bfd500941b13f525184ee0f3b5204a0b961c58ecc
test-bench-deps: {}
maintainer: agocorona@gmail.com
synopsis: transient with secure communications
changelog: ''
basic-deps:
  transient-universe: -any
  bytestring: -any
  base: ! '>=4.8 && <5.9'
  tls: -any
  network: -any
  x509-store: -any
  data-default: -any
  transient: -any
  cprng-aes: -any
  certificate: -any
all-versions:
- '0.1.0.0'
author: Alberto G. Corona
latest: '0.1.0.0'
description-type: markdown
description: ! "# transient-universe-tls\r\nsecure communications for transient-universe.
  \r\n\r\n`initTLS` must be called before using any communication. Then any connection
  with other nodes is atempted to be secure. It is necessary a certificate and a key
  for the node at the folder where it is executed.  Certificate verification from
  calling nodes is disabled in this version, so encription of messages among nodes,
  and not verification is the goal initially.\r\n\r\nConnection from nodes accept
  `https` requests. If a connection is secure, socket communications are encripted
  too.\r\n\r\nIn order to generate a self-signed certificate for testing, try the
  following:\r\n\r\n     openssl genrsa -out key.pem 2048\r\n     openssl req -new
  -key key.pem -out certificate.csr\r\n     openssl x509 -req -in certificate.csr
  -signkey key.pem -out certificate.pem\r\n"
license-name: BSD3
