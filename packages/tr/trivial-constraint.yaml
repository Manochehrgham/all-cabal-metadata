homepage: https://github.com/leftaroundabout/trivial-constraint
changelog-type: ''
hash: c2fb0af78c16b340f5dfeb5bf5935250a7f70b72b9b5c07416aee2c8b9138b4b
test-bench-deps: {}
maintainer: sagemueller@geo.uni-koeln.de
synopsis: Constraints that any type, resp. no type fulfills
changelog: ''
basic-deps:
  base: ! '>=4.5 && <5'
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.3.0.0'
author: Justus SagemÃ¼ller
latest: '0.3.0.0'
description-type: haddock
description: ! 'Since GHC 7.4, constraints are first-class: we have the constraint
  kind, and thus type-classes have a kind such as @* -> Constraint@.


  These can be used as parameters to data types. They also can be combined quite nicely,


  @

  type NewConstraint a = (Constraint1 a, Constraint2 a)

  @


  however you always need to start with a plain old type class when building constraints.


  This library provides a type class that is not really a constraint at all, so you
  can "start from zero" with building up a custom constraint.

  Also its opposite (a constraint that no type can ever fulfill).'
license-name: GPL-3
