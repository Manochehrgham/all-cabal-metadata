homepage: https://github.com/eliaslfox/language-elm#readme
changelog-type: ''
hash: 536ff95f4780d6fe4f1cf49f5e431750c5d281713dadd90846d67e2828bb1fb4
test-bench-deps:
  base: -any
  HUnit: -any
  language-elm: -any
  pretty: -any
maintainer: eliaslfox@gmail.com
synopsis: Generate elm code
changelog: ''
basic-deps:
  MissingH: -any
  base: ! '>=4.7 && <5'
  pretty: -any
all-versions:
- '0.0.1.0'
- '0.0.2.0'
- '0.0.3.0'
- '0.0.4.0'
- '0.0.5.0'
- '0.0.6.0'
- '0.0.7.0'
- '0.0.8.0'
- '0.0.9.0'
- '0.0.10.0'
- '0.0.10.1'
author: Elias Lawson-Fox
latest: '0.0.10.1'
description-type: markdown
description: ! "# language-elm\nA haskell library for generating elm source code from
  an ast.\n\n## Usage\nInstall language-elm from stack\n```\nstack install language-elm\n```\n\nImport
  the libraries\n```haskell\nimport Elm.Decleration\nimport Elm.Expression\nimport
  Elm.Import\nimport Elm.Program\nimport Elm.Type\n```\n\nDeclare a program type\n```haskell\nprogram
  : Program\nprogram =\n    Program\n        \"Tuple\"\n        (Select\n            [
  Item \"first\"\n            , Item \"second\"\n            , Item \"mapFirst\"\n
  \           , Item \"mapSecond\"\n            ])\n        []\n        [ Dec\n            \"first\"\n
  \           (TApp [TTuple2 (tvar \"a1\") (tvar \"a2\"), tvar \"a1\"])\n            [Tuple2
  (var \"x\") (Under)]\n            (var \"x\")\n        , Dec\n            \"second\"\n
  \           (TApp [TTuple2 (tvar \"a1\") (tvar \"a2\"), tvar \"a2\"])\n            [Tuple2
  (Under) (var \"y\")]\n            (var \"y\")\n        , Dec\n            \"mapFirst\"\n
  \           (TApp\n                [ TApp [tvar \"a\", tvar \"b\"]\n                ,
  TTuple2 (tvar \"a\") (tvar \"a2\")\n                , TTuple2 (tvar \"b\") (tvar
  \"a2\")\n                ])\n            [var \"func\", Tuple2 (var \"x\") (var
  \"y\")]\n            (Tuple2 (App \"func\" [var \"x\"]) (var \"y\"))\n        ,
  Dec\n            \"mapSecond\"\n            (TApp\n                [ TApp [tvar
  \"a\", tvar \"b\"]\n                , TTuple2 (tvar \"a1\") (tvar \"a\")\n                ,
  TTuple2 (tvar \"a1\") (tvar \"b\")\n                ])\n            [var \"func\",
  Tuple2 (var \"x\") (var \"y\")]\n            (Tuple2 (var \"x\") (App \"func\" [var
  \"y\"]))\n        ]\n```\n\nThen render the program\n\n```haskell\noutput :: String\noutput
  = renderProgram program\n```\n\nWhich results in the following output\n\n```elm\nmodule
  Tuple exposing (first, second, mapFirst, mapSecond)\n\nfirst :: ((a1, a2)) -> a1\nfirst
  (x, _) = x\n\nsecond :: ((a1, a2)) -> a2\nsecond (_, y) = y\n\nmapFirst :: (a ->
  b) -> ((a, a2)) -> ((b, a2))\nmapFirst func (x, y) = (func x, y)\n\nmapSecond ::
  (a -> b) -> ((a1, a)) -> ((a1, b))\nmapSecond func (x, y) = (x, func y)\n```\n\n"
license-name: BSD3
