changelog-type: markdown
hash: 7c5ba5b76f4556e468b667bfe853d49c442e12363015a1a93768770441113879
test-bench-deps: {}
synopsis: LambdaCms "media" extension
changelog: ! 'Change log

  ==========


  #### dev

  * ...


  #### 0.0.2

  * Put constraint to avoid dependency on broken lambdacms-core


  #### 0.0.1

  * Initial upload to Hackage

'
basic-deps:
  shakespeare: -any
  lambdacms-core: ! '>=0.0.7.3 && <0.2'
  base: ! '>=4.3 && <5'
  time: -any
  persistent: -any
  text: -any
  filepath: -any
  yesod: -any
  yesod-form: -any
  directory: -any
all-versions:
- '0.0.1'
- '0.0.2'
- '0.2.0'
latest: '0.2.0'
description-type: markdown
description: ! "lambdacms-media\n===============\n\nThis is an extension for [LambdaCms](http://lambdacms.org)
  which allows admins to manage media files.\n\n**NOTE:** At this point the functionality
  provided by this extension is very basic. Pull request adding features are most
  welcome.\n\n\n# Installing\n\nLambdaCms extensions come as plain Haskell packages
  and need to be added to the\nproject's `.cabal` file like any other package dependency.\n\nThe
  following guide expects a newly initialized LambdaCms base application.\nWhen you
  have an existing base app this guide show still be easy to follow.\n\nIn the `library`
  section of your base application's `.cabal` file append the following\nline to `build-depends`:\n\n```\n
  \               , lambdacms-media\n```\n\nThe media extension's admin section needs
  to be mounted in the base app's\nrouter, therefor add the following line to your
  `config/routes` file:\n\n```\n/admin/media  MediaAdminSubR       MediaAdmin   getLambdaCmsMedia\n```\n\nTo
  `Application.hs` add `import LambdaCms.Media` and the following line:\n\n```haskell\n[...]\n
  \   let getLambdaCms = CoreAdmin\n        getLambdaCmsMedia = MediaAdmin  -- add
  this line\n        mkFoundation appConnPool = App {..}\n[...]\n```\n\nThe procede
  by including the `migrateLambdaCmsMedia` function to `Application.hs`\nas shown
  in this snippet:\n\n```haskell\n[...]\n    runLoggingT\n        (runSqlPool (mapM_
  runMigration [migrateAll, migrateLambdaCmsCore, migrateLambdaCmsMedia]) pool)\n
  \       (messageLoggerSource theFoundation appLogger)\n[...]\n```\n\n\nTo `Foundation.hs`
  also add `import LambdaCms.Media` and the following two lines:\n\n```haskell\n[...]\n
  \   , getLambdaCms   :: CoreAdmin\n    , getLambdaCmsMedia :: MediaAdmin  -- add
  this line\n    }\n[...]\n    adminMenu = (defaultCoreAdminMenu CoreAdminR)\n                ++
  (defaultMediaAdminMenu MediaAdminR)  -- add this line\n    renderLanguages _ = [\"en\",
  \"nl\"]\n[...]\n```\n\nThe last line hooks the media admin section into the admin
  menu.\n\nFinally the following instance needs to be defined in `Foundation.hs`:\n\n```haskell\ninstance
  LambdaCmsMedia App where\n  mediaR       = MediaAdminSubR\n  staticDir y  = appStaticDir
  $ appSettings y\n  staticRoot _ = \"/static\"\n```\n\n\nThat's it! You can now `cabal
  install` the new dependency and run\n`yesod devel` to test drive the freshly installed
  extension.\n\n\n\n# License\n\nAll code in this repository is released under the
  MIT license, as specified\nin the [LICENSE file](https://github.com/lambdacms/lambdacms-core/blob/master/LICENSE).\n\n\n"
