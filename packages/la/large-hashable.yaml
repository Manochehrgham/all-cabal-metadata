homepage: https://github.com/factisresearch/large-hashable
changelog-type: ''
hash: e39e3ff915c1443aa8e0054d7fcf4676dcaa3ccc701530bc2b473e0be225c725
test-bench-deps:
  cereal: -any
  bytestring: -any
  HTF: -any
  base: ! '>=4.8 && <5'
  time: -any
  unordered-containers: -any
  text: -any
  large-hashable: -any
  strict: -any
  containers: -any
  safecopy: -any
  hashable: -any
  byteable: -any
  base16-bytestring: -any
  transformers: -any
  deepseq: -any
  scientific: -any
  QuickCheck: -any
  aeson: -any
  vector: -any
  bytes: -any
  cryptohash: -any
maintainer: Stefan Wehr <wehr@cp-med.com>
synopsis: Efficiently hash (large) Haskell values
changelog: ''
basic-deps:
  void: -any
  bytestring: -any
  base: ! '>=4.8 && <5'
  time: -any
  unordered-containers: -any
  text: -any
  strict: -any
  containers: -any
  utf8-light: -any
  base16-bytestring: -any
  transformers: -any
  scientific: -any
  aeson: -any
  template-haskell: -any
  vector: -any
  bytes: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
author: Stefan Wehr, Lukas Epple
latest: '0.1.0.2'
description-type: markdown
description: ! '# LargeHashable


  [![Build Status](https://travis-ci.org/factisresearch/large-hashable.svg?branch=master)](https://travis-ci.org/factisresearch/large-hashable)

  [![Hackage](https://img.shields.io/hackage/v/large-hashable.svg)](http://hackage.haskell.org/package/large-hashable)


  Efficiently hash Haskell values with MD5, SHA256, SHA512 and other

  hashing algorithms.


  ## Install


  * Using cabal: `cabal install large-hashable`

  * Using Stack: `stack install large-hashable`


  ### Building from git repository


  - clone the repository

  - Install the stack tool (http://haskellstack.org)

  - `stack build` builds the code

  - `stack test` builds the code and runs the tests

  - `run-benchmarks.sh` runs the benchmark suite

'
license-name: BSD3
