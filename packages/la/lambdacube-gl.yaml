homepage: http://www.haskell.org/haskellwiki/LambdaCubeEngine
changelog-type: ''
hash: 83105b84955e38ce48ae93cded988147d43ddb94bc88de7fefd32b8a2522e1e1
test-bench-deps: {}
maintainer: csaba (dot) hruska (at) gmail (dot) com
synopsis: OpenGL backend for LambdaCube graphics language (main package)
changelog: ''
basic-deps:
  bytestring: ! '>=0.10 && <0.11'
  base: ! '>=4.7 && <5'
  prettyclass: ! '>=1.0 && <1.1'
  bytestring-trie: ! '>=0.2 && <0.3'
  bitmap: ! '>=0.0.2 && <0.0.3'
  language-glsl: ! '>=0.2 && <0.3'
  containers: ! '>=0.5 && <0.6'
  binary: ! '>=0.7 && <0.8'
  mtl: ! '>=2.2 && <2.3'
  lambdacube-edsl: ==0.2.0
  lambdacube-core: ==0.2.0
  OpenGLRaw: ! '>=1.5 && <1.6'
  vector: ! '>=0.10 && <0.11'
all-versions:
- '0.2.0'
- '0.2.1'
- '0.2.2'
author: Csaba Hruska, Gergely Patai
latest: '0.2.2'
description-type: haddock
description: ! 'LambdaCube 3D is a domain specific language and library that makes

  it possible to program GPUs in a purely functional style.

  Programming with LambdaCube constitutes of composing a data-flow

  description, which is compiled into a specialised library. The

  language provides a uniform way to define shaders and compositor

  chains by treating both streams and framebuffers as first-class

  values.


  As a user of the library you only need to import the "LambdaCube.GL" and

  "LambdaCube.GL.Mesh" modules. You should check out the pointers at <http://lambdacube3d.wordpress.com/getting-started/>

  to understand the principle behind the library, and also have a good look

  at the @lambdacube-samples@ package.'
license-name: BSD3
