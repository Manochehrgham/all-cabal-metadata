homepage: https://github.com/thomaseding/lambda-options
changelog-type: ''
hash: 9df6be42929afe177ceb5948efb69d4fb242c0c34417062b6e65027404d043d7
test-bench-deps: {}
maintainer: thomasedingcode@gmail.com
synopsis: A modern command-line parser for Haskell.
changelog: ''
basic-deps:
  base: ! '>=4.7 && <4.8'
  monad-loops: ! '>=0.4 && <0.5'
  containers: ! '>=0.5 && <0.6'
  mtl: ! '>=2.2 && <2.3'
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.4.0.0'
author: Thomas Eding
latest: '0.4.0.0'
description-type: markdown
description: ! "# lambda-options-haskell\r\n\r\nA modern command-line parser for Haskell.\r\n\r\n*
  Easy to use. The API is expressive.\r\n* Easy to learn. The API is tiny and simple.\r\n*
  BSD 1-Clause License\r\n\r\n--------------\r\n\r\nBasic example:\r\n```haskell\r\nimport
  System.Environment\r\nimport Text.LambdaOptions\r\n\r\noptions :: Options IO ()\r\noptions
  = do\r\n    addOption (kw \"--help\") $ do\r\n        putStrLn \"--user NAME [AGE]\"\r\n
  \   addOption (kw \"--user\") $ \\name -> do\r\n        putStrLn $ \"Name:\" ++
  name\r\n    addOption (kw \"--user\") $ \\name age -> do\r\n        putStrLn $ \"Name:\"
  ++ name ++ \" Age:\" ++ show (age :: Int)\r\n\r\nmain :: IO ()\r\nmain = do\r\n
  \   args <- getArgs\r\n    mError <- runOptions options args\r\n    case mError
  of\r\n        Just (ParseFailed msg _ _) -> putStrLn msg\r\n        Nothing -> return
  ()\r\n```\r\n"
license-name: OtherLicense
