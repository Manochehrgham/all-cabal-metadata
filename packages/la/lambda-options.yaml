homepage: https://github.com/thomaseding/lambda-options
changelog-type: ''
hash: f8f6e2a97ab289df1b48b7ab874f466003c93edd26f82fc450c0b31340d81ba8
test-bench-deps: {}
maintainer: thomasedingcode@gmail.com
synopsis: A modern command-line parser for Haskell.
changelog: ''
basic-deps:
  read-bounded: ! '>=0.1 && <0.2'
  base: ! '>=4.7 && <4.8'
  containers: ! '>=0.5 && <0.6'
  mtl: ! '>=2.2 && <2.3'
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.4.0.0'
- '0.4.0.1'
- '0.4.0.2'
- '0.5.0.0'
- '0.5.1.0'
- '0.6.0.0'
- '0.7.0.0'
author: Thomas Eding
latest: '0.7.0.0'
description-type: markdown
description: ! "# lambda-options-haskell\r\n\r\nA modern command-line parser for Haskell.\r\n\r\n*
  Easy to use. The API is expressive.\r\n* Easy to learn. The API is tiny and simple.\r\n*
  BSD 1-Clause License\r\n\r\n--------------\r\n\r\nBasic example:\r\n```haskell\r\nimport
  System.Environment\r\nimport Text.LambdaOptions\r\n\r\n\r\noptions :: Options IO
  ()\r\noptions = do\r\n    addOption (kw [\"--help\", \"-h\"] `text` \"Display this
  help text.\") $ \\(HelpDescription desc) -> do\r\n        putStrLn \"Usage:\"\r\n
  \       putStrLn desc\r\n    addOption (kw \"--user\" `argText` \"NAME\" `text`
  \"Prints name.\") $ \\name -> do\r\n        putStrLn $ \"Name:\" ++ name\r\n    addOption
  (kw \"--user\" `argText` \"NAME AGE\" `text` \"Prints name and age.\") $ \\name
  age -> do\r\n        putStrLn $ \"Name:\" ++ name ++ \" Age:\" ++ show (age :: Int)\r\n\r\n\r\nmain
  :: IO ()\r\nmain = do\r\n    args <- getArgs\r\n    case runOptions options args
  of\r\n        Left (ParseFailed msg _ _) -> do\r\n            putStrLn msg\r\n            putStrLn
  $ getHelpDescription options\r\n        Right action -> action\r\n```\r\n\r\n"
license-name: OtherLicense
