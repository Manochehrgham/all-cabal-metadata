homepage: https://github.com/thomaseding/lambda-options
changelog-type: ''
hash: 83aa00a13a4ab85532711b170743785799dc61404c9014415953303b623263fb
test-bench-deps: {}
maintainer: thomasedingcode@gmail.com
synopsis: A modern command-line parser for Haskell.
changelog: ''
basic-deps:
  base: ! '>=4.7 && <4.8'
  monad-loops: ! '>=0.4 && <0.5'
  containers: ! '>=0.5 && <0.6'
  mtl: ! '>=2.2 && <2.3'
all-versions:
- '0.1.0.0'
author: Thomas Eding
latest: '0.1.0.0'
description-type: markdown
description: ! "# lambda-options-haskell\r\n\r\nA modern command-line parser for Haskell.\r\n\r\n*
  Easy to use. The API is expressive.\r\n* Easy to learn. The API is tiny and simple.\r\n*
  BSD 1-Clause License\r\n\r\n--------------\r\n\r\nBasic example:\r\n```haskell\r\nimport
  System.Environment\r\nimport System.ExitCode\r\nimport Text.LambdaOptions\r\n\r\noptions
  :: LambdaOptions IO ()\r\noptions = do\r\n  addOption \"--help\" $ do\r\n    putStrLn
  \"--user NAME [AGE]\"\r\n  addOption \"--user\" $ \\name -> do\r\n    putStrLn $
  \"Name:\" ++ name\r\n  addOption \"--user\" $ \\name age -> do\r\n    putStrLn $
  \"Name:\" ++ name ++ \" Age:\" ++ show (age :: Int)\r\n\r\nmain :: IO ()\r\nmain
  = do\r\n  args <- getArgs\r\n  mError <- runOptions options args\r\n  case mError
  of\r\n    Just OptionsError -> exitFailure\r\n    Nothing -> exitSuccess\r\n\r\n```\r\n"
license-name: OtherLicense
