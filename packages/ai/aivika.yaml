changelog-type: markdown
hash: f90c130c643e46dc324bca3634820671015bce64be11c607c2c4939bc0c2682e
test-bench-deps: {}
synopsis: A multi-paradigm simulation library
changelog: ! "Version 4.0.1\n-----\n\n* Fixed build issues on GHC 7.10.1.\n\nVersion
  4.0\n-----\n\n* Added resource preemption.\n\n* Fixed misprint in the activityProcessor
  function.\n\nVersion 3.1\n-----\n\n* Added functions failoverStream and failoverProcessor
  to model\nservers with failures (temporary cancellation of the process with the\nfurther
  repairing of the server).\n\n* Added functions joinStream and joinProcessor to simplify
  the\nmodeling of servers.\n\n* Checking the argument, i.e. time period, in the holdProcess\nfunction.
  It must not be negative.\n\n* The taskProcess computation behaves exactly like the
  background\n  process, i.e. now its cancellation leads to immediate cancelling the
  background\n  process too.\n\n* Functions setStateActivation, setStateDeactivation
  and\n  setStateTransition are redefined as the Event computations instead\n  of
  Simulation computations.\n\n* Refactored and simplified module Results.\n"
basic-deps:
  base: ! '>=4.5.0.0 && <6'
  array: ! '>=0.3.0.0'
  containers: ! '>=0.4.0.0'
  mtl: ! '>=2.1.1'
  random: ! '>=1.0.0.3'
  vector: ! '>=0.10.0.1'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.5'
- '0.5.1'
- '0.5.4'
- '0.6'
- '0.6.1'
- '0.7'
- '1.0'
- '1.1'
- '1.2'
- '1.2.1'
- '1.3'
- '1.4'
- '2.0'
- '2.1'
- '3.0'
- '3.1'
- '4.0'
- '4.0.1'
latest: '4.0.1'
description-type: haddock
description: ! 'Aivika is a multi-paradigm simulation library with a strong emphasis

  on Discrete Event Simulation (DES) and System Dynamics (SD).


  The library has the following features:


  * allows defining recursive stochastic differential equations of

  System Dynamics (unordered as in maths via the recursive do-notation);


  * supports the event-driven paradigm of DES as a basic core for

  implementing other paradigms;


  * supports extensively the process-oriented paradigm of DES

  with an ability to resume, suspend and cancel

  the discontinuous processes;


  * allows working with the resources based on specified queue strategies

  (FCFS\/FIFO, LCFS\/LIFO, SIRO, static priorities and so on);


  * allows customizing the infinite and finite queues based on strategies too;


  * allows defining a queue network based on infinite streams of data

  and their processors, where we can define a complex enough

  behaviour just in a few lines of code;


  * allows simulating circuits with recursive links and delays;


  * supports the activity-oriented paradigm of DES;


  * supports the basic constructs for the agent-based modeling;


  * allows creating combined discrete-continuous models as all parts

  of the library are well integrated and this is reflected directly

  in the type system;


  * the arrays of simulation variables are inherently supported;


  * supports the Monte-Carlo simulation;


  * the simulation model can depend on external parameters;


  * uses extensively signals for notification;


  * allows gathering statistics in time points;


  * hides technical details in high-level simulation computations

  (monads and arrows).


  Aivika itself is a light-weight engine with minimal dependencies.

  However, it has additional packages Aivika Experiment [1] and

  Aivika Experiment Chart [2] that offer the following features:


  * automating the simulation experiments;


  * saving the results in CSV files;


  * plotting the deviation chart by rule 3-sigma, histogram,

  time series, XY chart;


  * collecting the summary of statistical data;


  * parallel execution of the Monte-Carlo simulation;


  * have an extensible architecture.


  All three libraries were tested on Linux, Windows and OS X.


  The PDF documentation is available on the Aivika Wiki [3] website.


  \[1] <http://hackage.haskell.org/package/aivika-experiment>


  \[2] <http://hackage.haskell.org/package/aivika-experiment-chart>


  \[3] <https://github.com/dsorokin/aivika/wiki>


  P.S. Aivika is actually a genuine female Mari name which is pronounced

  with stress on the last syllable.'
