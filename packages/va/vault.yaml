changelog-type: markdown
hash: 92af986516c2f94174a919ba7e67c696d4764a04a9bffe5b46dc0eb20487b565
test-bench-deps: {}
synopsis: a persistent store for values of arbitrary types
changelog: ! '## Changelog for the `vault` package


  **0.3.0.4** — Bump upper version bound for the `base` dependency.


  **0.3.0.3** — Bump upper version bound for the `base` dependency.


  **0.3.0.2** — Fix tarball.


  **0.3.0.1** — Use CPP to reduce code duplication.


  **0.3.0.0**


  * Split modules into Lazy and Strict variants, no default choice.

  * Add Hashable instance to `Data.Unique.Really` for all implementations.

'
basic-deps:
  base: ! '>=4.5 && <4.9'
  unordered-containers: ! '>=0.2.3.0 && <0.3'
  containers: ! '>=0.4 && <0.6'
  hashable: ! '>=1.1.2.5 && <1.3'
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.2.0.1'
- '0.2.0.3'
- '0.2.0.4'
- '0.3.0.0'
- '0.3.0.1'
- '0.3.0.2'
- '0.3.0.3'
- '0.3.0.4'
latest: '0.3.0.4'
description-type: markdown
description: ! "[![Build Status](https://travis-ci.org/HeinrichApfelmus/vault.png)](https://travis-ci.org/HeinrichApfelmus/vault)\n\n\n*Vault*
  is a tiny library that provides a single data structure called *vault*.\n\nA *vault*
  is a type-safe, persistent storage for values of arbitrary types. Like `IORef`,
  I want to be able to store values of any type in it, but unlike `IORef`, I want
  the storage space to behave like a persistent, first-class data structure, as appropriate
  for a purely functional language.\n\nIt is analogous to a bank vault, where you
  can access different bank boxes with different keys; hence the name.\n\nIn other
  words, a vault is an abstract data type with the following basic signature\n\n    data
  Key a\n    data Vault\n\n    newKey :: IO (Key a)\n    empty  :: Vault\n    lookup
  :: Key a -> Vault -> Maybe a\n    insert :: Key a -> a -> Vault -> Vault\n    delete
  :: Key a -> Vault -> Vault\n\nA few common functions for finite maps, like `adjust`
  and `union`, are provided as well.\n\n\nThis library was created thanks to the feedback
  on my blog post [Vault - a persistent store for values of arbitrary types][1].\n\n
  \ [1]: http://apfelmus.nfshost.com/blog/2011/09/04-vault.html\n\n\nInstallation\n============\nThe
  whole thing is [available on hackage][hackage], so you just have to type\n\n    cabal
  update\n    cabal install vault\n\n  [hackage]: http://hackage.haskell.org/package/vault\n\nFeedback\n========\nUse
  the [issue tracker][2] or send an [email to the maintainer][3].\n\n  [2]: https://github.com/HeinrichApfelmus/vault/issues\n
  \ [3]: mailto:apfelmus@quantentunnel.de\n\n\n\n\n"
