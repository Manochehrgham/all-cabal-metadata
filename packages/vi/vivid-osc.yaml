homepage: ''
changelog-type: ''
hash: 98b59515ebccae6b1a44415baa594519035b4f71d5a49f1a3ebd541e8531273e
test-bench-deps:
  cereal: -any
  microspec: -any
  bytestring: -any
  base: -any
  time: -any
  vivid-osc: -any
maintainer: Tom Murphy
synopsis: Open Sound Control encode/decode
changelog: ''
basic-deps:
  cereal: -any
  bytestring: -any
  base: ! '>3 && <5'
  time: ! '>=1.2'
  binary: -any
all-versions:
- '0.3.0.0'
author: Tom Murphy
latest: '0.3.0.0'
description-type: haddock
description: ! 'A small, simple, and well-tested implementation of the Open Sound
  Control

  message format.


  Example usage:


  @

  &#123;&#45;\# LANGUAGE OverloadedStrings \#&#45;&#125;

  @


  > import Network.Socket

  > import Network.Socket.ByteString as SB

  >

  > import Vivid.OSC

  >

  > main = do

  >    -- Boring Network.Socket setup:

  >    (a:_) <- getAddrInfo Nothing (Just "127.0.0.1") (Just "57120")

  >    s <- socket (addrFamily a) Datagram defaultProtocol

  >    connect s (addrAddress a)

  >

  >    -- The interesting part:

  >    SB.send s $ encodeOSC $

  >       OSC "/play2" [OSC_S "cps", OSC_I 1, OSC_S "s", OSC_S "bd"]'
license-name: GPL
