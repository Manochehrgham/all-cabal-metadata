homepage: ''
changelog-type: ''
hash: 47edcbab49d1dfc016a915591e6483710c5da75f1fdec42b01b7dc996e280b9d
test-bench-deps: {}
maintainer: Tom Murphy
synopsis: Sound synthesis with SuperCollider
changelog: ''
basic-deps:
  bytestring: ! '>0.9.1.8 && <0.11'
  MonadRandom: ! '>=0.1 && <0.5'
  split: ! '>=0.2.0.0 && <0.3'
  stm: ! '>=2.2.0.1 && <2.5'
  base: ! '>3 && <5'
  time: ! '>=1.2 && <1.7'
  filepath: ! '>=1.0 && <1.5'
  process: ! '>=1.0.1.4 && <1.5'
  network: ! '>=2.3 && <2.7'
  random-shuffle: ! '>=0.0.3 && <0.1'
  containers: ! '>0.4.0.0 && <0.6'
  binary: ! '>0.5.0.2 && <0.9'
  mtl: ! '>=2.0.0.0 && <2.3'
  hashable: ! '>=1.2.0.6 && <1.3'
  transformers: ! '>=0.2.0.0 && <0.6'
  random: (>=1.0.0.3 && <=1.0.1.1) || (>=1.1 && <1.2)
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.2.0.0'
author: Tom Murphy
latest: '0.2.0.0'
description-type: haddock
description: ! 'Music and sound synthesis with SuperCollider.


  Example usage:


  @

  &#123;&#45;\# LANGUAGE DataKinds \#&#45;&#125;

  @

  > import Vivid

  >

  > theSound = sd (0 ::I "note") $ do

  >    wobble <- sinOsc (freq_ 5) ? KR ~* 10 ~+ 10

  >    s <- 0.1 ~* sinOsc (freq_ $ midiCPS (V::V "note") ~+ wobble)

  >    out 0 [s,s]

  >

  > playSong = do

  >    fork $ do

  >       s0 <- synth theSound (36 ::I "note")

  >       wait 1

  >       free s0

  >    s1 <- synth theSound (60 ::I "note")

  >    forM_ [62,66,64] $ \note -> do

  >       wait (1/4)

  >       set s1 (note ::I "note")

  >    wait (1/4)

  >    free s1

  >

  > main = do

  >    putStrLn "Simplest:"

  >    playSong

  >

  >    putStrLn "With precise timing:"

  >    doScheduledIn 0.1 playSong

  >    wait 1

  >

  >    putStrLn "Written to a file, non-realtime synthesis:"

  >    putStrLn "(Need to quit the running server for NRT)"

  >    quitSCServer

  >    writeNRT "/tmp/song.wav" playSong'
license-name: GPL
