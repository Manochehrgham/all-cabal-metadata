homepage: https://github.com/GetShopTV/smsaero
changelog-type: markdown
hash: acd236c3800739e2728440903a8b2c78b496a5a35370d8d43d1ec6145255b51a
test-bench-deps: {}
maintainer: nickolay@getshoptv.com
synopsis: SMSAero API and HTTP client based on servant library.
changelog: ! '0.4.1

  ---

  * Add `Eq` instances


  0.4

  ---

  * Rename `StatusResponse` to `MessageStatus` and add instance Read

  * Change `MessageId` representation to `Int64`

  * Change `Phone` representation to `Int64`


  0.3

  ---

  * Add `MessageBody` newtype for `"text"` query parameter

  * Add instances for automatic API documentation via servant-docs

  * Add filter for Pandoc to generate documentation in many formats

  * Fix some `ToJSON` instances to match `FromJSON`

  * Add `ToJSON`/`FromJSON` instances for `SMSAeroAuth`


  0.2

  ---

  * Structure haddock documentation

  * Add missing `ToJSON` and `FromText` instances


  0.1.1

  -----

  * Add support for GHC 7.8

'
basic-deps:
  either: -any
  servant-docs: -any
  base: ! '>=4.7 && <5'
  time: -any
  servant-client: -any
  text: -any
  servant: ==0.4.*
  lens: -any
  aeson: -any
all-versions:
- '0.1'
- '0.1.1'
- '0.2'
- '0.3'
- '0.4'
- '0.4.1'
author: Nickolay Kudasov
latest: '0.4.1'
description-type: markdown
description: ! '# smsaero


  [![Hackage](https://img.shields.io/hackage/v/smsaero.svg)](http://hackage.haskell.org/package/smsaero)

  [![Build Status](https://travis-ci.org/GetShopTV/smsaero.svg?branch=master)](https://travis-ci.org/GetShopTV/smsaero)


  SMSAero API and HTTP client based on servant library.


  ## Documentation


  Library documentation is available [on Hackage](http://hackage.haskell.org/package/smsaero).


  The original SMSAero API documentation (in Russian) is available [here](http://smsaero.ru/api/description).


  API documentation in English can be generated using [`pandoc`](http://pandoc.org):


  ```

  $ stack exec pandoc --filter=docs/api-filter.hs -o docs/api.md api-intro.md

  ```


  Note that you can generate this documentation in any format that `pandoc` supports
  (e.g. HTML, LaTeX, Markdown, etc.).


  ## Usage


  Import `SMSAero` and `Control.Monad.Trans.Either` module to interact with SMSAero:


  ```

  >>> :s -XOverloadedStrings

  >>> import SMSAero

  >>> import Control.Monad.Trans.Either

  >>> let credentials = SMSAeroAuth "user@example.com" "md5-password-hash"

  >>> runEitherT $ smsAeroBalance credentials

  Right (ResponseOK (BalanceResponse 10.0))

  ```


  ## Contributing


  Contributions and bug reports are welcome!


  *GetShopTV Team*

'
license-name: BSD3
