changelog-type: ''
hash: ad294ebcd390005a243fe6d2203ec51f7ca2ab87a7f2fa7e7e080f0d416cb6a8
test-bench-deps:
  HTF: -any
  Cabal: ! '>=1.8'
  base: ! '>=4.3 && <5'
  filepath: -any
  process: -any
  HUnit: -any
  directory: -any
synopsis: Grammatical Framework
changelog: ''
basic-deps:
  bytestring: -any
  unix: -any
  haskeline: -any
  base: ! '>=4.3 && <4.8'
  time: <1.5
  json: -any
  httpd-shed: ! '>=0.4.0.2'
  filepath: -any
  process: -any
  network: ! '>=2.3 && <2.6'
  lifted-base: -any
  array: -any
  time-compat: -any
  containers: -any
  utf8-string: -any
  old-locale: -any
  cgi: -any
  mtl: -any
  random: -any
  parallel: ! '>=3'
  pretty: -any
  fst: -any
  gf: -any
  directory: -any
all-versions:
- '3.1.6'
- '3.1.6.1'
- '3.1.6.2'
- '3.2'
- '3.2.9'
- '3.3'
- '3.3.3'
- '3.4'
- '3.5'
- '3.6'
latest: '3.6'
description-type: text
description: ! "DESCRIPTION\n\nThe Grammatical Framework (=GF) is a grammar formalism
  based on type theory. \nIt consists of\n\n    * a special-purpose programming language\n
  \   * a compiler of the language\n    * a generic grammar processor \n\nThe compiler
  reads GF grammars from user-provided files, and the \ngeneric grammar processor
  performs various tasks with the grammars:\n\n    * generation\n    * parsing\n    *
  translation\n    * type checking\n    * computation\n    * paraphrasing\n    * random
  generation\n    * syntax editing \n\nGF particularly addresses four aspects of grammars:\n\n
  \   * multilinguality (parallel grammars for different languages)\n    * semantics
  (semantic conditions of well-formedness, semantic \n      properties of expressions)
  \n    * grammar engineering (modularity, abstractions, libraries)\n    * embeddability
  in programs written in other languages (C,C++,\n      Haskell, Java, JavaScript)\n\n\nCOMPILATION
  and INSTALLATION of source distribution:\nSee download/index.html for installation
  instructions.\n(More details can be found in doc/gf-developers.html.)\n"
