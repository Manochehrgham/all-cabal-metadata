homepage: https://github.com/dramforever/each#readme
changelog-type: ''
hash: c30b6cf74ed3de7059069144f7ad37b276333d2f0cf9a401a4e9fe248dc0c2ed
test-bench-deps:
  base: ! '>=4.9.0.0'
  hspec: ! '>=2.2.4'
  each: ! '>=0.1.0.0'
  QuickCheck: ! '>=2.8.2'
maintainer: dramforever@live.com
synopsis: Template Haskell library for writing monadic expressions more easily
changelog: ''
basic-deps:
  base: ! '>=4.9 && <5'
  containers: ! '>=0.5.7.1'
  mtl: ! '>=2.2.1'
  template-haskell: ! '>=2.11.0.0'
all-versions:
- '0.1.0.0'
author: dramforever
latest: '0.1.0.0'
description-type: markdown
description: ! "# each\n\nInspired by [the Scala library of the same name](https://github.com/ThoughtWorksInc/each),\neach
  is a Template Haskell library that transforms expressions containing\ninvocations
  of impure subexpressions into calls to `fmap`, `<*>`, `join`,\netc. Just mark your
  impure subexpressions with `bind` or `~!` and they will be\ncalled appropriately,
  as in this small demo:\n\n    ghci> $(each [| \"Hello, \" ++ (~! getLine) |])\n
  \   World              <--[keyboard input]\n    \"Hello, World\"\n\nIn this case,
  the code is translated into `fmap ((++) \"Hello, \") getLine`\n\nWe currently have
  support for\n\n* Normal function application like `f x y`\n* Infix operator application
  like `x + y`, including sections like `(+ y)`\n* Type signatures like `x :: t`\n\nSupport
  for more constructs is coming.\n\n## More demos\n\nA more detailed demo:\n\n    ghci>
  :{\n        | $(each [|\n        |   \"Hey it works\"\n        |   ++ show (length
  $\n        |     \"something\"\n        |     ++ (~! readFile \"/etc/issue\")\n
  \       |     ++ (~! readFile \"/etc/issue.net\"))\n        | |])\n        | :}\n
  \   \"Hey it works64\"\n\nNested binds also work as expected.\n\n    ghci> prompt
  str = putStrLn str *> getLine\n    ghci> $(each [| \"Nah just \" ++ (~! prompt (\"What's
  \" ++ bind getLine ++ \"?\")) |])\n    something          <--[keyboard input]\n
  \   What's something?\n    nothing            <--[keyboard input]\n    \"Nah just
  nothing\"\n"
license-name: BSD3
