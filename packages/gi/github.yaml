changelog-type: ''
hash: f281fdeebbbce672a3f2e279157d13b49223b57057a4f23701cb7eba25e18a81
test-bench-deps:
  bytestring: -any
  case-insensitive: ! '>=0.4.0.4'
  base: ! '>=4.0 && <5.0'
  time: -any
  unordered-containers: ! '>=0.2 && <0.3'
  hspec: -any
  text: -any
  network: -any
  conduit: -any
  data-default: -any
  containers: -any
  old-locale: -any
  hashable: -any
  failure: -any
  byteable: ! '>=0.1.0'
  HTTP: -any
  base16-bytestring: ! '>=0.1.1.6'
  attoparsec: ! '>=0.10.3.0'
  http-conduit: ! '>=1.8'
  http-types: -any
  aeson: ! '>=0.6.1.0'
  vector: -any
  cryptohash: ! '>=0.11'
synopsis: Access to the Github API, v3.
changelog: ''
basic-deps:
  bytestring: -any
  case-insensitive: ! '>=0.4.0.4'
  base: ! '>=4.0 && <5.0'
  time: -any
  unordered-containers: ! '>=0.2 && <0.3'
  text: -any
  network: -any
  conduit: -any
  data-default: -any
  containers: -any
  old-locale: -any
  hashable: -any
  failure: -any
  byteable: ! '>=0.1.0'
  HTTP: -any
  base16-bytestring: ! '>=0.1.1.6'
  attoparsec: ! '>=0.10.3.0'
  http-conduit: ! '>=1.8'
  http-types: -any
  aeson: ! '>=0.6.1.0'
  vector: -any
  cryptohash: ! '>=0.11'
all-versions:
- '0.1'
- '0.1.1'
- '0.1.2'
- '0.2.0'
- '0.2.1'
- '0.3.0'
- '0.4.0'
- '0.4.1'
- '0.5.0'
- '0.6.0'
- '0.7.0'
- '0.7.1'
- '0.7.2'
- '0.7.3'
- '0.7.4'
- '0.8'
- '0.9'
- '0.10.0'
- '0.11.0'
- '0.11.1'
- '0.12'
- '0.13'
- '0.13.1'
- '0.13.2'
latest: '0.13.2'
description-type: markdown
description: ! "Github\n------\n\nThe Github API v3 for Haskell.\n\nSome functions
  are missing; these are functions where the Github API did\nnot work as expected.
  The full Github API is in beta and constantly\nimproving.\n\nInstallation\n============\n\nIn
  your project's cabal file:\n\n    -- Packages needed in order to build this package.\n
  \   Build-depends:       github\n\nOr from the command line:\n\n    cabal install
  github\n\nExample Usage\n=============\n\nSee the samples in the\n[samples/](https://github.com/fpco/github/tree/master/samples)
  directory.\n\nDocumentation\n=============\n\nFor details see the reference documentation
  on Hackage.\n\nEach module lines up with the hierarchy of\n[documentation from the
  Github API](http://developer.github.com/v3/).\n\nEach function has a sample written
  for it.\n\nAll functions produce an `IO (Either Error a)`, where `a` is the actual
  thing\nyou want. You must call the function using IO goodness, then dispatch on
  the\npossible error message. Here's an example from the samples:\n\n    import qualified
  Github.Users.Followers as Github\n    import Data.List (intercalate)\n\n    main
  = do\n      possibleUsers <- Github.usersFollowing \"mike-burns\"\n      putStrLn
  $ either ((\"Error: \"++) . show)\n                        (intercalate \"\\n\"
  . map formatUser)\n                        possibleUsers\n\n    formatUser = Github.githubOwnerLogin\n\nContributions\n=============\n\nPlease
  see\n[CONTRIBUTING.md](https://github.com/fpco/github/blob/master/CONTRIBUTING.md)\nfor
  details on how you can help.\n\nCopyright\n=========\n\nCopyright 2011, 2012 Mike
  Burns.\nCopyright 2013-2014 John Wiegley.\n\nAvailable under the BSD 3-clause license.\n"
