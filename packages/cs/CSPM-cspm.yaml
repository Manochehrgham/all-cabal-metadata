homepage: ''
changelog-type: ''
hash: 678736cd7491f2a73230ce253b31daaf6092fd8cd453b5361f0ae0c688dc6cde
test-bench-deps: {}
maintainer: Marc Fontaine <fontaine@cs.uni-duesseldorf.de>
synopsis: cspm command line tool for analyzing CSPM specifications.
changelog: ''
basic-deps:
  base: ! '>=4.0 && <5.0'
  prettyclass: ==1.0.*
  syb: ==0.4.*
  CSPM-CoreLanguage: ==0.3.*
  xml: ==1.3.*
  containers: ==0.5.*
  CSPM-ToProlog: ==0.5.*
  cmdargs: ! '>=0.10.0 && <0.11'
  CSPM-FiringRules: ==0.4.*
  CSPM-Interpreter: ==0.7.*
  transformers: ! '>=0.3'
  parallel: ==3.2.*
  hslua: ! '>=0.3.12 && <0.4'
  CSPM-Frontend: ==0.10.*
  pretty: ==1.1.*
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.4.0.0'
- '0.4.4.0'
- '0.4.4.1'
- '0.5.6.0'
- '0.6.0.4'
- '0.7.0.0'
- '0.8.0.0'
author: Marc Fontaine
latest: '0.8.0.0'
description-type: haddock
description: ! 'cspm is a small command line tool for analyzing CSPM specifications.

  It supports serveral modes of operation.

  For example as:


  * ''cspm --help''      -> print a help message.


  * ''cspm eval ''3+4''''  -> evaluate an expression.


  * ''cspm trace spec.csp'' -> interactively trace a process.


  * ''cspm assert spec.csp'' -> check the assertions of a specification (only some
  assertions are supported).


  * ''cspm lts spec.csp --dotOut spec.csp.dot'' -> compute the labeled transition
  system of a process and dump it as dot-file.


  * ''cspm lts spec.csp --fdrOut spec.csp.fdr''   -> compute the LTS

  and dump it a fdr script suitable for refinement checking.


  cspm is not a full featured FDR replacement.

  The main purpose of cspm is to show how the different CSPM-packages work together.

  LTS computation can demonstrate nice speed-ups on multi-core machines.

  Try for example ''cspm +RTS -N7 -RTS fdr spec.csp'' to use 7 cores.'
license-name: BSD3
