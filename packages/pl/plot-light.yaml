homepage: https://github.com/ocramz/plot-light
changelog-type: ''
hash: 3903ec42b24e1b5fb8d276e6a2569ac484dce956d192b3a09203e1ac6ed7d758
test-bench-deps:
  plot-light: -any
  base: -any
  hspec: -any
  QuickCheck: -any
maintainer: zocca marco gmail
synopsis: A lightweight plotting library, exporting to SVG
changelog: ''
basic-deps:
  plot-light: -any
  blaze-svg: -any
  base: ! '>=4.7 && <5'
  time: -any
  palette: -any
  hspec: -any
  text: -any
  attoparsec-time: -any
  attoparsec: -any
  colour: -any
  scientific: -any
  QuickCheck: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
author: Marco Zocca
latest: '0.1.0.4'
description-type: markdown
description: ! '# plot-light


  [![Build Status](https://travis-ci.org/ocramz/plot-light.png)](https://travis-ci.org/ocramz/plot-light)


  A lightweight plotting library, exporting to SVG



  ## Usage


  Import the user-facing module: `Graphics.Rendering.Plot.Light.Internal`


  `plot-light` provides functionality for rendering vector graphics as SVG.

  It is geared in particular towards scientific plotting, and it is termed "light"
  because it only requires native Haskell dependencies.


  It builds upon `blaze-svg` by adding type-safe combinators, geometry primitives
  and functionality


  To use this project you just need to import this module qualified (to avoid name
  clashes with any other modules you might have loaded on the side), for example as
  follows :


  @import Graphics.Rendering.Plot.Light as P@'
license-name: BSD3
