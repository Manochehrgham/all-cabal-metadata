homepage: http://github.com/snoyberg/yaml/
changelog-type: markdown
hash: 826ecabf189dc1434b988a3dcea45133b80c127827298c97c0b1059dcc87eff0
test-bench-deps:
  bytestring: ! '>=0.9.1.4'
  base: ! '>=4 && <5'
  unordered-containers: -any
  hspec: ! '>=1.3'
  text: -any
  conduit: -any
  HUnit: -any
  mockery: -any
  base-compat: -any
  transformers: ! '>=0.1'
  aeson-qq: -any
  resourcet: -any
  aeson: ! '>=0.7'
  yaml: -any
  vector: -any
maintainer: Michael Snoyman <michael@snoyman.com>
synopsis: Support for parsing and rendering YAML documents.
changelog: ! '## 0.8.17.2


  * Fix pretty-printing order of UnexpectedEvent''s fields (fixes [#84](https://github.com/snoyberg/yaml/issues/84))
  [#85](https://github.com/snoyberg/yaml/pull/85)


  ## 0.8.17.1


  * Avoid bug in Cabal [#83](https://github.com/snoyberg/yaml/pull/83)


  ## 0.8.17


  * `loadYamlSettingsArgs`


  ## 0.8.16.1


  * Slight doc improvement


  ## 0.8.16


  Add env variable parsing. `loadYamlSettings` can read config values from the environment
  with Yaml that specifies an env var.

  The syntax is


  `var: _env:ENV_VAR:default`


  ## 0.8.15.3


  * Give a warning when compiling with GHCJS


  ## 0.8.15.2


  * Canonicalise Monad instances [#76](https://github.com/snoyberg/yaml/pull/76)


  ## 0.8.15.1


  * Compile with aeson below 0.7 [#70](https://github.com/snoyberg/yaml/pull/70)


  ## 0.8.15


  * Parse `Scientific` directly, avoiding loss in precision. [#68](https://github.com/snoyberg/yaml/pull/68)


  ## 0.8.14


  * Pretty print improvements for exceptions [#67](https://github.com/snoyberg/yaml/pull/67)


  ## 0.8.13


  * Pretty module [#66](https://github.com/snoyberg/yaml/pull/66)


  ## 0.8.12


  * Proper handling of `String "+123"` [#64](https://github.com/snoyberg/yaml/issues/64)


  ## 0.8.11


  * Function to print prettier parse exceptions [#59](https://github.com/snoyberg/yaml/pull/59)


  ## 0.8.10


  Add the Data.Yaml.Include module

'
basic-deps:
  bytestring: ! '>=0.9.1.4'
  base: ==4.*
  unordered-containers: -any
  text: -any
  enclosed-exceptions: -any
  filepath: -any
  conduit: ! '>=1.1.0 && <1.3'
  semigroups: -any
  containers: -any
  attoparsec: ! '>=0.11.3.0'
  transformers: ! '>=0.1'
  scientific: -any
  resourcet: ! '>=0.3 && <1.2'
  aeson: ! '>=0.7'
  yaml: -any
  vector: -any
  directory: -any
all-versions:
- '0.0.0'
- '0.0.1'
- '0.0.2'
- '0.0.3'
- '0.0.4'
- '0.2.0'
- '0.2.1'
- '0.3.0'
- '0.4.0'
- '0.4.1'
- '0.4.1.1'
- '0.4.1.2'
- '0.5.0'
- '0.5.0.1'
- '0.5.1'
- '0.5.1.1'
- '0.5.1.2'
- '0.5.2'
- '0.6.0'
- '0.6.1'
- '0.7.0'
- '0.7.0.1'
- '0.7.0.2'
- '0.7.0.3'
- '0.7.0.4'
- '0.8.0'
- '0.8.0.1'
- '0.8.0.2'
- '0.8.1'
- '0.8.1.1'
- '0.8.1.2'
- '0.8.2'
- '0.8.2.1'
- '0.8.2.2'
- '0.8.2.3'
- '0.8.2.4'
- '0.8.3'
- '0.8.4'
- '0.8.4.1'
- '0.8.5'
- '0.8.5.1'
- '0.8.5.2'
- '0.8.5.3'
- '0.8.5.4'
- '0.8.6'
- '0.8.6.1'
- '0.8.6.2'
- '0.8.7'
- '0.8.7.1'
- '0.8.7.2'
- '0.8.8'
- '0.8.8.1'
- '0.8.8.2'
- '0.8.8.3'
- '0.8.8.4'
- '0.8.9'
- '0.8.9.1'
- '0.8.9.2'
- '0.8.9.3'
- '0.8.9.4'
- '0.8.10'
- '0.8.10.1'
- '0.8.11'
- '0.8.12'
- '0.8.13'
- '0.8.14'
- '0.8.15.1'
- '0.8.15.2'
- '0.8.15.3'
- '0.8.16'
- '0.8.17'
- '0.8.17.1'
- '0.8.17.2'
author: Michael Snoyman <michael@snoyman.com>, Anton Ageev <antage@gmail.com>,Kirill
  Simonov
latest: '0.8.17.2'
description-type: markdown
description: ! '## yaml


  Provides support for parsing and emitting Yaml documents.


  This package includes the [full libyaml C library version 0.1.5 by Kirill Simonov](http://pyyaml.org/wiki/LibYAML)
  in the package so you don''t need to worry about any non-Haskell dependencies.


  The package is broken down into two primary modules. `Data.Yaml` provides a high-level
  interface based around the JSON datatypes provided by the `aeson` package. `Text.Libyaml`
  provides a lower-level, streaming interface. For most users, `Data.Yaml` is recommended.


  ### Examples


  Usage examples can be found in the `Data.Yaml` documentation or in the [examples](./examples)
  directory.


  ### Additional modules


  * `Data.Yaml.Include` supports adding `!include` directives to your YAML files.

  * `Data.Yaml.Builder` and `Data.Yaml.Parser` allow more fine-grained control of
  parsing an rendering, as opposed to just using the aeson typeclass and datatype
  system for parsing and rendering.

  * `Data.Yaml.Aeson` is currently a re-export of `Data.Yaml` to explicitly choose
  to use the aeson-compatible API.

'
license-name: BSD3
