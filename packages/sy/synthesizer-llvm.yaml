changelog-type: ''
hash: 92bdee36bdfb143b45ecad25995b1ba5b4d837799ffaec380e3d1edfa3c5270d
synopsis: Efficient signal processing using runtime compilation
changelog: ''
all-versions:
- '0.2'
- '0.2.0.1'
- '0.3'
- '0.5'
- '0.5.0.1'
- '0.5.0.2'
- '0.6'
- '0.7'
- '0.7.0.1'
latest: '0.7.0.1'
description-type: haddock
description: ! 'Efficient signal processing

  using runtime compilation and vector instructions.

  It uses LLVM library, thus it is not bound to a specific CPU.

  There are some example executables that you can build

  with Cabal flag @buildExamples@:


  * @synthi-llvm-render@:

  Render a MIDI file into an audio file

  using some arbitrary instruments.


  * @synthi-llvm-alsa@:

  A realtime software synthesizer

  that receives MIDI events via ALSA

  and in response plays tones via ALSA.

  If you have no ALSA (or Linux at all),

  then you can disable this example with @-f-alsa@.


  * @synthi-llvm-jack@:

  The same realtime software synthesizer using JACK.

  If you have no JACK,

  then you can disable this example with @-f-jack@.


  * @synthi-llvm-example@:

  Not very useful as an executable.

  You should better load the according module into GHCi

  and play around with it.

  The module Synthesizer.LLVM.LAC2011

  should be especially useful for an introduction.'
