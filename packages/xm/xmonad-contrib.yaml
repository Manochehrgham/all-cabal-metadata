homepage: http://xmonad.org/
changelog-type: markdown
hash: 8a17b7fe46dc9d7435538a0db3997bcb2a125e71923ecd401024d84081a41807
test-bench-deps: {}
maintainer: xmonad@haskell.org
synopsis: Third party extensions for xmonad
changelog: ! "# Change Log / Release Notes\n\n## 0.12 (December 14, 2015)\n\n### Breaking
  Changes\n\n  * `XMonad.Actions.UpdatePointer.updatePointer` arguments were\n    changed.
  This allows including aspects of both of the\n    `TowardsCentre` and `Relative`
  methods. To keep the same behavior,\n    replace the entry in the left column with
  the entry on the right:\n\n    | < 0.12                              |   >= 0.12
  \                       |\n    |-------------------------------------|----------------------------------|\n
  \   | `updatePointer Nearest`             | `updatePointer (0.5, 0.5) (1,1)` |\n
  \   | `updatePointer (Relative x y)`      | `updatePointer (x,y) (1,1)`      |\n
  \   | `updatePointer (TowardsCentre x y)` | `updatePointer (0.5,0.5) (x,y)`  |\n\n###
  New Modules\n\n  * `XMonad.Actions.AfterDrag`\n\n    Perform an action after the
  current mouse drag is completed.\n\n  * `XMonad.Actions.DynamicProjects`\n\n    Imbues
  workspaces with additional features so they can be treated\n    as individual project
  areas.\n\n  * `XMonad.Actions.LinkWorkspaces`\n\n    Provides bindings to add and
  delete links between workspaces. It\n    is aimed at providing useful links between
  workspaces in a\n    multihead setup. Linked workspaces are viewed at the same time.\n\n
  \ * `XMonad.Config.Bepo`\n\n    This module fixes some of the keybindings for the
  francophone\n    among you who use a BEPO keyboard layout. Based on\n    `XMonad.Config.Azerty`\n\n
  \ * `XMonad.Config.Dmwit`\n\n    Daniel Wagner's configuration.\n\n  * `XMonad.Config.Mate`\n\n
  \   This module provides a config suitable for use with the MATE\n    desktop environment.\n\n
  \ * `XMonad.Config.Prime`\n\n    A draft of a brand new config syntax for xmonad.\n\n
  \ * `XMonad.Hooks.DynamicProperty`\n\n    Module to apply a `ManageHook` to an already-mapped
  window when a\n    property changes. This would commonly be used to match browser\n
  \   windows by title, since the final title will only be set after (a)\n    the
  window is mapped, (b) its document has been loaded, (c) all\n    load-time scripts
  have run.\n\n  * `XMonad.Hooks.ManageDebug`\n\n    A `manageHook` and associated
  `logHook` for debugging `ManageHook`s.\n    Simplest usage: wrap your xmonad config
  in the `debugManageHook`\n    combinator.  Or use `debugManageHookOn` for a triggerable
  version,\n    specifying the triggering key sequence in `XMonad.Util.EZConfig`\n
  \   syntax. Or use the individual hooks in whatever way you see fit.\n\n  * `XMonad.Hooks.WallpaperSetter`\n\n
  \   Log hook which changes the wallpapers depending on visible\n    workspaces.\n\n
  \ * `XMonad.Hooks.WorkspaceHistory`\n\n    Keeps track of workspace viewing order.\n\n
  \ * `XMonad.Layout.AvoidFloats`\n\n    Find a maximum empty rectangle around floating
  windows and use\n    that area to display non-floating windows.\n\n  * `XMonad.Layout.BinarySpacePartition`\n\n
  \   Layout where new windows will split the focused window in half,\n    based off
  of BSPWM.\n\n  * `XMonad.Layout.Dwindle`\n\n    Three layouts: The first, `Spiral`,
  is a reimplementation of\n    `XMonad.Layout.Spiral.spiral` with, at least to me,
  more intuitive\n    semantics.  The second, `Dwindle`, is inspired by a similar
  layout\n    in awesome and produces the same sequence of decreasing window\n    sizes
  as Spiral but pushes the smallest windows into a screen\n    corner rather than
  the centre.  The third, `Squeeze` arranges all\n    windows in one row or in one
  column, with geometrically decreasing\n    sizes.\n\n  * `XMonad.Layout.Hidden`\n\n
  \   Similar to `XMonad.Layout.Minimize` but completely removes windows\n    from
  the window set so `XMonad.Layout.BoringWindows` isn't\n    necessary.  Perfect companion
  to `XMonad.Layout.BinarySpacePartition`\n    since it can be used to move windows
  to another part of the BSP tree.\n\n  * `XMonad.Layout.IfMax`\n\n    Provides `IfMax`
  layout, which will run one layout if there are\n    maximum `N` windows on workspace,
  and another layout, when number\n    of windows is greater than `N`.\n\n  * `XMonad.Layout.PerScreen`\n\n
  \   Configure layouts based on the width of your screen; use your\n    favorite
  multi-column layout for wide screens and a full-screen\n    layout for small ones.\n\n
  \ * `XMonad.Layout.Stoppable`\n\n    This module implements a special kind of layout
  modifier, which when\n    applied to a layout, causes xmonad to stop all non-visible
  processes.\n    In a way, this is a sledge-hammer for applications that drain power.\n
  \   For example, given a web browser on a stoppable workspace, once the\n    workspace
  is hidden the web browser will be stopped.\n\n  * `XMonad.Prompt.ConfirmPrompt`\n\n
  \   A module for setting up simple confirmation prompts for\n    keybindings.\n\n
  \ * `XMonad.Prompt.Pass`\n\n    This module provides 3 `XMonad.Prompt`s to ease
  passwords\n    manipulation (generate, read, remove) via [pass][].\n\n  * `XMonad.Util.RemoteWindows`\n\n
  \   This module implements a proper way of finding out whether the\n    window is
  remote or local.\n\n  * `XMonad.Util.SpawnNamedPipe`\n\n    A module for spawning
  a pipe whose `Handle` lives in the xmonad state.\n\n  * `XMonad.Util.WindowState`\n\n
  \   Functions for saving per-window data.\n\n### Miscellaneous Changes\n\n  * Fix
  issue #9: `XMonad.Prompt.Shell` `searchPredicate` is ignored,\n    defaults to `isPrefixOf`\n\n
  \ * Fix moveHistory when alwaysHighlight is enabled\n\n  * `XMonad.Actions.DynamicWorkspaceGroups`
  now exports `addRawWSGroup`\n\n  * Side tabs were added to the tabbed layout\n\n
  \ * `XMonad/Layout/IndependentScreens` now exports `marshallSort`\n\n  * `XMonad/Hooks/UrgencyHook`
  now exports `clearUrgency`\n\n  * Exceptions are now caught when finding commands
  on `PATH` in `Prompt.Shell`\n\n  * Switched to `Data.Default` wherever possible\n\n
  \ * `XMonad.Layout.IndependentScreens` now exports `whenCurrentOn`\n\n  * `XMonad.Util.NamedActions`
  now exports `addDescrKeys'`\n\n  * EWMH `DEMANDS_ATTENTION` support added to `UrgencyHook`\n\n
  \ * New `useTransientFor` modifier in `XMonad.Layout.TrackFloating`\n\n  * Added
  the ability to remove arbitrary workspaces\n\n## 0.9 (October 26, 2009)\n\n### Updates
  that Require Changes in `xmonad.hs`\n\n  * `XMonad.Hooks.EwmhDesktops` no longer
  uses `layoutHook`, the\n    `ewmhDesktopsLayout` modifier has been removed from\n
  \   xmonad-contrib. It uses `logHook`, `handleEventHook`, and\n    `startupHook`
  instead and provides a convenient function `ewmh` to\n    add EWMH support to a
  `defaultConfig`.\n\n  * Most `DynamicLog` users can continue with configs unchanged,
  but\n    users of the quickbar functions `xmobar` or `dzen` will need to\n    change
  `xmonad.hs`: their types have changed to allow easier\n    composition with other
  `XConfig` modifiers. The `dynamicLogDzen`\n    and `dynamicLogXmobar` functions
  have been removed.\n\n  * `WindowGo` or `safeSpawn` users may need to change command
  lines\n    due to `safeSpawn` changes.\n\n  * People explicitly referencing the
  \"SP\" scratchpad workspace should\n    change it to \"NSP\" which is also used
  by the new\n    `Util.NamedScratchpad` module.\n\n  * (Optional) People who explicitly
  use `swapMaster` in key or mouse\n    bindings should change it to `shiftMaster`.
  It's the current\n    default used where `swapMaster` had been used previously.
  It works\n    better than `swapMaster` when using floating and tiled windows\n    together
  on the same workspace.\n\n## See Also\n\n<https://wiki.haskell.org/Xmonad/Notable_changes_since_0.8>\n\n[pass]:
  http://www.passwordstore.org/\n"
basic-deps:
  extensible-exceptions: -any
  unix: -any
  base: ! '>=4.5 && <5'
  X11: ! '>=1.6.1 && <1.7'
  filepath: -any
  process: -any
  xmonad: ! '>=0.12 && <0.13'
  containers: ! '>=0.5'
  utf8-string: -any
  old-time: -any
  X11-xft: ! '>=0.2'
  old-locale: -any
  mtl: ! '>=1 && <3'
  random: -any
  directory: -any
all-versions:
- '0.5'
- '0.6'
- '0.7'
- '0.8'
- '0.8.1'
- '0.9'
- '0.9.1'
- '0.9.2'
- '0.10'
- '0.11'
- '0.11.1'
- '0.11.2'
- '0.11.3'
- '0.11.4'
- '0.12'
author: Spencer Janssen & others
latest: '0.12'
description-type: markdown
description: ! "# xmonad-contrib: Third Party Extensions to the xmonad Window Manager\n\nYou
  need the ghc compiler and xmonad window manager installed in\norder to use these
  extensions.\n\nFor installation and configuration instructions, please see the\n[xmonad
  website] [xmonad], the documents included with the\n[xmonad source distribution]
  [xmonad-git], and the\n[online haddock documentation] [xmonad-docs].\n\n## Getting
  or Updating XMonadContrib\n\n  * Latest release: <https://hackage.haskell.org/package/xmonad-contrib>\n\n
  \ * Git version: <https://github.com/xmonad/xmonad-contrib>\n\n(To use git xmonad-contrib
  you must also use the\n[git version of xmonad] [xmonad-git].)\n\n## Contributing\n\nHaskell
  code contributed to this repo should live under the\nappropriate subdivision of
  the `XMonad` namespace (currently includes\n`Actions`, `Config`, `Hooks`, `Layout`,
  `Prompt`, and `Util`). For\nexample, to use the Grid layout, one would import:\n\n
  \   XMonad.Layout.Grid\n\nFor further details, see the [documentation] [developing]
  for the\n`XMonad.Doc.Developing` module and the [xmonad website] [xmonad].\n\n##
  License\n\nCode submitted to the contrib repo is licensed under the same license
  as\nxmonad itself, with copyright held by the authors.\n\n[xmonad]: http://xmonad.org\n[xmonad-git]:
  https://github.com/xmonad/xmonad\n[xmonad-docs]: http://www.xmonad.org/xmonad-docs\n[developing]:
  http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Doc-Developing.html\n"
license-name: BSD3
