homepage: http://xmonad.org
changelog-type: markdown
hash: 38484fc74c9f969515eb4a299a8d35e1ca028ce8ccac48d0f555fed7812e55b6
test-bench-deps:
  extensible-exceptions: -any
  base: -any
  X11: -any
  xmonad: -any
  containers: -any
  QuickCheck: ! '>=2'
maintainer: xmonad@haskell.org
synopsis: A tiling window manager
changelog: ! "# Change Log / Release Notes\n\n## 0.12 (December 14, 2015)\n\n  * Compiles
  with GHC 7.10.2, 7.8.4, and 7.6.3\n\n  * Use of [data-default][] allows using `def`
  where previously you\n    had to write `defaultConfig`, `defaultXPConfig`, etc.\n\n
  \ * The [setlocale][] package is now used instead of a binding shipped\n    with
  xmonad proper allowing the use of `Main.hs` instead of\n    `Main.hsc`\n\n  * No
  longer encodes paths for `spawnPID`\n\n  * The default `manageHook` no longer floats
  Gimp windows\n\n  * Doesn't crash when there are fewer workspaces than screens\n\n
  \ * `Query` is now an instance of `Applicative`\n\n  * Various improvements to the
  example configuration file\n\n[data-default]: http://hackage.haskell.org/package/data-default\n[setlocale]:
  https://hackage.haskell.org/package/setlocale\n"
basic-deps:
  extensible-exceptions: -any
  unix: -any
  setlocale: -any
  base: ! '>=3 && <5'
  X11: ! '>=1.5 && <1.7'
  filepath: -any
  process: -any
  data-default: -any
  xmonad: -any
  containers: -any
  utf8-string: ! '>=0.3 && <1.1'
  mtl: -any
  directory: -any
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.4.1'
- '0.5'
- '0.6'
- '0.7'
- '0.8'
- '0.8.1'
- '0.9'
- '0.9.1'
- '0.9.2'
- '0.10'
- '0.11'
- '0.11.1'
- '0.12'
author: Spencer Janssen
latest: '0.12'
description-type: markdown
description: ! "# xmonad: A Tiling Window Manager\n\n[xmonad][] is a tiling window
  manager for X. Windows are arranged\nautomatically to tile the screen without gaps
  or overlap, maximising\nscreen use. Window manager features are accessible from
  the keyboard:\na mouse is optional. xmonad is written, configured and extensible
  in\nHaskell. Custom layout algorithms, key bindings and other extensions\nmay be
  written by the user in config files. Layouts are applied\ndynamically, and different
  layouts may be used on each\nworkspace. Xinerama is fully supported, allowing windows
  to be tiled\non several physical screens.\n\n## Quick Start\n\n  * From hackage:\n\n
  \       cabal update\n        cabal install xmonad xmonad-contrib\n\n  * Alternatively,
  build from source using the following repositories:\n\n    - <https://github.com/xmonad/xmonad>\n\n
  \   - <https://github.com/xmonad/xmonad-contrib>\n\nFor the full story, read on.\n\n##
  Building\n\nBuilding is quite straightforward, and requires a basic Haskell toolchain.\nOn
  many systems xmonad is available as a binary package in your\npackage system (e.g.
  on Debian or Gentoo). If at all possible, use this\nin preference to a source build,
  as the dependency resolution will be\nsimpler.\n\nWe'll now walk through the complete
  list of toolchain dependencies.\n\n  * GHC: the Glasgow Haskell Compiler\n\n    You
  first need a Haskell compiler. Your distribution's package\n    system will have
  binaries of GHC (the Glasgow Haskell Compiler),\n    the compiler we use, so install
  that first. If your operating\n    system's package system doesn't provide a binary
  version of GHC\n    and the `cabal-install` tool, you can install both using the\n
  \   [Haskell Platform][platform].\n\n    It shouldn't be necessary to compile GHC
  from source -- every common\n    system has a pre-build binary version.  However,
  if you want to\n    build from source, the following links will be helpful:\n\n
  \     - GHC: <http://haskell.org/ghc/>\n\n      - Cabal: <http://haskell.org/cabal/download.html>\n\n
  \ * X11 libraries:\n\n    Since you're building an X application, you'll need the
  C X11\n    library headers. On many platforms, these come pre-installed. For\n    others,
  such as Debian, you can get them from your package manager:\n\n        $ apt-get
  install libx11-dev libxinerama-dev libxext-dev\n\n## Running xmonad\n\nAdd:\n\n
  \   exec $HOME/.cabal/bin/xmonad\n\nto the last line of your `.xsession` or `.xinitrc`
  file.\n\n## Configuring\n\nSee the `CONFIG` document.\n\n## XMonadContrib\n\nThere
  are many extensions to xmonad available in the XMonadContrib\n(xmc) library. Examples
  include an ion3-like tabbed layout, a\nprompt/program launcher, and various other
  useful modules.\nXMonadContrib is available at:\n\n  * Latest release: <http://hackage.haskell.org/package/xmonad-contrib>\n\n
  \ * Git version: <https://github.com/xmonad/xmonad-contrib>\n\n## Other Useful Programs\n\nA
  nicer xterm replacement, that supports resizing better:\n\n  * urxvt: <http://software.schmorp.de/pkg/rxvt-unicode.html>\n\nFor
  custom status bars:\n\n  * xmobar: <http://hackage.haskell.org/package/xmobar>\n\n
  \ * taffybar: <https://github.com/travitch/taffybar>\n\n  * dzen: <http://gotmor.googlepages.com/dzen>\n\nFor
  a program dispatch menu:\n\n  * [XMonad.Prompt.Shell][xmc-prompt-shell]: (from [XMonadContrib][])\n\n
  \ * dmenu: <http://www.suckless.org/download/>\n\n  * gmrun: (in your package system)\n\n##
  Authors\n\n  * Spencer Janssen\n  * Don Stewart\n  * Jason Creighton\n\n[xmonad]:
  http://xmonad.org\n[xmonadcontrib]: https://hackage.haskell.org/package/xmonad-contrib\n[xmc-prompt-shell]:
  https://hackage.haskell.org/package/xmonad-contrib/docs/XMonad-Prompt-Shell.html\n[platform]:
  http://haskell.org/platform/\n"
license-name: BSD3
