changelog-type: markdown
hash: 2b25a1163dae61a9d99289703d4f86918cd4dced7fc27f305d3622284082c2eb
test-bench-deps: {}
synopsis: Wrapper over xml to extract data from parsed xml
changelog: ! "0.4.0.0\n\n  * Added several functions to the `Extractors` module:\n\n
  \   * `eitherMessageOrValue` from the `ShowErr` module and some others.\n\n\t* Both
  conversion functions from `Extra`.\n\n    This means less imports in many cases.\n\n
  \ * Some changes were made to the `Err` datatype:\n\n    * `ErrExpect` was renamed
  to `ErrExpectContent`.\n\n    * `ErrAttr` was renamed to `ErrExpectAttrib` and used
  for signalling a missing attribute.\n\n    * `ErrAttribValue` was added to cater
  for erroneous attribute values.\n\n    * Some field names have been given more descriptive
  names.\n\n    The conversion/validation function given to `attribAs` does no\n    longer
  need to return an `Err` value for errors, but only a string\n    description of
  the expected value format.\n\n0.3.0.0\n\n  * Added `anyContent`\n  * Added `choice`\n"
basic-deps:
  base: ! '>=4.6 && <4.8'
  xml: ! '>=1.3 && <1.4'
  mtl: ! '>=2.1 && <2.2'
  transformers: ! '>=0.3 && <0.4'
  safe: ! '>=0.3 && <0.4'
all-versions:
- '0.2.0.0'
- '0.2.1.0'
- '0.3.0.0'
- '0.4.0.0'
latest: '0.4.0.0'
description-type: markdown
description: ! 'xml-extractors

  ==============


  Simple wrapper over [xml](http://hackage.haskell.org/package/xml) to

  extract data from parsed xml.


  When parsing xml strings with `XML.Light` you get a list of

  [Content](http://hackage.haskell.org/package/xml-1.3.13/docs/Text-XML-Light-Types.html#t:Content).
  Then

  you can use functions from

  [Text.XML.Light.Proc](http://hackage.haskell.org/package/xml-1.3.13/docs/Text-XML-Light-Proc.html)

  to extract data from that. It is however kind of tricky to deal with

  the potential errors -- we have a parsing problem again.


  Instead of `Text.XML.Light.Proc` one can use this library. It simplifies

  the process of extracting data from `Content` while dealing with errors.

'
