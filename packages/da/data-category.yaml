changelog-type: ''
hash: 9457c35dcabb54972073281e1f88c91e250dac6d5e17f7bdf894fcb4481bbcd7
synopsis: Category theory
changelog: ''
all-versions:
- '0.0.1'
- '0.0.2'
- '0.0.3'
- '0.0.3.1'
- '0.1.0'
- '0.2.0'
- '0.3.0'
- '0.3.0.1'
- '0.3.0.2'
- '0.3.1'
- '0.3.1.1'
- '0.4'
- '0.4.1'
- '0.5.0'
- '0.5.1'
- '0.5.1.0'
- '0.5.1.1'
- '0.6.0'
- '0.6.1'
latest: '0.6.1'
description-type: haddock
description: ! 'Data-category is a collection of categories, and some categorical
  constructions on them.


  You can restrict the types of the objects of your category by using a GADT for the
  arrow type.

  To be able to proof to the compiler that a type is an object in some category, objects
  also need to be represented at the value level.

  The corresponding identity arrow of the object is used for that.


  See the ''Boolean'' and ''Product'' categories for some examples.


  Note: Strictly speaking this package defines Hask-enriched categories, not ordinary
  categories (which are Set-enriched.)

  In practice this means we are allowed to ignore ''undefined'' (f.e. when talking
  about uniqueness of morphisms),

  and we can treat the categories as normal categories.'
