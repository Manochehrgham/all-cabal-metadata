changelog-type: ''
hash: ba90fba8c4acca55cec7d3c80b6350eae8d6f9c66f82dd359278eb990993fff4
test-bench-deps:
  dataflow: -any
  base: -any
  hspec: ==2.*
  HUnit: -any
synopsis: Generate Graphviz documents from a Haskell representation.
changelog: ''
basic-deps:
  MissingH: -any
  dataflow: -any
  base: ! '>=4 && <4.8'
  parsec: ! '>=3.1.9'
  containers: ! '>=0.4'
  mtl: ! '>=2.2'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.2.0.0'
- '0.3.0.0'
- '0.3.1.0'
- '0.3.2.0'
- '0.4.0.0'
- '0.4.1.0'
- '0.4.2.0'
- '0.5.0.0'
- '0.5.1.0'
- '0.5.2.0'
- '0.5.3.0'
- '0.5.4.0'
- '0.6.0.0'
- '0.6.1.0'
latest: '0.6.1.0'
description-type: markdown
description: ! '# DataFlow


  Render graphs using a declarative markup. Currently supports DFD

  (http://en.wikipedia.org/wiki/Data_flow_diagram) and sequence diagrams

  (http://plantuml.sourceforge.net/sequence.html).


  ![DFD Output](examples/webapp.dfd.png)


  ## Usage


  So you want to you use DataFlow? Then please read [Usage](USAGE.md).


  ## Setup


  ```bash

  cabal sandbox init # optional

  cabal install --only-dependencies --enable-tests

  cabal configure --enable-tests

  ```


  ## Build


  ```bash

  cabal build

  ```


  ## Install


  If you initialized a sandbox the executable will end up in the sandbox, i.e.

  `.cabal-sandbox/bin/dataflow`. If you have no sandbox it will end up in

  `~/.cabal/bin/dataflow`. If you get any stange errors during install try a `cabal
  clean`


  ```bash

  cabal install

  ```


  ## Tests


  ```bash

  ./run-tests.sh

  # or...

  ./watch-tests.sh

  ```


  ## Building the Examples


  ```bash

  make -C examples

  ```


  ## License


  BSD-3, see [LICENSE](LICENSE).

'
