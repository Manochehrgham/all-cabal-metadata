changelog-type: ''
hash: e83c0f6ca98450d2e6d0213cb192fa0240303e55a42fa7ebca45205fa91a5434
synopsis: Sculpt mutable recursive data with reference equality; bake it using a data
  kiln into an immutable lazy structure
changelog: ''
all-versions:
- '0.1.0.0'
latest: '0.1.0.0'
description-type: haddock
description: We functional programmers know that mutable state is unglamorous, but
  sometimes useful. Data.Kiln lets you create and manipulate mutable recursive structures
  (Clay) in the Squishy monad (built over ST), then once you're finished with mutation,
  bake them into immutable, pure, lazy data. The library is polymorphic in the shape
  of each mutable node in the graph, requiring only that it be Traversable, which
  means that all sorts of structures, from cons-cells to tagged state diagrams, can
  be represented and manipulated safely and efficiently, with an ultimately pure output.
