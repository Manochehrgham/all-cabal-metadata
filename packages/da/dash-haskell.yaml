changelog-type: ''
hash: 06773a356188ed837865bbdcab3754e1ae757098f674b24f59702d64dc3b92b9
test-bench-deps: {}
synopsis: Command line tool to generate Dash docsets (IDE docs) from package haddock
changelog: ''
basic-deps:
  ghc: ! '>=7.10.1'
  either: ! '>=4.3'
  bytestring: ! '>=0.10.0.1'
  Cabal: ! '>=1.18'
  base: ! '>=4.7 && <4.9'
  sqlite-simple: ! '>=0.4.5.0'
  text: ! '>=0.7.1'
  system-fileio: ! '>=0.3.12 && <0.4.0'
  process: ! '>=1.2.0.0'
  direct-sqlite: ! '>=2.3.13'
  parsec: ! '>=3.1.5'
  containers: ! '>=0.5.5.1'
  pipes: ! '>=4.1.0'
  mtl: ! '>=2.1.3.1'
  transformers: ! '>=0.3 && <0.5'
  optparse-applicative: ! '>=0.11.0 && <0.12.0'
  haddock-api: ! '>=2.15.0'
  tagsoup: ! '>=0.12.7'
  system-filepath: ! '>=0.3.1 && <0.5'
  directory: ! '>=1.2.1.0'
all-versions:
- '1.0.0.0'
- '1.0.0.1'
- '1.0.0.2'
- '1.0.0.3'
- '1.0.0.4'
- '1.0.0.5'
latest: '1.0.0.5'
description-type: markdown
description: ! "dash-haskell\n============\n**local and approximate package docs for
  your Haskell project dependencies**\n\n  **direct to browser lookup:**\n  ![look-up](/img/lookup.png?raw=true)\n
  \n\n  **keyword, module, and package searching:**\n  ![listing](/img/listing.png?raw=true)\n\ndash-haskell
  facilitates Haskell documentation in IDE(s) with the following qualities:\n  \n
  \ * **Local**\n\n    Documentation is stored in [dash](http://kapeli.com/dash) docsets
  on the filesystem,\n    avoiding the need to query **often inaccurate, version lagged**
  information from a remote resource such as *hackage*,\n    *hoogle*, or *hayoo*.\n
  \   \n  * **Resolved from Project Dependencies**\n\n    With dash-haskell, one can
  build dash docsets from:\n     * packages listed as dependencies of a *.cabal file\n
  \    * packages in a cabal sandbox\n     * an arbitrary package db\n\n  * **Scope
  Narrowed**\n    \n    IDE plugins such as [helm-dash](https://github.com/areina/helm-dash)\n
  \   allow for only specific docsets to be active. This means that\n    when searching
  for an identifier, e.g. *fromJust*, only the\n    packages you've built in your
  configuration are searched. Searches\n    can then be further narrowed by module
  etc.\n\n  * **Prolifically Standardized** \n\n    [dash docsets](http://kapeli.com/dash)
  are an open, easily assimilated standard, and\n    are used across many IDE(s).\n\nSummary\n=======\n```\n
  \ Usage: dash-haskell [-p|--dbprovider <provider,args>] [-o|--output <dir>]\n                      [-q|--quiet]
  [-c|--cabal <file.cabal>]\n                      [-r|--cabal-constraints executable=name,
  ..] [packages]\n    additional help is available with \"dash-haskell help <topic|option>\"\n\n
  \ Available options:\n    -h,--help                Show this help text\n    -p,--dbprovider
  <provider,args>\n                             a ghc package db provider: cabal|ghc|dir\n
  \   -o,--output <dir>        the directory to write created docsets to\n    -q,--quiet
  \              set to quiet output\n    -c,--cabal <file.cabal>  the cabal file
  to retrieve package dependencies from \n    -r,--cabal-constraints executable=name,
  ..\n                             limit package results from a cabal file source,
  see\n                             documentation\n    packages                 a
  list of packages to specifically build, e.g.\n                             either-1.0.1
  text-1.2.0\n```\n\nUsage Example\n=============\nThe following example shows how
  to use **dash-haskell** to generate\ndocsets for a **cabal sandbox project**.\n\n```\n
  \ $ cd foo-1.2.0/ \n  $ dash-haskell -c foo.cabal -o docsets \n  db provider:\n
  \   lookup strategy: cabal sandbox db index\n    cmd: cabal\n    args: sandbox hc-pkg
  list\n\n  processing: system-filepath-0.4.12\n    writing files..\n    writing plist..\n
  \   populating database..\n    finished populating sqlite database..\n\n  processing:
  system-fileio-0.3.14\n    writing files..\n    writing plist..\n    populating database..\n
  \   finished populating sqlite database..\n\n  processing: pipes-4.1.2\n    writing
  files..\n    writing plist..\n    populating database..\n    finished populating
  sqlite database..\n\n  warning: failed to process: parsec-3.1.5\n  warning: path
  errors in pkg conf file:\n   /home/jpf/local/cabal-sandboxes/dash-haskell/x86_64-linux-ghc-7.8.3-packages.conf.d/parsec-3.1.5-abf7e89cafe4e74712f678cea843c1c8.conf\n
  \ with problem(s):\n   missing: haddock interface file\n   missing: html doc dir\n\n
  \ processing: sqlite-simple-0.4.8.0\n    writing files..\n    writing plist..\n
  \   populating database..\n    finished populating sqlite database..\n\n  $\n\n```\n\nNotice,
  the failure of ```parsec-3.1.5``` is illustrated here to show that\nin this case,
  dash-haskell depends on **haddock documentation** being built for\nthe requested
  package.\nA possible resolution in this case, if using a sandbox, is:\n\n```\n$
  cabal install --reinstall parsec-3.1.5 --enable-documentation\n$ dash-haskell parsec-3.1.5
  -o docsets\n```\n\n**dash-haskell** tries to be as self-documenting as possible.
  Please see:\n```\n$ dash-haskell help [option|topic]\n```\n\nInstallation\n============\n```\n$
  cabal install dash-haskell\n```\nor\n\n```\n $ git clone http://www.github.com/jfeltz/dash-haskell\n
  $ cd dash-haskell\n $ cabal install \n```\n\nPackage Resolution\n==================\nWhen
  dependency sourcing from a cabal file, dash-haskell does not (yet) select versioned
  packages from the build-dependency version bounds, only the package names. As a
  general rule, try to **be version specific** when providing package arguments, unless
  you're judicious about which packages are stored in your *cabal sandbox* or *ghc
  package db*. There is a lot of hidden behavior that goes into how dash-haskell resolves
  packages, \nfor example, consider the hypothetical package arguments:\n```\n$ dash-haskell
  either parsec-1.2 parsec\n```\nThis chooses by default:\n\n* ```either``` and ```parsec-1.2```
  as the parameter packages. \n  If for example ```parsec``` were sourced from a cabal
  file, with ```-c```, \n  ```parsec-1.2``` would still be chosen instead. \n* cabal
  as a package db provider:\n  implicitly calling ```cabal sandbox hc-pkg list```.\n
  \ By convention the first db that provides the unversioned package is chosen.\n*
  ```either-4.1.0``` and ```parsec-1.2``` are then selected from the package db,\nwhere
  their config files are parsed for the documentation sources to be converted. \n\n\nIDE
  Configuration\n=================\nTo use the generated docsets , you will need a
  plugin for your particular IDE which can access\nthem.\n\n* **Emacs**\n\n  **dash-haskell**
  is tested with the following for emacs:\n\n  * [helm](https://github.com/emacs-helm/helm)
  , a fuzzy finder plugin for emacs\n  * [helm-dash](https://github.com/areina/helm-dash)
  , the essential extension to helm in order to lookup dash docsets\n\n  For limiting
  helm-dash to project specific docsets, the following also helps. \n\n  ```lisp\n(defun
  activate-package-docsets (root) \n  (progn\n     (setq helm-dash-docsets-path root)
  \n     (setq helm-dash-common-docsets (helm-dash-installed-docsets))\n      \n     (message
  \n      (format \"activated %d docsets from: %s\" \n        (length helm-dash-common-docsets)
  root))\n  ))\n  ```\n\n  ```lisp\n  (activate-package-docsets \"/path/to/project/docsets/\")\n```\n\n*
  For **Vim**, see the following known docset plugins:\n\n    * The zealdocs [vim
  plugin](http://www.zealdocs.org)\n    * The Dash.app [vim plugin](https://github.com/rizzatti/dash.vim)\n\nFeatures
  slated for V2\n======================\n* handle **docset pre-builts**\n\n    set
  pre-built criteria, pre-built skipping, and provide a ```--rebuild``` to force rebuild
  of a docset\n\n* **summaries**\n\n    provide summary information to help users
  better understand which\n    packages failed and succeeded\n\n* **version biasing**
  \n\n    provide option to bias package version to highest when it is otherwise ambiguous\n\n*
  ```conf``` argument support \n\n    build docset directly from a package db .conf
  \n\n* ```doc``` argument \n\n    build docsets directly from a package doc directory
  \n    (containing the requisite ```*.haddock``` interface and html files)\n\nContributors\n============\nHirotomo
  Moriwaki : <philopon.dependence@gmail.com>\n\nThe major instigator of this project
  was Hirotomo Moriwaki's [haddocset](https://github.com/philopon/haddocset), with
  much of the early implementation of *dash-haskell* influenced by that code-base.\n\nRudi
  Grinberg : [github](http://github.com/rgrinberg)\n\nFor patches, testing, and helping
  maintain compatibility of ```dash-haskell-1.0.x.x``` with ghc changes\n\nAuthor
  & Maintainer\n===================\nJohn P. Feltz <jfeltz@gmail.com>\n"
