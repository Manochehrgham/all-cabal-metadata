homepage: https://github.com/trskop/data-default-extra
changelog-type: markdown
hash: dbe2e66801aba51d985c1bfb42103bc493bcb6f7d9aa92e35f183a7bf9ffd605
test-bench-deps: {}
maintainer: peter.trsko@gmail.com
synopsis: A class for types with a default value.
changelog: ! "# ChangeLog / ReleaseNotes\n\n\n## Version 0.0.1\n\n* First public release.\n*
  Uploaded to [Hackage][]: <http://hackage.haskell.org/package/data-default-extra-0.0.1>\n\n\n\n[Hackage]:\n
  \ http://hackage.haskell.org/\n  \"HackageDB (or just Hackage) is a collection of
  releases of Haskell packages.\"\n"
basic-deps:
  base: <6
  data-default-class: ==0.0.*
  data-default-instances-bytestring: ==0.0.*
  data-default-instances-old-locale: ==0.0.*
  data-default-instances-unordered-containers: ==0.0.*
  data-default-instances-base: ==0.0.*
  data-default-instances-text: ==0.0.*
  data-default-instances-vector: ==0.0.*
  data-default-instances-containers: ==0.0.*
  data-default-instances-new-base: ==0.0.*
  data-default-instances-case-insensitive: ==0.0.*
all-versions:
- '0.0.1'
author: Peter Trško
latest: '0.0.1'
description-type: markdown
description: ! "# data-default-extra\n\n[![Hackage](http://img.shields.io/hackage/v/data-default-instances-extra.svg)][data-default-instances-extra]\n[![Hackage
  Dependencies](https://img.shields.io/hackage-deps/v/data-default-instances-extra.svg)](http://packdeps.haskellers.com/reverse/data-default-instances-extra)\n[![Haskell
  Programming Language](https://img.shields.io/badge/language-Haskell-blue.svg)][Haskell.org]\n[![BSD3
  License](http://img.shields.io/badge/license-BSD3-brightgreen.svg)][tl;dr Legal:
  BSD3]\n\n[![Build](https://travis-ci.org/trskop/data-default-extra.svg)](https://travis-ci.org/trskop/data-default-extra)\n\n\n#
  Description\n\nAn alternative to [data-default][] package, but built on top of the
  same\nunderlying package [data-default-class][]. This package provides a lot of\nadditional
  instances for `Default` type class.\n\n`Default` type class provides a default value
  (`def`) of a type. In case when a\nparticluar type has an instance for `Monoid`,
  then the default value should be\n`mempty`, otherwise it can cause a great deal
  of confusion.\n\nOne must understand, that `Default` type class, has no axioms associated
  with\nit. Its purpose is to minimize:\n\n* Number of imports.\n\n* Number of introduced
  definitions that are part of an API.\n\n* Complexity of building more complicated
  \"default values\" out of simpler\n  \"default values\".\n\n* Cognitive overhead.
  (Reduction of cognitive overhead is partially a\n  consequence of reducing above
  issues.)\n\nAs one may notice, most of the listed problems, that `Default` type
  class tries\nto solve, to various degrees of success, are for human benefit, and
  not\ntheoretically founded. Because of this, please always try hard to define\nsensible
  instances of `Default`. Most importantly, document what `def` means\nfor particular
  type, and always check that `def` is sensible, by testing it on\na real world sample
  of human beings, one is not a big enough sample.\n\nThat said, using `Default` may
  not always be a good idea. If it breaks people's\nmental models, or theoretical
  models with real axioms, then just don't use it.\n\nThis package, in most part,
  just reexports a set of packages that provide\nadditional instances for [data-default-class][]
  package.\n\n\n## GHC Generics\n\nCreate `Default` instances using [GHC Generics][].\n\nUsage
  example:\n\n```Haskell\n{-# LANGUAGE DeriveGeneric #-}\n\nimport GHC.Generics (Generic)\n\ndata
  MyType = MyType Int (Maybe String)\n  deriving (Generic, Show)\n\ninstance Default
  MyType where\n    def = genericDef\n```\n\n```\nλ> def :: MyType\nMyType 0 Nothing\n```\n\n\n##
  License\n\nThe BSD 3-Clause License, see [LICENSE][] file for details.\n\n\n## Contributions\n\nContributions,
  pull requests and bug reports are welcome! Please don't be\nafraid to contact author
  using GitHub or by e-mail.\n\n\n[data-default]:\n  https://hackage.haskell.org/package/data-default\n
  \ \"Hackage: data-default\"\n[data-default-class]:\n  https://hackage.haskell.org/package/data-default\n
  \ \"Hackage: data-default-class\"\n[data-default-instances-extra]:\n  https://hackage.haskell.org/package/data-default-instances-extra\n
  \ \"Package data-default-instances-extra on Hackage\"\n[GHC Generics]:\n  https://wiki.haskell.org/GHC.Generics\n
  \ \"GHC.Generics on HaskellWiki\"\n[Haskell.org]:\n  http://www.haskell.org\n  \"The
  Haskell Programming Language\"\n[LICENSE]:\n  https://github.com/trskop/data-default-extra/blob/master/extra/LICENSE\n
  \ \"License of data-default-extra package.\"\n[tl;dr Legal: BSD3]:\n  https://tldrlegal.com/license/bsd-3-clause-license-%28revised%29\n
  \ \"BSD 3-Clause License (Revised)\"\n"
license-name: BSD3
