homepage: https://github.com/glutamate/datasets
changelog-type: markdown
hash: ba2d5c7aba9a985ee66b24459df35cab64859e2aaeceaa7ee1bcb1310c6549b1
test-bench-deps: {}
maintainer: Tom Nielsen <tanielsen@gmail.com>
synopsis: Classical data sets for statistics and machine learning
changelog: ! '0.2.2


  * Enum, bounded instances for IrisClass


  * Gapminder dataset


  * Use wreq for HTTP and HTTPS requests


  0.2.1


  * Wine quality datasets


  * Vocabulary, UN, States datasets


  * CO2, Sunspots and Quakes datasets


  0.2.0.3


  * Further GHC portability


  0.2.0.2


  * Improve GHC portability


  0.2.0.1


  * Bugfix: include embedded data files in cabal extra-source-files


  0.2


  * iris dataset is a pure value (with file-embed)


  * Michelson, Nightingale and BostonHousing datasets

'
basic-deps:
  bytestring: -any
  base: ! '>=4.6 && <5'
  time: -any
  text: -any
  stringsearch: -any
  filepath: -any
  wreq: -any
  cassava: -any
  hashable: -any
  file-embed: -any
  microlens: -any
  aeson: -any
  vector: -any
  directory: -any
all-versions:
- '0.1.0'
- '0.1.0.1'
- '0.2'
- '0.2.0.1'
- '0.2.0.2'
- '0.2.0.3'
- '0.2.1'
- '0.2.2'
author: Tom Nielsen <tanielsen@gmail.com>
latest: '0.2.2'
description-type: haddock
description: ! 'Classical machine learning and statistics datasets from

  the UCI Machine Learning Repository and other sources.


  The datasets package defines two different kinds of datasets:


  * small data sets which are directly (or indirectly with `file-embed`)

  embedded in the package as pure values and do not require network or IO to download

  the data set. This includes Iris, Anscombe and OldFaithful.


  * other data sets which need to be fetched over the network with

  `Numeric.Datasets.getDataset` and are cached in a local temporary directory.


  > import Numeric.Datasets (getDataset)

  > import Numeric.Datasets.Iris (iris)

  > import Numeric.Datasets.Abalone (abalone)

  >

  > main = do

  >   -- The Iris data set is embedded

  >   print (length iris)

  >   print (head iris)

  >   -- The Abalone dataset is fetched

  >   abas <- getDataset abalone

  >   print (length abas)

  >   print (head abas)'
license-name: MIT
