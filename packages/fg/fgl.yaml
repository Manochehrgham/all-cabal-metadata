changelog-type: text
hash: 898fb06cb29e91f5522615bf8558272f14de475fe9d4e6e2699a471b555faf4b
test-bench-deps: {}
synopsis: Martin Erwig's Functional Graph Library
changelog: ! "5.5.1.0\n-------\n\n* Support added for GHC 7.10 by Herbert Valerio
  Riedel.\n\n* Additional DFS query functions added by Conrad Parker.\n\n* Repository
  location changed to GitHub.\n\n* Code cleanup:\n\n    - Replaced usage of internal
  FiniteMap copy with Data.Map and\n      Data.Set from the containers library.\n\n
  \   - Remove usage of data type contexts.\n\n    - Use newtypes where applicable.\n\n5.5.0.1\n-------\n\n*
  Fix up Eq instances for Tree and PatriciaTree so that they work with\n  multiple
  edges.\n\n5.5.0.0\n-------\n\n* Add proper Show, Read and Eq instances to Data.Graph.Inductive.Tree\n
  \ and Data.Graph.Inductive.PatriciaTree.\n\n* Add pretty-printing functions to Data.Graph.Inductive.Graph.
  \ These\n  are based upon the old Show implementation for\n  Data.Graph.Inductive.Tree.\n\n*
  Now use PatriciaTree by default rather than Tree (and recommend as\n  such).  IntMap
  has been receiving a lot of optimisation work on it,\n  whereas the internal FiniteMap
  implementation hasn't received any\n  attention.\n\n* The `version :: IO ()` action
  now uses the actual Cabal version.\n\n* Remove Data.Graph.Inductive.Graphviz; use
  the graphviz package\n  instead.\n\n5.4.2.4\n-------\n\n* Update to work with GHC-7.2
  and Cabal-1.6.\n\n5.4.2.3\n-------\n\n* Maintainership taken over by Ivan Miljenovic.\n\n*
  Allow Data.Graph.Inductive.PatriciaTree to deal with multiple edges\n  between nodes.\n"
basic-deps:
  base: <5
  array: -any
  containers: -any
  mtl: -any
all-versions:
- '5.3'
- '5.4.1.1'
- '5.4.2.0'
- '5.4.2.2'
- '5.4.2.3'
- '5.4.2.4'
- '5.5.0.0'
- '5.5.0.1'
- '5.5.1.0'
latest: '5.5.1.0'
description-type: haddock
description: ! 'An inductive representation of manipulating graph data structures.


  Original website can be found at <http://web.engr.oregonstate.edu/~erwig/fgl/haskell>.'
