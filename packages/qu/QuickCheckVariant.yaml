homepage: https://github.com/sanjorgek/QuickCheckVariant
changelog-type: ''
hash: 5184f8384e4b498decf48fdbc3ee1965c45d572527b49c3a3aa83c46ad6787a2
test-bench-deps: {}
maintainer: sanjorgek@ciencias.unam.mx
synopsis: Generator of "valid" and "invalid" data in a type class
changelog: ''
basic-deps:
  base: ! '>4.6 && <5'
  QuickCheck: -any
all-versions:
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.1.0'
author: Jorge Santiago Alvarez Cuadros
latest: '0.1.1.0'
description-type: markdown
description: ! "# QuickCheckVariant\nGenerator of \"valid\" and \"invalid\" data in
  a type class\n\nFor example, if you created\n~~~haskell\ndata Person = Anonymous
  { getId::String } | Client { getUsername::String, getName::String, getEmail::String}
  deriving(Show,Eq)\n~~~\n\nWe can provide means to generate valid and invalid data,
  like:\n~~~haskell\ninstance Variant Person where\n  valid = do\n    id <- alternative\n
  \   username <- alternative\n    name <- alternative\n    domain <- alternative\n
  \   ext <- alternative\n    (oneof . return) [Anonymous id, Client username name
  (username++\"@\"++domain++ext)]\n  invalid = do\n    username <- alternative\n    name
  <- alternative\n    return $ Client username name \"\"\n\n~~~ \n\nSee [this post](https://wiki.haskell.org/QuickCheck_as_a_test_set_generator)
  for more details\n"
license-name: GPL-3
