homepage: ''
changelog-type: ''
hash: 792817b4e67e072ec833b25c2c8670c277a29b231b156bc7b28632ae2f9cc78f
test-bench-deps: {}
maintainer: Athan Clark <athan.clark@gmail.com>
synopsis: ! 'Simple type-level combinators for augmenting

  QuickCheck instances.'
changelog: ''
basic-deps:
  base: ! '>=4.8 && <5'
  unfoldable-restricted: ! '>=0.0.1'
  QuickCheck: -any
all-versions:
- '0.0.0'
author: Athan Clark <athan.clark@gmail.com>
latest: '0.0.0'
description-type: haddock
description: ! 'Simply wrap the type you want to generate (assuming it satisfies

  all the necessary constraints) to refine the terms generated:


  @

  &#123;-&#35; LANGUAGE DataKinds &#35;-&#125;

  &#13;

  import Data.Set (Set)

  import Test.QuickCheck

  import Test.QuickCheck.Instances

  import GHC.TypeLits

  &#13;

  instance Arbitrary LinearEquation where

  &#32;&#32;arbitrary = do

  &#32;&#32;&#32;&#32;vars <- arbitrary :: Gen (AtLeast 3 Set String)

  &#32;&#32;&#32;&#32;&#45;&#45; ...

  @

'
license-name: BSD3
