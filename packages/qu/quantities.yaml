changelog-type: markdown
hash: 540ff2bc43812f9ae65f301e147755036fb34c2d4503f4513d04bb9e55e9f18d
test-bench-deps:
  hlint: -any
  base: ==4.*
  hspec: -any
  process: ==1.1.*
  parsec: -any
  doctest: ==0.9.*
  containers: -any
  regex-compat: ==0.95.*
  mtl: -any
  quantities: -any
  Glob: ==0.7.*
synopsis: Unit conversion and manipulation library.
changelog: ! "quantities changelog\n====================\n\n0.3 (4-15-2014)\n----------------\n\n-
  Added unit conversion to fromString using \"x => y\"\n- Made dimensionality printing
  nicer.\n- Added doctests and doc coverage tests.\n\n\n0.2 (4-6-2014)\n--------------\n\n-
  Can handle arithmetical expressions in fromString\n- Added support for user-defined
  definitions\n- Added check that definitions are the same for conversions\n\n\n0.1
  (3-31-2014)\n---------------\n\n- Full implementation of multiplicative dimensional
  quantities (no offsets yet\n  for temperatures).\n- Support for conversions and
  monadic quantity computations.\n- Builtin expression parser.\n- Simple definitions
  file format, fully stocked with units.\n- Travis CI, HSpec units tests, and HLint
  check.\n"
basic-deps:
  base: ! '>=4 && <5'
  parsec: -any
  containers: -any
  mtl: -any
all-versions:
- '0.1.0'
- '0.2.0'
- '0.3.0'
latest: '0.3.0'
description-type: haddock
description: ! 'A library for creating and manipulating physical

  quantities, which are a numerical value

  associated with a unit of measurement. Included

  is an expression parser and a huge list of

  predefined quantities with which to parse

  strings into a Quantity datatype. Once created,

  a quantity can be converted to different units

  or queried for its dimensionality. A user can

  also operate on quantities arithmetically, and

  doing so uses automatic unit conversion and

  simplifcation.'
