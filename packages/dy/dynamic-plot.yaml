homepage: https://github.com/leftaroundabout/dynamic-plot
changelog-type: ''
hash: 941283f6e397ca54af5a4543f6fd31abb44556c4bf2de0fa0b442e6ab03d9e0e
test-bench-deps: {}
maintainer: (@) sagemuej $ smail.uni-koeln.de
synopsis: Interactive diagram windows
changelog: ''
basic-deps:
  diagrams-lib: ! '>=1.3 && <1.4'
  MonadRandom: -any
  base: ! '>=4.5 && <6'
  time: -any
  diagrams-cairo: ! '>1.3.0.5 && <1.4'
  vector-space: ! '>=0.8'
  glib: -any
  process: -any
  diagrams-gtk: -any
  async: -any
  data-default: -any
  semigroups: -any
  manifolds: ==0.1.6.2
  tagged: -any
  containers: -any
  lens: <4.12.4
  mtl: -any
  MemoTrie: -any
  gtk: ! '>0.10 && <0.15'
  diagrams-core: -any
  colour: ! '>=2 && <3'
  transformers: -any
  random: -any
  deepseq: -any
  constrained-categories: ! '>=0.2'
  vector: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.1.0'
- '0.1.1.1'
- '0.1.1.2'
author: Justus Sagem√ºller
latest: '0.1.1.2'
description-type: haddock
description: ! 'Haskell excels at handling data like continuous functions

  in a nice way, i.e. without discretising anything to finite arrays as

  is typically done in languages like Matlab. Instead, you can simply pass

  around functions or infinite data structures (or /very/ high-resolution data

  that would be infeasible to handle in a strict language).


  However when you want to /view/ the data, it will eventually need to be exported
  out of Haskell

  in some finite form. The purpose of this library is to delay this discretisation

  as long as possible: it implements an interactive plotting window that accepts continuous/recursive

  data and only &#x201c;flattens&#x201d; it according to the specific view configuration.

  You can then zoom in to a shown diagram and it will automatically calculate

  the features more detailedly, or zoom out and discover previosly unexpected

  features. You don''t need to worry about specifying the range and/or resolution
  beforehand:

  the program will try to find a suitable default view based on /all/ data your displaying,

  and you can always still zoom, resize or move later.


  <http://projects.haskell.org/diagrams> are used as the &#x201c;pre-rendered&#x201d;
  type. This

  makes the output usable in a very wide range of applications, though at the moment
  only the GTK

  window view is implemented.'
license-name: GPL-3
