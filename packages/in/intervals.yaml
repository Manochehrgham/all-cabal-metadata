changelog-type: markdown
hash: ee92844e0ed93eaf0fc1b7fb2a3a97bac89f6229800a715d590d88763b9370f3
test-bench-deps:
  base: -any
  filepath: -any
  doctest: ! '>=0.9.1'
  directory: ! '>=1.0'
synopsis: Interval Arithmetic
changelog: ! '0.7.1

  -----

  * Now compatible with GHC 7.10.1-rc1

  * Fixed a number of broken `#if` pragmas, fixing previously missing instances.


  0.7.0.1

  -------

  * Removed a couple of unnecessary `Fractional` constraints.


  0.7

  ---

  * Corrected the definition of `mignitude`.

  * Added a notion of `distance` between intervals


  0.6

  ---

  * Added `Numeric.Interval.Exception`. For consistency, we tend to throw exceptions
  now instead of rely on `NaN` when working with empty intervals.


  0.5.1.1

  -------

  * Misc `doctest` fixes.


  0.5.1

  -----

  * Added `interval` to facilitate the construction of known non-empty intervals.


  0.5

  ---

  * The default `Numeric.Interval` now deals more conventionally with empty intervals.

  * The old "Kaucher directed interval" behavior is available as `Numeric.Interval.Kaucher`.

  * Strictly Non-Empty intervals are now contained in `Numeric.Interval.NonEmpty`

  * Renamed `bisection` to `bisect`.

  * Added `bisectIntegral`.


  0.4.2

  -----

  * Added `clamp`


  0.4

  ---

  * Distributive Interval


  0.3

  ---

  * Removed dependency on `numeric-extras`


'
basic-deps:
  base: ! '>=4 && <5'
  distributive: ! '>=0.2 && <1'
  array: ! '>=0.3 && <0.6'
  ghc-prim: -any
all-versions:
- '0.1.0'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.2.0'
- '0.2.0.1'
- '0.2.0.2'
- '0.2.0.3'
- '0.2.1'
- '0.2.1.1'
- '0.2.2'
- '0.2.2.1'
- '0.3'
- '0.4'
- '0.4.1'
- '0.4.2'
- '0.5'
- '0.5.1'
- '0.5.1.1'
- '0.6'
- '0.7'
- '0.7.0.1'
- '0.7.1'
latest: '0.7.1'
description-type: markdown
description: ! 'intervals

  ==========


  [![Build Status](https://secure.travis-ci.org/ekmett/intervals.png?branch=master)](http://travis-ci.org/ekmett/intervals)


  Basic interval arithmetic


  Contact Information

  -------------------


  Contributions and bug reports are welcome!


  Please feel free to contact me through github or on the #haskell IRC channel on
  irc.freenode.net.


  -Edward Kmett

'
