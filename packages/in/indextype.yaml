homepage: ''
changelog-type: ''
hash: b2635d1c8f52c721437ae3aa484448a303c13d66b7565c4d3c24a38c94ab6399
test-bench-deps:
  base: ! '>=4.7 && <5'
  hspec: -any
maintainer: clintonmead@gmail.com
synopsis: A series of type families and constraints for "indexable" types.
changelog: ''
basic-deps:
  base: ! '>=4.7 && <5'
all-versions:
- '0.1.0.0'
author: Clinton Mead
latest: '0.1.0.0'
description-type: haddock
description: ! 'This package deals with types that can roughly be "indexed" at compile
  time by an integer.

  For example, tuples and be indexed by their nth elements, and functions by their
  nth argument.

  A number of type functions allow one to extract these subtypes, i.e. the type of
  the 2nd element of a given tuple.

  Furthermore, constraints are defined which allow one to easily constrain types to
  these index types,

  e.g. a constraint that says "@t@ is a 3 tuple". @Control.IndexT@ has more detail.'
license-name: MIT
