changelog-type: ''
hash: 8b4a936b98854e8df87ff5160863fa84c2557e131ba640e5f30dd74419f35d4b
synopsis: Efficient hash-consing for arbitrary data types
changelog: ''
all-versions:
- '0.1'
- '0.2.0'
- '0.2.2'
- '0.2.2.1'
- '0.3.0'
- '0.4.0'
- '0.5.0'
- '0.5.1'
- '0.5.1.1'
- '0.5.2'
- '0.6'
- '0.8'
- '0.8.0.1'
- '0.9'
- '0.9.0.1'
- '0.9.1'
- '0.9.1.1'
- '0.9.1.2'
- '0.9.1.3'
- '0.9.1.4'
latest: '0.9.1.4'
description-type: haddock
description: ! 'Changes from 0.8 to 0.9


  * Removed ''identity'' from the Interned class, to support applications where the
  identity is obtained by other means (e.g. a unique Ptr value)


  Changes from 0.7 to 0.8


  * Disabled cache removal as it was causing problems on large data sets. There is
  no good way to ensure that both references remain alive long enough to finish comparisons.

  * Switched to IORef from MVar


  Changes from 0.6 to 0.7


  * Fixed problem where comparisons could happen between data structures while one
  was still a thunk, leading to equal structures comparing as inequal in limited circumstances,
  by appropriately using strictness annotations.


  Efficient hash-consing for arbitrary data types


  Changes from 0.5.2 to 0.6


  * Widened the caches so they don''t go through a single MVar per type. This has
  made a dramatic impact on performance. However, this broke the previous invariant
  that newer entries always had higher Ids than older entries.


  Changes from 0.5.1 to 0.5.2


  * Added Data.Interned.IntSet'
