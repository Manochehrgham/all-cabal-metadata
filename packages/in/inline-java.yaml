homepage: http://github.com/tweag/inline-java#readme
changelog-type: ''
hash: b7eac99ad33d22f08c5d552293c690362e25632007a620123aafb13ef27a49ad
test-bench-deps: {}
maintainer: alp.mestanogullari@tweag.io
synopsis: Java interop via inline Java code in Haskell modules.
changelog: ''
basic-deps:
  bytestring: ! '>=0.10'
  inline-c: ! '>=0.5'
  thread-local-storage: ! '>=0.1'
  base: ! '>=4.7 && <5'
  text: ! '>=1.2'
  containers: ! '>=0.5'
  singletons: ! '>=2.0'
  distributed-closure: ! '>=0.3'
  binary: ! '>=0.7'
  vector: ! '>=0.11'
all-versions:
- '0.1'
author: Tweag I/O
latest: '0.1'
description-type: markdown
description: ! "# inline-java: Call any JVM function from Haskell\n\nThe Haskell standard
  includes a native foreign function interface\n(FFI). It can be a pain to use and
  in any case only C support is\nimplemented in GHC. `inline-java` lets you call any
  JVM function\ndirectly, from Haskell, without the need to write your own foreign\nimport
  declarations using the FFI. In the style of `inline-c` for C and\n`inline-r` for
  calling R, `inline-java` lets you name any function to\ncall inline in your code.\n\n**This
  is an early tech preview, not production ready.**\n\n**Quasiquotation to make inline
  calls in Java syntax not yet\n  implemented. But calls in Haskell syntax supported.**\n\n#
  Example\n\nGraphical Hello World using Java Swing:\n\n```Haskell\n{-# LANGUAGE DataKinds
  #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-#
  LANGUAGE OverloadedStrings #-}\n\nimport Data.Text (Text)\nimport Language.Java\n\nnewtype
  JOptionPane = JOptionPane (J ('Class \"javax.swing.JOptionPane\"))\ninstance Coercible
  JOptionPane ('Class \"javax.swing.JOptionPane\")\n\nmain :: IO ()\nmain = withJVM
  [] $ do\n    message <- reflect (\"Hello World!\" :: Text)\n    callStatic\n      (classOf
  (undefined :: JOptionPane))\n      \"showMessageDialog\"\n      [JObject nullComponent,
  JObject (upcast message)]\n  where\n    nullComponent :: J ('Class \"java.awt.Component\")\n
  \   nullComponent = jnull\n```\n## License\n\nCopyright (c) 2015-2016 EURL Tweag.\n\nAll
  rights reserved.\n\nSparkle is free software, and may be redistributed under the
  terms\nspecified in the [LICENSE](LICENSE) file.\n\n## About\n\n![Tweag I/O](http://i.imgur.com/0HK8X4y.png)\n\nSparkle
  is maintained by [Tweag I/O](http://tweag.io/).\n\nHave questions? Need help? Tweet
  at\n[@tweagio](http://twitter.com/tweagio).\n"
license-name: BSD3
