homepage: https://github.com/brendanhay/amazonka
changelog-type: ''
hash: 570be1584ac974344d9d42f496fe2562d4acf0974ded70bb0cb1a2f7f8edfa69
test-bench-deps:
  amazonka-codedeploy: ==1.4.3.*
  bytestring: -any
  base: -any
  time: -any
  unordered-containers: -any
  text: -any
  amazonka-test: ==1.4.3.*
  amazonka-core: ==1.4.3.*
  tasty-hunit: -any
  tasty: -any
maintainer: Brendan Hay <brendan.g.hay@gmail.com>
synopsis: Amazon CodeDeploy SDK.
changelog: ''
basic-deps:
  base: ! '>=4.7 && <5'
  amazonka-core: ==1.4.3.*
all-versions:
- '0.0.0'
- '0.0.1'
- '0.0.2'
- '0.0.3'
- '0.0.4'
- '0.0.5'
- '0.0.6'
- '0.0.7'
- '0.0.8'
- '0.1.0'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.1.4'
- '0.2.0'
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.3.0'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.3.4'
- '0.3.5'
- '0.3.6'
- '1.0.0'
- '1.0.1'
- '1.1.0'
- '1.2.0'
- '1.2.0.1'
- '1.2.0.2'
- '1.3.0'
- '1.3.1'
- '1.3.2'
- '1.3.3'
- '1.3.3.1'
- '1.3.4'
- '1.3.5'
- '1.3.6'
- '1.3.7'
- '1.4.0'
- '1.4.1'
- '1.4.2'
- '1.4.3'
author: Brendan Hay
latest: '1.4.3'
description-type: markdown
description: ! "# Amazon CodeDeploy SDK\n\n* [Version](#version)\n* [Description](#description)\n*
  [Contribute](#contribute)\n* [Licence](#licence)\n\n\n## Version\n\n`1.4.3`\n\n\n##
  Description\n\nAWS CodeDeploy __Overview__\n\nThis reference guide provides descriptions
  of the AWS CodeDeploy APIs. For more information about AWS CodeDeploy, see the <docs.aws.amazon.com/codedeploy/latest/userguide
  AWS CodeDeploy User Guide>.\n\n__Using the APIs__\n\nYou can use the AWS CodeDeploy
  APIs to work with the following:\n\n-   Applications are unique identifiers used
  by AWS CodeDeploy to ensure the correct combinations of revisions, deployment configurations,
  and deployment groups are being referenced during deployments.\n\n    You can use
  the AWS CodeDeploy APIs to create, delete, get, list, and update applications.\n\n-
  \  Deployment configurations are sets of deployment rules and success and failure
  conditions used by AWS CodeDeploy during deployments.\n\n    You can use the AWS
  CodeDeploy APIs to create, delete, get, and list deployment configurations.\n\n-
  \  Deployment groups are groups of instances to which application revisions can
  be deployed.\n\n    You can use the AWS CodeDeploy APIs to create, delete, get,
  list, and update deployment groups.\n\n-   Instances represent Amazon EC2 instances
  to which application revisions are deployed. Instances are identified by their Amazon
  EC2 tags or Auto Scaling group names. Instances belong to deployment groups.\n\n
  \   You can use the AWS CodeDeploy APIs to get and list instance.\n\n-   Deployments
  represent the process of deploying revisions to instances.\n\n    You can use the
  AWS CodeDeploy APIs to create, get, list, and stop deployments.\n\n-   Application
  revisions are archive files stored in Amazon S3 buckets or GitHub repositories.
  These revisions contain source content (such as source code, web pages, executable
  files, and deployment scripts) along with an application specification (AppSpec)
  file. (The AppSpec file is unique to AWS CodeDeploy; it defines the deployment actions
  you want AWS CodeDeploy to execute.) Ffor application revisions stored in Amazon
  S3 buckets, an application revision is uniquely identified by its Amazon S3 object
  key and its ETag, version, or both. For application revisions stored in GitHub repositories,
  an application revision is uniquely identified by its repository name and commit
  ID. Application revisions are deployed through deployment groups.\n\n    You can
  use the AWS CodeDeploy APIs to get, list, and register application revisions.\n\nDocumentation
  is available via [Hackage](http://hackage.haskell.org/package/amazonka-codedeploy)\nand
  the [AWS API Reference](https://aws.amazon.com/documentation/).\n\nThe types from
  this library are intended to be used with [amazonka](http://hackage.haskell.org/package/amazonka),\nwhich
  provides mechanisms for specifying AuthN/AuthZ information and sending requests.\n\nUse
  of lenses is required for constructing and manipulating types.\nThis is due to the
  amount of nesting of AWS types and transparency regarding\nde/serialisation into
  more palatable Haskell values.\nThe provided lenses should be compatible with any
  of the major lens libraries\n[lens](http://hackage.haskell.org/package/lens) or
  [lens-family-core](http://hackage.haskell.org/package/lens-family-core).\n\n## Contribute\n\nFor
  any problems, comments, or feedback please create an issue [here on GitHub](https://github.com/brendanhay/amazonka/issues).\n\n>
  _Note:_ this library is an auto-generated Haskell package. Please see `amazonka-gen`
  for more information.\n\n\n## Licence\n\n`amazonka-codedeploy` is released under
  the [Mozilla Public License Version 2.0](http://www.mozilla.org/MPL/).\n\nParts
  of the code are derived from AWS service descriptions, licensed under Apache 2.0.\nSource
  files subject to this contain an additional licensing clause in their header.\n"
license-name: OtherLicense
