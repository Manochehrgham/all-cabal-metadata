homepage: https://github.com/brendanhay/amazonka
changelog-type: ''
hash: dfd621e4709762c0ecd627992d9a4bc3b39387cc8094b0d0d35636fa9a4d25df
test-bench-deps:
  bytestring: -any
  base: -any
  time: -any
  unordered-containers: -any
  text: -any
  amazonka-opsworks: ==1.4.2.*
  amazonka-test: ==1.4.2.*
  amazonka-core: ==1.4.2.*
  tasty-hunit: -any
  tasty: -any
maintainer: Brendan Hay <brendan.g.hay@gmail.com>
synopsis: Amazon OpsWorks SDK.
changelog: ''
basic-deps:
  base: ! '>=4.7 && <5'
  amazonka-core: ==1.4.2.*
all-versions:
- '0.0.0'
- '0.0.1'
- '0.0.2'
- '0.0.3'
- '0.0.4'
- '0.0.5'
- '0.0.6'
- '0.0.7'
- '0.0.8'
- '0.1.0'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.1.4'
- '0.2.0'
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.3.0'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.3.4'
- '0.3.5'
- '0.3.6'
- '1.0.0'
- '1.0.1'
- '1.1.0'
- '1.2.0'
- '1.2.0.1'
- '1.2.0.2'
- '1.3.0'
- '1.3.1'
- '1.3.2'
- '1.3.3'
- '1.3.3.1'
- '1.3.4'
- '1.3.5'
- '1.3.6'
- '1.3.7'
- '1.4.0'
- '1.4.1'
- '1.4.2'
author: Brendan Hay
latest: '1.4.2'
description-type: markdown
description: ! '# Amazon OpsWorks SDK


  * [Version](#version)

  * [Description](#description)

  * [Contribute](#contribute)

  * [Licence](#licence)



  ## Version


  `1.4.2`



  ## Description


  AWS OpsWorks


  Welcome to the /AWS OpsWorks API Reference/. This guide provides

  descriptions, syntax, and usage examples about AWS OpsWorks actions and

  data types, including common parameters and error codes.


  AWS OpsWorks is an application management service that provides an

  integrated experience for overseeing the complete application lifecycle.

  For information about this product, go to the

  <http://aws.amazon.com/opsworks/ AWS OpsWorks> details page.


  __SDKs and CLI__


  The most common way to use the AWS OpsWorks API is by using the AWS

  Command Line Interface (CLI) or by using one of the AWS SDKs to

  implement applications in your preferred language. For more information,

  see:


  -   <http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-welcome.html AWS CLI>

  -   <http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/opsworks/AWSOpsWorksClient.html
  AWS SDK for Java>

  -   <http://docs.aws.amazon.com/sdkfornet/latest/apidocs/html/N_Amazon_OpsWorks.htm
  AWS SDK for .NET>

  -   <http://docs.aws.amazon.com/aws-sdk-php-2/latest/class-Aws.OpsWorks.OpsWorksClient.html
  AWS SDK for PHP 2>

  -   <http://docs.aws.amazon.com/AWSRubySDK/latest/AWS/OpsWorks/Client.html AWS SDK
  for Ruby>

  -   <http://aws.amazon.com/documentation/sdkforjavascript/ AWS SDK for Node.js>

  -   <http://docs.pythonboto.org/en/latest/ref/opsworks.html AWS SDK for Python(Boto)>


  __Endpoints__


  AWS OpsWorks supports only one endpoint,

  opsworks.us-east-1.amazonaws.com (HTTPS), so you must connect to that

  endpoint. You can then use the API to direct AWS OpsWorks to create

  stacks in any AWS Region.


  __Chef Versions__


  When you call < CreateStack>, < CloneStack>, or < UpdateStack> we

  recommend you use the @ConfigurationManager@ parameter to specify the

  Chef version. The recommended value for Linux stacks is currently 12

  (the default is 11.4). Windows stacks use Chef 12.2. For more

  information, see

  <http://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook-chef11.html
  Chef Versions>.


  You can specify Chef 12, 11.10, or 11.4 for your Linux stack. We

  recommend migrating your existing Linux stacks to Chef 12 as soon as

  possible.


  Documentation is available via [Hackage](http://hackage.haskell.org/package/amazonka-opsworks)

  and the [AWS API Reference](https://aws.amazon.com/documentation/).


  The types from this library are intended to be used with [amazonka](http://hackage.haskell.org/package/amazonka),

  which provides mechanisms for specifying AuthN/AuthZ information and sending requests.


  Use of lenses is required for constructing and manipulating types.

  This is due to the amount of nesting of AWS types and transparency regarding

  de/serialisation into more palatable Haskell values.

  The provided lenses should be compatible with any of the major lens libraries

  [lens](http://hackage.haskell.org/package/lens) or [lens-family-core](http://hackage.haskell.org/package/lens-family-core).


  ## Contribute


  For any problems, comments, or feedback please create an issue [here on GitHub](https://github.com/brendanhay/amazonka/issues).


  > _Note:_ this library is an auto-generated Haskell package. Please see `amazonka-gen`
  for more information.



  ## Licence


  `amazonka-opsworks` is released under the [Mozilla Public License Version 2.0](http://www.mozilla.org/MPL/).


  Parts of the code are derived from AWS service descriptions, licensed under Apache
  2.0.

  Source files subject to this contain an additional licensing clause in their header.

'
license-name: OtherLicense
