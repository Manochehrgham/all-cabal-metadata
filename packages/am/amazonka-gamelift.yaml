homepage: https://github.com/brendanhay/amazonka
changelog-type: ''
hash: 6d1383ebfe4099c69ea4d96614380db481e6b6b0535800ce353abbb2b590d973
test-bench-deps:
  bytestring: -any
  base: -any
  time: -any
  unordered-containers: -any
  text: -any
  amazonka-test: ==1.4.4.*
  amazonka-core: ==1.4.4.*
  tasty-hunit: -any
  amazonka-gamelift: ==1.4.4.*
  tasty: -any
maintainer: Brendan Hay <brendan.g.hay@gmail.com>
synopsis: Amazon GameLift SDK.
changelog: ''
basic-deps:
  base: ! '>=4.7 && <5'
  amazonka-core: ==1.4.4.*
all-versions:
- '1.4.0'
- '1.4.1'
- '1.4.2'
- '1.4.3'
- '1.4.4'
author: Brendan Hay
latest: '1.4.4'
description-type: markdown
description: ! "# Amazon GameLift SDK\n\n* [Version](#version)\n* [Description](#description)\n*
  [Contribute](#contribute)\n* [Licence](#licence)\n\n\n## Version\n\n`1.4.4`\n\n\n##
  Description\n\nAmazon GameLift Service\n\nWelcome to the /Amazon GameLift API Reference/.
  Amazon GameLift is a managed Amazon Web Services (AWS) service for developers who
  need a scalable, server-based solution for multiplayer games. Amazon GameLift provides
  setup and deployment of game servers, and handles infrastructure scaling and session
  management.\n\nThis reference describes the low-level service API for GameLift.
  You can call this API directly or use the <https://aws.amazon.com/tools/#sdk AWS
  SDK> for your preferred language. The AWS SDK includes a set of high-level GameLift
  actions multiplayer game sessions. Alternatively, you can use the <https://aws.amazon.com/cli/
  AWS command-line interface> (CLI) tool, which includes commands for GameLift. For
  administrative actions, you can also use the Amazon GameLift console.\n\n__More
  Resources__\n\n-   <http://docs.aws.amazon.com/gamelift/latest/developerguide/ Amazon
  GameLift Developer Guide>: Learn more about GameLift features and how to use them\n-
  \  <https://gamedev.amazon.com/forums/tutorials Lumberyard and GameLift Tutorials>:
  Get started fast with walkthroughs and sample projects\n-   <https://aws.amazon.com/blogs/gamedev/
  GameDev Blog>: Stay up to date with new features and techniques\n-   <https://gamedev.amazon.com/forums/spaces/123/gamelift-discussion.html
  GameDev Forums>: Connect with the GameDev community\n\n__Manage Games and Players
  Through GameLift__\n\nCall these actions from your game clients and\\/or services
  to create and manage multiplayer game sessions and player sessions.\n\n-   __Game
  sessions__\n    -   < CreateGameSession>\n    -   < DescribeGameSessions>\n    -
  \  < DescribeGameSessionDetails>\n    -   < UpdateGameSession>\n    -   < SearchGameSessions>\n-
  \  __Player sessions__\n    -   < CreatePlayerSession>\n    -   < CreatePlayerSessions>\n
  \   -   < DescribePlayerSessions>\n-   __Other actions:__\n    -   < GetGameSessionLogUrl>\n\n__Set
  Up and Manage Game Servers__\n\nUse these administrative actions to configure GameLift
  to host your game servers. When setting up GameLift, you\\'ll need to (1) configure
  a build for your game and upload build files, and (2) set up one or more fleets
  to host game sessions. Once you\\'ve created and activated a fleet, you can assign
  aliases to it, scale capacity, track performance and utilization, etc.\n\n-   __Manage
  your builds:__\n    -   < ListBuilds>\n    -   < CreateBuild>\n    -   < DescribeBuild>\n
  \   -   < UpdateBuild>\n    -   < DeleteBuild>\n    -   < RequestUploadCredentials>\n-
  \  __Manage your fleets:__\n    -   < ListFleets>\n    -   < CreateFleet>\n    -
  \  Describe fleets:\n        -   < DescribeFleetAttributes>\n        -   < DescribeFleetCapacity>\n
  \       -   < DescribeFleetPortSettings>\n        -   < DescribeFleetUtilization>\n
  \       -   < DescribeEC2InstanceLimits>\n        -   < DescribeFleetEvents>\n        -
  \  < DescribeRuntimeConfiguration>\n    -   Update fleets:\n        -   < UpdateFleetAttributes>\n
  \       -   < UpdateFleetCapacity>\n        -   < UpdateFleetPortSettings>\n        -
  \  < UpdateRuntimeConfiguration>\n    -   < DeleteFleet>\n-   __Manage fleet aliases:__\n
  \   -   < ListAliases>\n    -   < CreateAlias>\n    -   < DescribeAlias>\n    -
  \  < UpdateAlias>\n    -   < DeleteAlias>\n    -   < ResolveAlias>\n-   __Manage
  autoscaling:__\n    -   < PutScalingPolicy>\n    -   < DescribeScalingPolicies>\n
  \   -   < DeleteScalingPolicy>\n\nTo view changes to the API, see the GameLift <http://docs.aws.amazon.com/gamelift/latest/developerguide/doc-history.html
  Document History> page.\n\nDocumentation is available via [Hackage](http://hackage.haskell.org/package/amazonka-gamelift)\nand
  the [AWS API Reference](https://aws.amazon.com/documentation/).\n\nThe types from
  this library are intended to be used with [amazonka](http://hackage.haskell.org/package/amazonka),\nwhich
  provides mechanisms for specifying AuthN/AuthZ information and sending requests.\n\nUse
  of lenses is required for constructing and manipulating types.\nThis is due to the
  amount of nesting of AWS types and transparency regarding\nde/serialisation into
  more palatable Haskell values.\nThe provided lenses should be compatible with any
  of the major lens libraries\n[lens](http://hackage.haskell.org/package/lens) or
  [lens-family-core](http://hackage.haskell.org/package/lens-family-core).\n\n## Contribute\n\nFor
  any problems, comments, or feedback please create an issue [here on GitHub](https://github.com/brendanhay/amazonka/issues).\n\n>
  _Note:_ this library is an auto-generated Haskell package. Please see `amazonka-gen`
  for more information.\n\n\n## Licence\n\n`amazonka-gamelift` is released under the
  [Mozilla Public License Version 2.0](http://www.mozilla.org/MPL/).\n\nParts of the
  code are derived from AWS service descriptions, licensed under Apache 2.0.\nSource
  files subject to this contain an additional licensing clause in their header.\n"
license-name: OtherLicense
