homepage: https://github.com/brendanhay/amazonka
changelog-type: ''
hash: 0f513a1878341c3c669b4b184f4c8e7cdb2d1bf2f370f921bdfe4062112aa44a
test-bench-deps:
  bytestring: -any
  base: -any
  time: -any
  unordered-containers: -any
  text: -any
  lens: -any
  amazonka-kms: ==1.1.0
  amazonka-test: ==1.1.0
  amazonka-core: ==1.1.0
  tasty-hunit: -any
  tasty: -any
maintainer: Brendan Hay <brendan.g.hay@gmail.com>
synopsis: Amazon Key Management Service SDK.
changelog: ''
basic-deps:
  base: ! '>=4.7 && <5'
  amazonka-core: ==1.1.0.*
all-versions:
- '0.0.0'
- '0.0.1'
- '0.0.2'
- '0.0.3'
- '0.0.4'
- '0.0.5'
- '0.0.6'
- '0.0.7'
- '0.0.8'
- '0.1.0'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.1.4'
- '0.2.0'
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.3.0'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.3.4'
- '0.3.5'
- '0.3.6'
- '1.0.0'
- '1.0.1'
- '1.1.0'
author: Brendan Hay
latest: '1.1.0'
description-type: markdown
description: ! "# Amazon Key Management Service SDK\n\n* [Version](#version)\n* [Description](#description)\n*
  [Contribute](#contribute)\n* [Licence](#licence)\n\n\n## Version\n\n`1.1.0`\n\n\n##
  Description\n\nAWS Key Management Service\n\nAWS Key Management Service (KMS) is
  an encryption and key management web\nservice. This guide describes the KMS actions
  that you can call\nprogrammatically. For general information about KMS, see the\n<http://docs.aws.amazon.com/kms/latest/developerguide/overview.html
  AWS Key Management Service Developer Guide>\n\nAWS provides SDKs that consist of
  libraries and sample code for various\nprogramming languages and platforms (Java,
  Ruby, .Net, iOS, Android,\netc.). The SDKs provide a convenient way to create programmatic
  access\nto KMS and AWS. For example, the SDKs take care of tasks such as signing\nrequests
  (see below), managing errors, and retrying requests\nautomatically. For more information
  about the AWS SDKs, including how to\ndownload and install them, see\n<http://aws.amazon.com/tools/
  Tools for Amazon Web Services>.\n\nWe recommend that you use the AWS SDKs to make
  programmatic API calls to\nKMS.\n\nClients must support TLS (Transport Layer Security)
  1.0. We recommend\nTLS 1.2. Clients must also support cipher suites with Perfect
  Forward\nSecrecy (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic Curve\nEphemeral
  Diffie-Hellman (ECDHE). Most modern systems such as Java 7 and\nlater support these
  modes.\n\n__Signing Requests__\n\nRequests must be signed by using an access key
  ID and a secret access\nkey. We strongly recommend that you do not use your AWS
  account access\nkey ID and secret key for everyday work with KMS. Instead, use the\naccess
  key ID and secret access key for an IAM user, or you can use the\nAWS Security Token
  Service to generate temporary security credentials\nthat you can use to sign requests.\n\nAll
  KMS operations require\n<http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html
  Signature Version 4>.\n\n__Recording API Requests__\n\nKMS supports AWS CloudTrail,
  a service that records AWS API calls and\nrelated events for your AWS account and
  delivers them to an Amazon S3\nbucket that you specify. By using the information
  collected by\nCloudTrail, you can determine what requests were made to KMS, who
  made\nthe request, when it was made, and so on. To learn more about\nCloudTrail,
  including how to turn it on and find your log files, see the\n<http://docs.aws.amazon.com/awscloudtrail/latest/userguide/whatiscloudtrail.html
  AWS CloudTrail User Guide>\n\n__Additional Resources__\n\nFor more information about
  credentials and request signing, see the\nfollowing:\n\n-   <http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
  AWS Security Credentials>.\n    This topic provides general information about the
  types of\n    credentials used for accessing AWS.\n-   <http://docs.aws.amazon.com/STS/latest/UsingSTS/
  AWS Security Token Service>.\n    This guide describes how to create and use temporary
  security\n    credentials.\n-   <http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html
  Signing AWS API Requests>.\n    This set of topics walks you through the process
  of signing a\n    request using an access key ID and a secret access key.\n\n__Commonly
  Used APIs__\n\nOf the APIs discussed in this guide, the following will prove the
  most\nuseful for most applications. You will likely perform actions other than\nthese,
  such as creating keys and assigning policies, by using the\nconsole.\n\n-   Encrypt\n-
  \  Decrypt\n-   GenerateDataKey\n-   GenerateDataKeyWithoutPlaintext\n\nDocumentation
  is available via [Hackage](http://hackage.haskell.org/package/amazonka-kms)\nand
  the [AWS API Reference](http://docs.aws.amazon.com/kms/latest/APIReference/Welcome.html).\n\nThe
  types from this library are intended to be used with [amazonka](http://hackage.haskell.org/package/amazonka),\nwhich
  provides mechanisms for specifying AuthN/AuthZ information and sending requests.\n\nUse
  of lenses is required for constructing and manipulating types.\nThis is due to the
  amount of nesting of AWS types and transparency regarding\nde/serialisation into
  more palatable Haskell values.\nThe provided lenses should be compatible with any
  of the major lens libraries\n[lens](http://hackage.haskell.org/package/lens) or
  [lens-family-core](http://hackage.haskell.org/package/lens-family-core).\n\n## Contribute\n\nFor
  any problems, comments, or feedback please create an issue [here on GitHub](https://github.com/brendanhay/amazonka/issues).\n\n>
  _Note:_ this library is an auto-generated Haskell package. Please see `amazonka-gen`
  for more information.\n\n\n## Licence\n\n`amazonka-kms` is released under the [Mozilla
  Public License Version 2.0](http://www.mozilla.org/MPL/).\n\nParts of the code are
  derived from AWS service descriptions, licensed under Apache 2.0.\nSource files
  subject to this contain an additional licensing clause in their header.\n"
license-name: OtherLicense
