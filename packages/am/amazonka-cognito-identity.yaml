homepage: https://github.com/brendanhay/amazonka
changelog-type: ''
hash: d98d157bf3bd39e7d1ee771615562a908a55954e00ce0f5345713336015887f1
test-bench-deps:
  bytestring: -any
  base: -any
  time: -any
  unordered-containers: -any
  amazonka-cognito-identity: ==1.4.4.*
  text: -any
  amazonka-test: ==1.4.4.*
  amazonka-core: ==1.4.4.*
  tasty-hunit: -any
  tasty: -any
maintainer: Brendan Hay <brendan.g.hay@gmail.com>
synopsis: Amazon Cognito Identity SDK.
changelog: ''
basic-deps:
  base: ! '>=4.7 && <5'
  amazonka-core: ==1.4.4.*
all-versions:
- '0.0.0'
- '0.0.1'
- '0.0.2'
- '0.0.3'
- '0.0.4'
- '0.0.5'
- '0.0.6'
- '0.0.7'
- '0.0.8'
- '0.1.0'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.1.4'
- '0.2.0'
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.3.0'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.3.4'
- '0.3.5'
- '0.3.6'
- '1.0.0'
- '1.0.1'
- '1.1.0'
- '1.2.0'
- '1.2.0.1'
- '1.2.0.2'
- '1.3.0'
- '1.3.1'
- '1.3.2'
- '1.3.3'
- '1.3.3.1'
- '1.3.4'
- '1.3.5'
- '1.3.6'
- '1.3.7'
- '1.4.0'
- '1.4.1'
- '1.4.2'
- '1.4.3'
- '1.4.4'
author: Brendan Hay
latest: '1.4.4'
description-type: markdown
description: ! "# Amazon Cognito Identity SDK\n\n* [Version](#version)\n* [Description](#description)\n*
  [Contribute](#contribute)\n* [Licence](#licence)\n\n\n## Version\n\n`1.4.4`\n\n\n##
  Description\n\nAmazon Cognito\n\nAmazon Cognito is a web service that delivers scoped
  temporary credentials to mobile devices and other untrusted environments. Amazon
  Cognito uniquely identifies a device and supplies the user with a consistent identity
  over the lifetime of an application.\n\nUsing Amazon Cognito, you can enable authentication
  with one or more third-party identity providers (Facebook, Google, or Login with
  Amazon), and you can also choose to support unauthenticated access from your app.
  Cognito delivers a unique identifier for each user and acts as an OpenID token provider
  trusted by AWS Security Token Service (STS) to access temporary, limited-privilege
  AWS credentials.\n\nTo provide end-user credentials, first make an unsigned call
  to < GetId>. If the end user is authenticated with one of the supported identity
  providers, set the \n    @\n    Logins\n    @\n     map with the identity provider
  token. \n    @\n    GetId\n    @\n     returns a unique identifier for the user.\n\nNext,
  make an unsigned call to < GetCredentialsForIdentity>. This call expects the same
  \n    @\n    Logins\n    @\n     map as the \n    @\n    GetId\n    @\n     call,
  as well as the \n    @\n    IdentityID\n    @\n     originally returned by \n    @\n
  \   GetId\n    @\n    . Assuming your identity pool has been configured via the
  < SetIdentityPoolRoles> operation, \n    @\n    GetCredentialsForIdentity\n    @\n
  \    will return AWS credentials for your use. If your pool has not been configured
  with \n    @\n    SetIdentityPoolRoles\n    @\n    , or if you want to follow legacy
  flow, make an unsigned call to < GetOpenIdToken>, which returns the OpenID token
  necessary to call STS and retrieve AWS credentials. This call expects the same \n
  \   @\n    Logins\n    @\n     map as the \n    @\n    GetId\n    @\n     call,
  as well as the \n    @\n    IdentityID\n    @\n     originally returned by \n    @\n
  \   GetId\n    @\n    . The token returned by \n    @\n    GetOpenIdToken\n    @\n
  \    can be passed to the STS operation <http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html
  AssumeRoleWithWebIdentity> to retrieve AWS credentials.\n\nIf you want to use Amazon
  Cognito in an Android, iOS, or Unity application, you will probably want to make
  API calls via the AWS Mobile SDK. To learn more, see the <http://docs.aws.amazon.com/mobile/index.html
  AWS Mobile SDK Developer Guide>.\n\nDocumentation is available via [Hackage](http://hackage.haskell.org/package/amazonka-cognito-identity)\nand
  the [AWS API Reference](https://aws.amazon.com/documentation/).\n\nThe types from
  this library are intended to be used with [amazonka](http://hackage.haskell.org/package/amazonka),\nwhich
  provides mechanisms for specifying AuthN/AuthZ information and sending requests.\n\nUse
  of lenses is required for constructing and manipulating types.\nThis is due to the
  amount of nesting of AWS types and transparency regarding\nde/serialisation into
  more palatable Haskell values.\nThe provided lenses should be compatible with any
  of the major lens libraries\n[lens](http://hackage.haskell.org/package/lens) or
  [lens-family-core](http://hackage.haskell.org/package/lens-family-core).\n\n## Contribute\n\nFor
  any problems, comments, or feedback please create an issue [here on GitHub](https://github.com/brendanhay/amazonka/issues).\n\n>
  _Note:_ this library is an auto-generated Haskell package. Please see `amazonka-gen`
  for more information.\n\n\n## Licence\n\n`amazonka-cognito-identity` is released
  under the [Mozilla Public License Version 2.0](http://www.mozilla.org/MPL/).\n\nParts
  of the code are derived from AWS service descriptions, licensed under Apache 2.0.\nSource
  files subject to this contain an additional licensing clause in their header.\n"
license-name: OtherLicense
