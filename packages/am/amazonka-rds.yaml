homepage: https://github.com/brendanhay/amazonka
changelog-type: ''
hash: c85191ed6023a14bfe7acc69ca03a7590e629dd928f3bff2e09f0bd24c0ba822
test-bench-deps:
  amazonka-rds: ==1.4.1.*
  bytestring: -any
  base: -any
  time: -any
  unordered-containers: -any
  text: -any
  amazonka-test: ==1.4.1.*
  amazonka-core: ==1.4.1.*
  tasty-hunit: -any
  tasty: -any
maintainer: Brendan Hay <brendan.g.hay@gmail.com>
synopsis: Amazon Relational Database Service SDK.
changelog: ''
basic-deps:
  base: ! '>=4.7 && <5'
  amazonka-core: ==1.4.1.*
all-versions:
- '0.0.0'
- '0.0.1'
- '0.0.2'
- '0.0.3'
- '0.0.4'
- '0.0.5'
- '0.0.6'
- '0.0.7'
- '0.0.8'
- '0.1.0'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.1.4'
- '0.2.0'
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.3.0'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.3.4'
- '0.3.5'
- '0.3.6'
- '1.0.0'
- '1.0.1'
- '1.1.0'
- '1.2.0'
- '1.2.0.1'
- '1.2.0.2'
- '1.3.0'
- '1.3.1'
- '1.3.2'
- '1.3.3'
- '1.3.3.1'
- '1.3.4'
- '1.3.5'
- '1.3.6'
- '1.3.7'
- '1.4.0'
- '1.4.1'
author: Brendan Hay
latest: '1.4.1'
description-type: markdown
description: ! "# Amazon Relational Database Service SDK\n\n* [Version](#version)\n*
  [Description](#description)\n* [Contribute](#contribute)\n* [Licence](#licence)\n\n\n##
  Version\n\n`1.4.1`\n\n\n## Description\n\nAmazon Relational Database Service\n\nAmazon
  Relational Database Service (Amazon RDS) is a web service that\nmakes it easier
  to set up, operate, and scale a relational database in\nthe cloud. It provides cost-efficient,
  resizeable capacity for an\nindustry-standard relational database and manages common
  database\nadministration tasks, freeing up developers to focus on what makes their\napplications
  and businesses unique.\n\nAmazon RDS gives you access to the capabilities of a MySQL,
  MariaDB,\nPostgreSQL, Microsoft SQL Server, Oracle, or Amazon Aurora database\nserver.
  These capabilities mean that the code, applications, and tools\nyou already use
  today with your existing databases work with Amazon RDS\nwithout modification. Amazon
  RDS automatically backs up your database\nand maintains the database software that
  powers your DB instance. Amazon\nRDS is flexible: you can scale your database instance\\'s
  compute\nresources and storage capacity to meet your application\\'s demand. As\nwith
  all Amazon Web Services, there are no up-front investments, and you\npay only for
  the resources you use.\n\nThis interface reference for Amazon RDS contains documentation
  for a\nprogramming or command line interface you can use to manage Amazon RDS.\nNote
  that Amazon RDS is asynchronous, which means that some interfaces\nmight require
  techniques such as polling or callback functions to\ndetermine when a command has
  been applied. In this reference, the\nparameter descriptions indicate whether a
  command is applied\nimmediately, on the next instance reboot, or during the maintenance\nwindow.
  The reference structure is as follows, and we list following\nsome related topics
  from the user guide.\n\n__Amazon RDS API Reference__\n\n-   For the alphabetical
  list of API actions, see\n    <http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_Operations.html
  API Actions>.\n\n-   For the alphabetical list of data types, see\n    <http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_Types.html
  Data Types>.\n\n-   For a list of common query parameters, see\n    <http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/CommonParameters.html
  Common Parameters>.\n\n-   For descriptions of the error codes, see\n    <http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/CommonErrors.html
  Common Errors>.\n\n__Amazon RDS User Guide__\n\n-   For a summary of the Amazon
  RDS interfaces, see\n    <http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html#Welcome.Interfaces
  Available RDS Interfaces>.\n\n-   For more information about how to use the Query
  API, see\n    <http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Using_the_Query_API.html
  Using the Query API>.\n\nDocumentation is available via [Hackage](http://hackage.haskell.org/package/amazonka-rds)\nand
  the [AWS API Reference](https://aws.amazon.com/documentation/).\n\nThe types from
  this library are intended to be used with [amazonka](http://hackage.haskell.org/package/amazonka),\nwhich
  provides mechanisms for specifying AuthN/AuthZ information and sending requests.\n\nUse
  of lenses is required for constructing and manipulating types.\nThis is due to the
  amount of nesting of AWS types and transparency regarding\nde/serialisation into
  more palatable Haskell values.\nThe provided lenses should be compatible with any
  of the major lens libraries\n[lens](http://hackage.haskell.org/package/lens) or
  [lens-family-core](http://hackage.haskell.org/package/lens-family-core).\n\n## Contribute\n\nFor
  any problems, comments, or feedback please create an issue [here on GitHub](https://github.com/brendanhay/amazonka/issues).\n\n>
  _Note:_ this library is an auto-generated Haskell package. Please see `amazonka-gen`
  for more information.\n\n\n## Licence\n\n`amazonka-rds` is released under the [Mozilla
  Public License Version 2.0](http://www.mozilla.org/MPL/).\n\nParts of the code are
  derived from AWS service descriptions, licensed under Apache 2.0.\nSource files
  subject to this contain an additional licensing clause in their header.\n"
license-name: OtherLicense
