homepage: http://www.clash-lang.org/
changelog-type: markdown
hash: 7b38305bfd230c4344d04cedfe01a87893cae5a30032e171810474799e900c4d
test-bench-deps: {}
maintainer: Christiaan Baaij <christiaan.baaij@gmail.com>
synopsis: CAES Language for Synchronous Hardware - As a Library
changelog: ! "# Changelog for the [`clash-lib`](http://hackage.haskell.org/package/clash-lib)
  package\n\n## 0.5.8 *June 26th 2015*\n* Fixes bugs:\n  * Allow text and tags in
  ~SIGD black box construct\n\n## 0.5.7 *June 25th 2015*\n* New features:\n  * Support
  for copying string literals from Haskell to generated code\n  * Collect and copy
  data-files\n\n* Fixes bugs:\n  * Signals declared twice when not using a clock-generating
  component [#60](https://github.com/clash-lang/clash-compiler/issues/60)\n  * This
  piece of code eat up all CPU when generating verilog [#62](https://github.com/clash-lang/clash-compiler/issues/60)\n\n##
  0.5.6 *June 3rd 2015*\n* New features:\n  * Support Verilog backend\n  * Generated
  component names are prefixed by the name of the module containing the `topEntity`\n\n##
  0.5.5 *May 18th 2015*\n* New features:\n  * Make inlining and specialisation limit
  configurable\n  * Make debug message level configurable\n\n* Fixes bugs:\n  * Netlist:
  ensure that the arguments of a component instantiation are always simple variables\n
  \ * CaseCon transformation: ensure that we run the compile-time evaluator on the
  subject before handling the one-alternative case\n  * Emit a warning if a function
  remains recursive, instead of producing an error: compilation can still be successful
  if the function is an argument to a higher-order blackbox that doesn't use the function.\n
  \ * Emit a warning if inlining limit is reached, instead of producing an error:
  compilation can still be successful if the function is an argument to a higher-order
  blackbox that doesn't use the function.\n  * Always inline terms that have a type
  of kind `Constraint`\n\n## 0.5.4 *May 10th 2015*\n* New features:\n  * Add `~COMPNAME`
  tag: primitives get access to the component name in which they are instantiated\n\n##
  0.5.3 *May 5th 2015*\n* New features:\n  * `TopEntity` wrappers are now specified
  as `ANN` annotation pragmas\n* Fixes bugs:\n  * Lost system1000 clock in VHDL generation...
  [#53](https://github.com/clash-lang/clash-compiler/issues/53)\n  * `flattenCallTree`
  sometimes introduces free variables\n\n## 0.5.2 *May 1st 2015*\n* New features:\n
  \ * Generate wrappers around `topEntity` that have constant names and types\n\n##
  0.5.1 *April 20th 2015*\n* GHC 7.10 support\n\n## 0.5 *March 11th 2015*\n* New features:\n
  \ * Simplify BlackBox handling, and improve VHDL generation. [#47](https://github.com/clash-lang/clash-compiler/issues/47)\n
  \ * Use unbound-generics. [#48](https://github.com/clash-lang/clash-compiler/issues/48)\n\n*
  Fixes bugs:\n  * VHDL generation error: wrapper for sum-of-products type. [#44](https://github.com/clash-lang/clash-compiler/issues/44)\n\n##
  0.4.1 *February 4th 2015*\n* Fixes bugs:\n  * Treat BlackBox expressions as declarations
  when DC args. [#37](https://github.com/christiaanb/clash2/issues/33)\n  * Don't
  inline recursive closed bindings\n\n## 0.4 *November 17th 2014*\n* New features:\n
  \ * Support for clash-prelude 0.6\n\n* Fixes bugs:\n  * Ambiguous type: 'std_logic_vector'
  or 'std_ulogic_vector' [#33](https://github.com/christiaanb/clash2/issues/33)\n\n##
  0.3.2 *June 5th 2014*\n\n* Fixes bugs:\n  * VHDL array constant ambiguous [#18](https://github.com/christiaanb/clash2/issues/18)\n
  \ * Exception: can't create selector [#24](https://github.com/christiaanb/clash2/issues/24)\n
  \ * Calls to `vhdlTypeMark` don't result to inclusion of VHDL type in types.vhdl
  [#28](https://github.com/christiaanb/clash2/issues/28)\n\n## 0.3.1 *May 15th 2014*\n\n*
  New features:\n  * Make ANF lift non-representable values [#7](https://github.com/christiaanb/clash2/issues/7)\n
  \ * Hardcode `fromInteger` for `Signed` and `Unsigned` [#9](https://github.com/christiaanb/clash2/issues/9)\n
  \ * Replace VHDL default hole by error hole [#13](https://github.com/christiaanb/clash2/issues/13)\n\n*
  Fixes bugs:\n  * Type families are not expanded [#3](https://github.com/christiaanb/clash2/issues/3)\n
  \ * Exception: CLaSH.Netlist.VHDL(512): fromSLV: Vector 13 Bool [#5](https://github.com/christiaanb/clash2/issues/5)\n
  \ * Incorrect vhdl generation for default value in blackbox [#6](https://github.com/christiaanb/clash2/issues/6)\n
  \ * Duplicate type names when multiple ADTs need the same amount of bits [#8](https://github.com/christiaanb/clash2/issues/8)\n
  \ * Circuit testbench generation with MAC example fails[#15](https://github.com/christiaanb/clash2/issues/15)\n\n*
  Code improvements:\n  * Refactor Netlist/BlackBox [#10](https://github.com/christiaanb/clash2/issues/10)\n
  \ * CPP special-case conversion of `Control.Exception.Base.irrefutPatError` [#11](https://github.com/christiaanb/clash2/issues/11)\n"
basic-deps:
  bytestring: ! '>=0.10.0.2'
  clash-prelude: ! '>=0.8'
  uu-parsinglib: ! '>=2.8.1'
  base: ! '>=4.8 && <5'
  time: ! '>=1.4.0.1'
  unordered-containers: ! '>=0.2.3.3'
  text: ! '>=0.11.3.1'
  filepath: ! '>=1.3.0.1'
  process: ! '>=1.1.0.2'
  containers: ! '>=0.5.0.0'
  lens: ! '>=3.9.2'
  wl-pprint-text: ! '>=1.1.0.0'
  concurrent-supply: ! '>=0.1.7'
  fgl: ! '>=5.4.2.4'
  mtl: ! '>=2.1.2'
  hashable: ! '>=1.2.1.0'
  attoparsec: ! '>=0.10.4.0'
  transformers: ! '>=0.3.0.0'
  errors: ! '>=1.4.2'
  deepseq: ! '>=1.3.0.2'
  unbound-generics: ! '>=0.1'
  pretty: ! '>=1.1.1.0'
  aeson: ! '>=0.6.2.0'
  template-haskell: ! '>=2.8.0.0'
  directory: ! '>=1.2.0.1'
all-versions:
- '0.2'
- '0.2.0.1'
- '0.2.1'
- '0.2.2'
- '0.2.2.1'
- '0.3'
- '0.3.0.1'
- '0.3.0.2'
- '0.3.0.3'
- '0.3.0.4'
- '0.3.1'
- '0.3.2'
- '0.4'
- '0.4.1'
- '0.5'
- '0.5.1'
- '0.5.2'
- '0.5.3'
- '0.5.4'
- '0.5.5'
- '0.5.6'
- '0.5.7'
- '0.5.8'
author: Christiaan Baaij
latest: '0.5.8'
description-type: markdown
description: ! "# `clash-lib`\n  * See the LICENSE file for license and copyright
  details\n"
license-name: BSD2
