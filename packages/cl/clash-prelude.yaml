changelog-type: ''
hash: 4b34de35e95018add5248e25a97bf1ce46911d86a8b9e5be098c711944214089
synopsis: CAES Language for Synchronous Hardware - Prelude library
changelog: ''
all-versions:
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- '0.5.0.1'
- '0.5.1'
- '0.6'
- '0.6.0.1'
- '0.7'
- '0.7.1'
- '0.7.2'
- '0.7.3'
- '0.7.4'
- '0.7.5'
latest: '0.7.5'
description-type: haddock
description: ! 'CλaSH (pronounced ‘clash’) is a functional hardware description language
  that

  borrows both its syntax and semantics from the functional programming language

  Haskell. The merits of using a functional language to describe hardware comes

  from the fact that combinational circuits can be directly modeled as

  mathematical functions and that functional languages lend themselves very well

  at describing and (de-)composing mathematical functions.


  This package provides:


  * Prelude library containing datatypes and functions for circuit design


  To use the library:


  * Import "CLaSH.Prelude"


  * Additionally import "CLaSH.Prelude.Explicit" if you want to design

  explicitly clocked circuits in a multi-clock setting


  A preliminary version of a tutorial can be found in "CLaSH.Tutorial", for a

  general overview of the library you should however check out "CLaSH.Prelude".'
