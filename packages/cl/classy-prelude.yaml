homepage: https://github.com/snoyberg/mono-traversable
changelog-type: markdown
hash: 6a0edb6787d16b486a4382b2165ae2aa9b78a61a132f04d4606baef285692f7e
test-bench-deps:
  base: -any
  unordered-containers: -any
  hspec: ! '>=1.3'
  containers: -any
  classy-prelude: -any
  transformers: -any
  QuickCheck: -any
maintainer: michael@snoyman.com
synopsis: A typeclass-based Prelude.
changelog: ! '## 1.0.0


  * Support for mono-traversable-1.0.0

  * Switch to safe-exceptions

  * Add monad-unlift and lifted-async


  ## 0.12.8


  * Add (<&&>),(<||>) [#125](https://github.com/snoyberg/classy-prelude/pull/125)


  ## 0.12.7


  * Concurrency: reexport `Control.Concurrent.Lifted` and provide `yieldThread`


  ## 0.12.6


  * Regeneralize intercalate [#119](https://github.com/snoyberg/classy-prelude/pull/119)

  * Add missing exports for `traverse_` and `for_`

  * Generalize `mapM_` and `forM_` for GHC 7.10


  ## 0.12.5.1


  * Support for QuickCheck 2.8.2


  ## 0.12.5


  * Expose `Alternative` and `optional`


  ## 0.12.4


  * Expose `traverse_` and `for_`


  ## 0.12.3


  * mono-traversable-0.9.3 support


  ## 0.12.2


  add `errorM`, `terrorM`, and `terror`


  ## 0.12.0


  * Drop system-filepath


  ## 0.11.1.1


  * Compatibility with time >= 1.5 [#100](https://github.com/snoyberg/classy-prelude/pull/100)


  ## 0.11.1


  * Fix deprecation warnings for `elem`


  ## 0.11.0


  * Upgrade to mutable-containers 0.3

  * Include dlist support


  ## 0.10.5


  * Export `Data.Mutable`


  ## 0.10.4


  * Expose all of Data.Functor


  ## 0.10.3


  * Expose `liftA` functions and `<**>` [#94](https://github.com/snoyberg/classy-prelude/pull/94)


  ## 0.10.2


  * Provide `foldMap` and `fold` as synonyms for `concatMap` and `concat`.

  * Switch to more general `Traversable`-based functions (`sequence_` in particular).

'
basic-deps:
  exceptions: ! '>=0.5'
  bytestring: -any
  stm: -any
  base: ! '>=4 && <5'
  time: -any
  unordered-containers: -any
  text: -any
  basic-prelude: ! '>=0.4 && <0.6'
  safe-exceptions: ! '>=0.1.1'
  async: -any
  lifted-base: ! '>=0.2'
  mono-traversable-instances: -any
  dlist: ! '>=0.7'
  vector-instances: -any
  semigroups: -any
  containers: ! '>=0.4.2'
  bifunctors: -any
  mutable-containers: ! '>=0.3 && <0.4'
  chunked-data: ! '>=0.3'
  ghc-prim: -any
  mtl: -any
  lifted-async: ! '>=0.3'
  hashable: -any
  transformers-base: -any
  monad-unlift: ! '>=0.2'
  transformers: -any
  deepseq: -any
  mono-traversable: ! '>=1.0'
  primitive: -any
  vector: -any
  time-locale-compat: -any
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.2.0.1'
- '0.3.0'
- '0.3.1'
- '0.4.0'
- '0.4.0.1'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.4.4'
- '0.5.0'
- '0.5.1'
- '0.5.2'
- '0.5.3'
- '0.5.4'
- '0.5.6'
- '0.5.7'
- '0.5.8'
- '0.5.9'
- '0.5.10'
- '0.6.0'
- '0.6.0.1'
- '0.7.0'
- '0.8.0'
- '0.8.0.1'
- '0.8.1'
- '0.8.1.1'
- '0.8.2'
- '0.8.3'
- '0.8.3.1'
- '0.9.0'
- '0.9.1'
- '0.9.2'
- '0.9.3'
- '0.9.4'
- '0.9.5'
- '0.10.0'
- '0.10.1'
- '0.10.2'
- '0.10.3'
- '0.10.4'
- '0.10.5'
- '0.11.0'
- '0.11.1'
- '0.11.1.1'
- '0.12.0'
- '0.12.0.1'
- '0.12.1'
- '0.12.1.1'
- '0.12.3'
- '0.12.4'
- '0.12.5'
- '0.12.5.1'
- '0.12.6'
- '0.12.7'
- '0.12.8'
- '1.0.0'
author: Michael Snoyman
latest: '1.0.0'
description-type: markdown
description: ! "classy-prelude\n==============\n\nA better Prelude. Haskell's Prelude
  needs to maintain backwards compatibility and has many aspects that no longer represents
  best practice. The goals of classy-prelude are:\n\n* remove all partial functions\n*
  modernize data structures\n  * generally use Text instead of String\n  * encourage
  the use of appropriate data structures such as Vectors or HashMaps instead of always
  using lists and associated lists\n* reduce import lists and the need for qualified
  imports\n\nclassy-prelude [should only be used by application developers](http://www.yesodweb.com/blog/2013/10/prelude-replacements-libraries).
  Library authors should consider using [mono-traversable](https://github.com/snoyberg/mono-traversable/blob/master/README.md),
  which classy-prelude builds upon.\n\nIt is worth noting that classy-prelude [largely
  front-ran changes that the community made to the base Prelude in GHC 7.10](http://www.yesodweb.com/blog/2014/10/classy-base-prelude).\n\nmono-traversable\n================\n\nMost
  of this functionality is provided by [mono-traversable](https://github.com/snoyberg/mono-traversable).
  Please read the README over there. classy-prelude gets rid of the `o` prefix from
  mono-traversable functions.\n\n\nText\n====\n\nLots of things use `Text` instead
  of `String`.\nNote that `show` returns a `String`.\nTo get back `Text`, use `tshow`.\n\n\nother
  functionality\n===================\n\n* exceptions package\n* system-filepath convenience
  functions\n* whenM, unlessM\n* hashNub and ordNub (efficient nub implementations).\n\n\nUsing
  classy-prelude\n====================\n\n* use the NoImplicitPrelude extension (you
  can place this in your cabal file) and `import ClassyPrelude`\n* use [base-noprelude](https://github.com/hvr/base-noprelude)
  in your project and define a Prelude module that re-exports `ClassyPrelue`.\n\n\nAppendix\n========\n\n*
  The [mono-traversable](https://github.com/snoyberg/mono-traversable) README.\n*
  [The transition to the modern design of classy-prelude](http://www.yesodweb.com/blog/2013/09/classy-mono).\n\nThese
  blog posts contain some out-dated information but might be helpful\n* [So many preludes!](http://www.yesodweb.com/blog/2013/01/so-many-preludes)
  (January 2013)\n* [ClassyPrelude: The good, the bad, and the ugly](http://www.yesodweb.com/blog/2012/08/classy-prelude-good-bad-ugly)
  (August 2012)\n\n\n\n"
license-name: MIT
