homepage: https://bitbucket.org/bwbush/vrpn
changelog-type: ''
hash: 57814d9616939d8ad1046919cdddf437b9a964653d192bc46abdf22e7f3ec807
test-bench-deps: {}
maintainer: Brian W Bush <consult@brianwbush.info>
synopsis: Bindings to VRPN.
changelog: ''
basic-deps:
  base: ! '>=4.8.1 && <5'
all-versions:
- '0.2.0.0'
- '0.2.1.0'
- '0.2.1.3'
author: Brian W Bush <consult@brianwbush.info>
latest: '0.2.1.3'
description-type: markdown
description: ! "Bindings for VRPN\n=================\n\nThis package contains bindings
  to VRPN, <<https://github.com/vrpn/vrpn/wiki>> and is loosely modeled on the code
  in <<https://github.com/vrpn/vrpn/blob/master/client_src/vrpn_print_devices.C>>.
  \ This has been tested using VRPN 07.30 on Linux.  It requires the VRPN C++ header
  files.\n\nPlease report issues at <<https://bwbush.atlassian.net/projects/HVRPN/issues/>>.\n\n\nSkeletal
  example illustrating the use of VRPN bindings\n------------------------------------------------------\n\n```haskell\ndata
  ButtonType = LeftButton | RightButton\n  deriving (Enum, Eq, Show)\n\nmain :: IO
  ()\nmain =\n  do\n    putStrLn \"Press the left button to exit.\"\n    done <- newEmptyMVar\n
  \   let\n      -- A remote button that signals completion when the left button is
  released.\n      button :: Device Int ButtonType Double\n      button =\n        Button
  \"spacenav0@localhost\"\n          $ Just\n          $ \\time button state ->\n
  \           do\n              print (time, button, state)\n              if button
  == LeftButton && not state\n                then void $ tryPutMVar done ()\n                else
  return ()\n      -- An analog device.\n      analog :: Device Int Int Int Double\n
  \     analog = Analog \"spacenav0@localhost\"\n        $ Just\n        $ curry print\n
  \   -- Open the remote devices.\n    devices <- sequence [openDevice button, openDevice
  analog]\n    -- Loop until a signal to complete is received.\n    mainLoops (not
  <$> isEmptyMVar done) 10 devices\n    -- Close the remote devices.\n    mapM_ closeDevice
  devices\n```\n"
license-name: MIT
