homepage: ''
changelog-type: ''
hash: d6533d01f61c3d03eae7b8530d53c43d435773c5bb942336ce9aa4b0cccbf0c0
test-bench-deps: {}
maintainer: kai@kzhang.org
synopsis: Scientific workflow management system
changelog: ''
basic-deps:
  shelly: -any
  bytestring: -any
  split: -any
  base: ! '>=4.0 && <5.0'
  data-default-class: -any
  unordered-containers: ! '>=0.2'
  text: -any
  lens: ! '>=4.0'
  mtl: -any
  optparse-applicative: -any
  th-lift: -any
  template-haskell: -any
  yaml: -any
all-versions:
- '0.1.0'
- '0.2.0'
- '0.3.0'
author: Kai Zhang
latest: '0.3.0'
description-type: haddock
description: ! 'SciFlow is to help programmers design complex workflows

  with ease.


  Feature includes:


  1. Use "labeled" arrows to connect individual steps

  and cache computational results.


  2. Use monad and template haskell to automate the process

  of building DAGs.


  Here is a trivial example. Since we use template haskell,

  we need to divide this small program into two files.


  > -- File 1: MyModule.hs

  >

  > module MyModule where

  >

  > import Control.Arrow

  > import Scientific.Workflow

  >

  > input :: Actor () Int

  > input = arr $ const 10

  >

  > plus1 :: Actor Int Int

  > plus1 = arr (+1)

  >

  > mul2 :: Actor Int Int

  > mul2 = arr (*2)

  >

  > combine :: Actor (Int, Int) Int

  > combine = arr $ \(a,b) -> a + b

  >

  > -- builder monad

  > builder :: Builder ()

  > builder = do

  > node "id000" "input" "this is input"

  > node "id001" "plus1" "add 1 to the input"

  > node "id002" "mul2" "double the input"

  > node "id003" "combine" "combine two input"

  >

  > "id000" ~> "id001"

  > "id000" ~> "id002"

  > link2 ("id001", "id002") "id003"

  >

  > --------------------------------------------

  > -- File 2: main.hs

  >

  > import Scientific.Workflow

  > import MyModule

  > import Data.Default

  >

  > -- assemble workflow using template haskell

  > $(mkWorkflow "myWorkflow" builder)

  >

  > main = do result <- runWorkflow myWorkflow def

  >           print result

'
license-name: MIT
