changelog-type: ''
hash: ca50f0917ec72f3b7c6c56da9f97a2ebc1c34aa78922df8015b897a49626a6f6
synopsis: Tradeking API bindings for Haskell
changelog: ''
all-versions:
- '0.1.0'
latest: '0.1.0'
description-type: haddock
description: ! 'This is a Haskell binding for the TradeKing developers API (https://developers.tradeking.com/).


  It currently supports retrieving quotes and stock information, as well as the quote
  and trade

  streaming API.


  Support for the other TradeKing API endpoints is forthcoming.


  To use, install the package via cabal. This will create an executable called `tradeking`.
  To

  connect to the TradeKing API, you will need to create a new personal application
  from the

  TradeKing developers site. This should give you four strings: an OAuth consumer
  key, an OAuth

  consumer secret, an OAuth Token, and an OAuth Token Secret. You supply these into
  the

  `tradeking` application using a configuration file (either `$(HOME)/.tradeking`
  or

  `/etc/tradeking.conf`). This configuration file should look like:


  > consumer-key = <tradeking consumer key>

  > consumer-secret = <tradeking consumer secret>

  > oauth-token = <tradeking oauth token>

  > oauth-token-secret = <tradeking oauth token secret>


  Now you can run `tradeking quote SPY` to have it return the current quote for the
  S&P 500

  ETF. `tradeking info MSFT` will provide information on Microsoft, and `tradeking
  stream MSFT`

  will provide a live stream of `MSFT` quotes. All commands accept more than one stock,
  so

  `tradeking quote MSFT AAPL`, `tradeking info MSFT SPY`, and `tradeking stream SPY
  AAPL` work as

  expected (subject to TradeKing) limits.


  You can also request quotes programmatically, using the API described here.'
