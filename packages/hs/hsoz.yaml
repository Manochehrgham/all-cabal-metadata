homepage: https://github.com/rvl/hsoz#readme
changelog-type: ''
hash: 68ef27507751fae555d4f0cc38b9ef7d3acf25cb837b290227a376ad26dc58f8
test-bench-deps:
  http-client: -any
  bytestring: -any
  wai: -any
  base: -any
  tasty-golden: -any
  time: -any
  text: -any
  data-default: -any
  HUnit: -any
  tasty-quickcheck: -any
  tasty-hunit: -any
  tasty: -any
  QuickCheck: -any
  hsoz: -any
  http-types: -any
  aeson: -any
maintainer: dev@rodney.id.au
synopsis: ! 'Iron, Hawk, Oz: Web auth protocols'
changelog: ''
basic-deps:
  warp: -any
  http-client: -any
  lucid: -any
  either: -any
  bytestring: -any
  wai: -any
  case-insensitive: -any
  base: ! '>=4.7 && <5'
  time: -any
  base64-bytestring: -any
  text: -any
  network: -any
  data-default: -any
  wreq: -any
  memory: -any
  containers: -any
  uri-bytestring: -any
  lens: -any
  vault: -any
  securemem: -any
  cryptonite: -any
  mtl: -any
  byteable: -any
  base16-bytestring: -any
  attoparsec: -any
  transformers: -any
  errors: -any
  scientific: -any
  http-conduit: -any
  hsoz: -any
  scotty: -any
  http-types: -any
  aeson: -any
all-versions:
- '0.0.0.2'
author: Rodney Lorrimar
latest: '0.0.0.2'
description-type: haddock
description: ! '<<images/iron.png>> &#x20;__&#x20;

  <<images/hawk.png>> &#x20;__&#x20;

  <<images/oz.png>>


  __hsoz__ is a Haskell implementation of the Iron, Hawk, and Oz web

  authentication protocols. These protocols originate from the OAuth2

  standardisation process, but are designed to be simpler to implement

  for the common case of web applications.


  This module is based on the Javascript code and documentation by

  Eran Hammer and others. A fair amount of Hammer''s descriptive text

  has been incorporated into this documentation, as well as the cool

  logos.


  == Introduction


  In the words of their principal designer:


  __Iron__ is a cryptographic utility for sealing a JSON object using

  symmetric key encryption with message integrity verification. Or in

  other words, it lets you encrypt an object, send it around (in

  cookies, authentication credentials, etc.), then receive it back and

  decrypt it. The algorithm ensures that the message was not tampered

  with, and also provides a simple mechanism for password rotation.


  __Hawk__ is an HTTP authentication scheme using a message

  authentication code (MAC) algorithm to provide partial HTTP request

  cryptographic verification.


  __Oz__ is a web authorization protocol based on industry best

  practices. Oz combines the Hawk authentication protocol with the

  Iron encryption protocol to provide a simple to use and secure

  solution for granting and authenticating third-party access to an

  API on behalf of a user or an application.


  == Usage


  The top-level "Network.Iron", "Network.Hawk", "Network.Oz" modules

  contain further instructions on their usage. There are also some

  example server and client programs within the

  <https://github.com/rvl/hsoz project git repository>.'
license-name: BSD3
