homepage: ''
changelog-type: markdown
hash: b5aab01f5b36ae5651064ca4005bb43e5a38256ff5dbadcaaa932d7c589f6476
test-bench-deps:
  hspec-contrib: -any
  bytestring: -any
  base: -any
  hspec: -any
  text: -any
  HUnit: -any
  quickcheck-instances: -any
  QuickCheck: ! '>=2.7'
  hslua: -any
maintainer: omeragacan@gmail.com
synopsis: A Lua language interpreter embedding in Haskell
changelog: ! "## Changelog\n\n### 0.4.1\n\n* Bugfix(#30): `tolist` wasn't popping
  elements of the list from stack.\n\n### 0.4.0\n\n* `pushstring` and `tostring` now
  uses `ByteString` instead of `[Char]`.\n* `StackValue [Char]` instance is removed,
  `StackValue ByteString` is added.\n* `StackValue a => StackValue [a]` instance is
  added. It pushes a Lua array to\n  the stack. `pushlist`, `islist` and `tolist`
  functions are added.\n* Type errors in Haskell functions now propagated differently.
  See the\n  `Scripting.Lua` documentation for detailed explanation. This should fix\n
  \ segfaults reported several times.\n* `lua_error` function is removed, it's never
  safe to call in Haskell.\n\nRelated issues and pull requests: #12, #26, #24, #23,
  #18.\n\n### 0.3.14\n\n* Pkgconf-based setup removed. Cabal is now using `extra-libraries`
  to link with Lua.\n* `luajit` flag is added to link hslua with LuaJIT.\n\n### 0.3.13\n\n*
  Small bugfix related with GHCi running under Windows.\n\n### 0.3.12\n\n* `pushrawhsfunction`
  and `registerrawhsfunction` functions are added.\n* `apicheck` flag is added to
  Cabal package to enable Lua API checking. (useful for debugging)\n\n### 0.3.11\n\n*
  `luaL_ref` and `luaL_unref` functions are added.\n"
basic-deps:
  bytestring: ! '>=0.10.2.0 && <0.11'
  base: ==4.*
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.3.2'
- '0.3.3'
- '0.3.4'
- '0.3.5'
- '0.3.6'
- '0.3.6.1'
- '0.3.7'
- '0.3.8'
- '0.3.9'
- '0.3.10'
- '0.3.11'
- '0.3.12'
- '0.3.13'
- '0.4.0'
- '0.4.1'
author: Gracjan Polak, Ömer Sinan Ağacan
latest: '0.4.1'
description-type: markdown
description: ! '# hslua -- Lua interpreter interface for Haskell


  [![Build Status](https://travis-ci.org/osa1/hslua.svg?branch=master)](https://travis-ci.org/osa1/hslua)

  [![Coverage Status](https://coveralls.io/repos/osa1/hslua/badge.svg?branch=master&service=github)](https://coveralls.io/github/osa1/hslua?branch=master)

  [![Hackage](https://budueba.com/hackage/hslua)](https://hackage.haskell.org/package/hslua)


  To use system-wide installed Lua/LuaJIT when linking hslua as a dependency, build/install
  your package using `--constraint="hslua +system-lua"` or for LuaJIT: `--constraint="hslua
  +system-lua +luajit"`. For example, you can install Pandoc with hslua that uses
  system-wide LuaJIT like this:


  ```

  cabal install pandoc --constraint="hslua +system-lua +luajit"

  ```


  (Note that `-fluajit` flag is added with hslua 0.3.14)

'
license-name: MIT
