homepage: ''
changelog-type: markdown
hash: a149df23ce7dc12f1ea63691b9d2f4e0f1c9b76c8f05dd10b5be378c8fdb82c2
test-bench-deps: {}
maintainer: Dino Morelli <dino@ui3.info>
synopsis: Install Haskell software
changelog: ! "1.6 (2017-07-01)\n\n   * Changed base lower bound from 4.9 to 4.8\n
  \  * Updated stack snapshot to lts-8.21\n   * Added HCAR listing content\n   * Removed
  defunct cabal stability field\n   * Adjusted some documentation in the README\n
  \  * Moved copyright date up to 2017\n\n\n1.5 (2016-10-16)\n\n   * Now creating
  bin directory prior to stack install\n   * Removed comments from auto-generated
  stack.yaml\n\n\n1.4 (2016-10-11)\n\n   * Added missing files to extra-source-files\n
  \  * Added switch for making a symlink to the app directory\n\n\n1.3 (2016-10-07)\n\n
  \  * Fixed error in docs\n\n\n1.2 (2016-10-07)\n\n   * Added example additional
  script copying code\n   * Updated developer instructions\n   * Added a tested-with
  line to the cabal file\n\n\n1.1 (2016-10-07)\n\n   * Updated to stackage lts-7.2\n\n\n1.0
  (2016-10-02)\n\n   * Cleaned up cabal file\n   * Wrote API docs\n   * Cleaned up
  README\n   * Aborting the installation if `stack install` fails\n   * Added instructions
  for compiling install.hs\n   * Added library for locating resources at runtime\n
  \  * Initial release\n"
basic-deps:
  base: ! '>=4.8 && <5.0'
  filepath: -any
  hsinstall: -any
  directory: -any
all-versions:
- '1.0'
- '1.1'
- '1.2'
- '1.3'
- '1.4'
- '1.5'
- '1.6'
author: Dino Morelli
latest: '1.6'
description-type: markdown
description: ! "# hsinstall\n\n\n## Synopsis\n\nInstall Haskell software\n\n\n## Description\n\nThis
  is a utility to install Haskell programs on a system using\nstack. Even though stack
  has an `install` command, I found it to be\nnot enough for my needs. This software
  tries to install the binaries,\nthe LICENSE file and also the resources directory
  if it finds one.\n\nInstallations can be performed in one of two directory\nstructures.
  FHS, or the Filesystem Hierarchy Standard (most UNIX-like\nsystems) and what I call
  \"bundle\" which is a portable directory\nfor the app and all of its files. They
  look like this:\n\nbundle is sort-of a self-contained structure like this:\n\n     $PREFIX/\n
  \      $PROJECT-$VERSION/\n         bin/...\n         doc/LICENSE\n         resources/...\n\nfhs
  is the more traditional UNIX structure like this:\n\n     $PREFIX/\n       bin/...\n
  \      share/\n         $PROJECT-$VERSION/\n           doc/LICENSE\n           resources/...\n\nThere
  are two parts to hsinstall that are intended to work \ntogether. The first part
  is a Haskell shell script,\n`util/install.hs`. Take a copy of this script and check
  it into\na project you're working on. This will be your installation\nscript. Running
  the script with the `--help` switch will explain\nthe options. Near the top of the
  script are default values for\nthese options that should be tuned to what your project
  needs.\n\nThe other part of hsinstall is a library. The install script will try\nto
  install a `resources` directory if it finds one. the HSInstall\nlibrary code is
  then used in your code to locate the resources\nat runtime.\n\nNote that you only
  need this library if your software has data files\nit needs to locate at runtime
  in the installation directories. Many\nprograms don't have this requirement and
  can ignore the library\naltogether.\n\nThe application in this project, in the `app`
  dir, is a demo of\nusing the library to locate resources. It has no use other than
  as\na live example.\n\nThe `install.hs` script is deliberately not being compiled
  so that\nit's flexible and hackable by developers to serve whatever additional\ninstallation
  needs they may have for a given project. It's also\ndeliberately self-contained,
  relying on nothing other than core\nlibraries that ship with the GHC.\n\n\n## Development\n\nFor
  developers who need to build against a local copy of hsinstall\nI found this technique
  useful. Get a copy of the source code:\n\n      $ darcs clone http://hub.darcs.net/dino/hsinstall\n\nor\n\n
  \     $ stack unpack hsinstall\n\nIn another project (nearby on your system, say),
  modify `stack.yaml`:\n\n      packages:\n      - '.'\n      - location: /path/to/hsinstall-x.y\n
  \       extra-dep: true\n      extra-deps:\n      - hsinstall-x.y\n\nAnd then you
  should be able to build against this copy of\nhsinstall. Of course, these are just
  examples, the version numbers\nabove will almost certainly be different.\n\n\n##
  Contact\n\n### Authors\n\nDino Morelli <dino@ui3.info>\n"
license-name: ISC
