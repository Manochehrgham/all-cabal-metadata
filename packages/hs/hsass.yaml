homepage: https://github.com/jakubfijalkowski/hsass
changelog-type: markdown
hash: 3c6b93d4d22d616b600b9a27a95f273425dd736e766de7741dc6210423fb1ef3
test-bench-deps:
  hsass: -any
  base: ! '>=4.7 && <5'
  data-default-class: -any
  hspec: ! '>=2.1.5'
  temporary: ! '>=1.1'
  hspec-discover: ! '>=2.1.5'
maintainer: fiolek94@gmail.com
synopsis: Integrating Sass into Haskell applications.
changelog: ! '# Change Log

  All notable changes to this project will be documented in this file.

  This project adheres to [Semantic Versioning](http://semver.org/).


  ## 0.1.0 - 2015-04-11

  ### Added

  - Support for functions, importers, headers and sass values.

  - Compilation of files and strings.

'
basic-deps:
  base: ! '>=4.7 && <4.8'
  data-default-class: -any
  monad-loops: ! '>=0.3'
  filepath: ! '>=1.0'
  mtl: ! '>=2.2'
  hlibsass: ! '>=0.1.1'
all-versions:
- '0.1.0'
author: Jakub Fija≈Çkowski <fiolek94@gmail.com>
latest: '0.1.0'
description-type: haddock
description: ! 'This package provides quite simple (but not too simple) API for

  compilation of <http://sass-lang.com/ Sass> code. It uses

  <http://libsass.org libsass> (hlibsass) underneath, so the code it

  parses/generates should be compatible with original Sass implementation (or at

  least <http://libsass.org/#sassc sassc>).

  This package tries to minimize C API usage, so the only place where it is used

  is in the ''compileFile'' / ''compileString'' methods. This allows us to stay pure

  as long as we can and not waste performance for going back and forth.

  If you feel that compilation options constrain you too much, you may use rest

  of modules without it. With them, you can use Haskell types and mechanisms to

  manage libsass''s data(eg. importers, options, values) and modify compilation

  process as you like.'
license-name: MIT
