homepage: http://www.spock.li
changelog-type: ''
hash: 518d9e38a072c0b56d9946e043421f1ed2ecac52419727378eb8642f06b4e640
test-bench-deps:
  Spock: -any
  bytestring: -any
  wai: -any
  stm: -any
  base: -any
  time: -any
  base64-bytestring: ! '>=1.0'
  unordered-containers: -any
  hspec: ! '>=2.0'
  text: -any
  reroute: -any
  hspec-wai: ! '>=0.6'
  wai-extra: -any
  http-types: -any
maintainer: Alexander Thiemann <mail@athiemann.net>
synopsis: Another Haskell web framework for rapid development
changelog: ''
basic-deps:
  warp: ! '>=3.0'
  focus: ! '>=0.1'
  bytestring: ! '>=0.10'
  wai: ! '>=3.0'
  case-insensitive: ! '>=1.1'
  stm: ! '>=2.4'
  base: ! '>=4 && <5'
  time: ! '>=1.4'
  base64-bytestring: ! '>=1.0'
  unordered-containers: ! '>=0.2'
  text: ! '>=0.11.3.1'
  list-t: ! '>=0.4'
  monad-control: ! '>=1.0'
  resource-pool: ! '>=0.2'
  reroute: ! '>=0.3.1'
  path-pieces: ! '>=0.1.4'
  containers: ! '>=0.5'
  hvect: ! '>=0.2'
  vault: ! '>=0.3'
  old-locale: ! '>=1.0'
  mtl: ! '>=2.1'
  crypto-random: ! '>=0.0.8'
  hashable: ! '>=1.2'
  transformers-base: ! '>=0.4'
  wai-extra: ! '>=3.0'
  transformers: ! '>=0.3'
  random: ! '>=1.0'
  stm-containers: ! '>=0.2'
  resourcet: ! '>=0.4'
  http-types: ! '>=0.8'
  aeson: ! '>=0.7'
  directory: ! '>=1.2'
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.1.2.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.4.0.0'
- '0.4.0.1'
- '0.4.1.0'
- '0.4.2.0'
- '0.4.2.1'
- '0.4.2.2'
- '0.4.2.3'
- '0.4.2.4'
- '0.4.3.0'
- '0.4.3.1'
- '0.4.3.2'
- '0.4.3.3'
- '0.4.3.4'
- '0.4.3.5'
- '0.4.4.0'
- '0.4.4.1'
- '0.5.0.0'
- '0.5.0.1'
- '0.5.1.0'
- '0.6.0.0'
- '0.6.1.0'
- '0.6.1.1'
- '0.6.1.2'
- '0.6.1.3'
- '0.6.2.0'
- '0.6.2.1'
- '0.6.2.2'
- '0.6.2.3'
- '0.6.3.0'
- '0.6.4.0'
- '0.6.5.0'
- '0.6.6.0'
- '0.6.6.1'
- '0.7.0.0'
- '0.7.1.0'
- '0.7.2.0'
- '0.7.3.0'
- '0.7.4.0'
- '0.7.5.0'
- '0.7.5.1'
- '0.7.5.2'
- '0.7.6.0'
- '0.7.7.0'
- '0.7.8.0'
- '0.7.9.0'
- '0.7.10.0'
- '0.7.11.0'
- '0.7.12.0'
- '0.8.0.0'
- '0.8.1.0'
- '0.9.0.0'
- '0.9.0.1'
- '0.10.0.0'
- '0.10.0.1'
author: Alexander Thiemann <mail@athiemann.net>
latest: '0.10.0.1'
description-type: markdown
description: ! "Spock\n=====\n\n[![Build Status](https://travis-ci.org/agrafix/Spock.svg)](https://travis-ci.org/agrafix/Spock)\n[![Hackage](https://img.shields.io/hackage/v/Spock.svg)](http://hackage.haskell.org/package/Spock)\n\n##
  Intro\n\nHackage: [Spock](http://hackage.haskell.org/package/Spock)\nStackage: [Spock](https://www.stackage.org/package/Spock)\n\nAnother
  Haskell web framework for rapid development\n\n\n## Library Usage Example\n\n```haskell\n{-#
  LANGUAGE OverloadedStrings #-}\nimport Web.Spock\n\nimport qualified Data.Text as
  T\n\nmain =\n    runSpock 3000 $ spockT id $\n    do get (\"echo\" <//> var) $ \\something
  ->\n        text $ T.concat [\"Echo: \", something]\n\n```\n\nFor more examples
  check the examples/ directory.\n\n## Install\n\n* Using cabal: `cabal install Spock`\n*
  Using Stack: `stack install Spock`\n* From Source (cabal): `git clone https://github.com/agrafix/Spock.git
  && cd Spock && cabal install`\n* From Source (stack): `git clone https://github.com/agrafix/Spock.git
  && cd Spock && stack build`\n\n## Features\n\nAnother Haskell web framework for
  rapid development: This toolbox provides\neverything you need to get a quick start
  into web hacking with haskell:\n\n* fast routing (both typesafe and \"untyped\")\n*
  middleware\n* json\n* sessions\n* cookies\n* database helper\n* csrf-protection\n*
  typesafe contexts\n\n## Important Links\n\n* [Tutorial](https://www.spock.li/tutorial/)\n*
  [Type-safe routing in Spock](https://www.spock.li/2015/04/19/type-safe_routing.html)
  \n* [Taking Authentication to the next Level](https://www.spock.li/2015/08/23/taking_authentication_to_the_next_level.html)\n\n###
  Talks\n\n* English: [Beginning Web Programming in Haskell (using Spock)](https://www.youtube.com/watch?v=GobPiGL9jJ4)
  (by Ollie Charles)\n* German: [Moderne typsichere Web-Entwicklung mit Haskell](https://dl.dropboxusercontent.com/u/15078797/talks/typesafe-webdev-2015.pdf)
  (by Alexander Thiemann)\n* German: [reroute-talk](https://github.com/timjb/reroute-talk)
  (by Tim Baumann)\n\n## Candy\n\n### Extensions\n\nThe following Spock extensions
  exist:\n\n* Background workers for Spock: [Spock-worker](http://hackage.haskell.org/package/Spock-worker)\n*
  Digestive functors for Spock: [Spock-digestive](http://hackage.haskell.org/package/Spock-digestive)\n\n###
  Works well with Spock\n\n* User management [users](http://hackage.haskell.org/package/users)\n*
  Data validation [validate-input](http://hackage.haskell.org/package/validate-input)\n*
  Blaze bootstrap helpers [blaze-bootstrap](http://hackage.haskell.org/package/blaze-bootstrap)\n*
  digestive-forms bootstrap helpers [digestive-bootstrap](http://hackage.haskell.org/package/digestive-bootstrap)\n\n###
  Benchmarks\n\nPlease note that these benchmarks might not be up to date anymore.\n\n*
  https://github.com/philopon/apiary-benchmark\n* https://github.com/agrafix/Spock-scotty-benchmark\n\n##
  Example Projects\n\n* [funblog](https://github.com/agrafix/funblog)\n* [makeci](https://github.com/openbrainsrc/makeci)\n*
  [curry-recipes](https://github.com/timjb/reroute-talk/tree/06574561918b50c1809f1e24ec7faeff731fddcf/curry-recipes)\n\n##
  Notes\n\nSince version 0.7.0.0 Spock supports typesafe routing. If you wish to continue
  using the untyped version of Spock you can Use `Web.Spock.Simple`. The implementation
  of the routing is implemented in a separate haskell package called `reroute`.\n\nSince
  version 0.5.0.0 Spock is no longer built on top of scotty. The\ndesign and interface
  is still influenced by scotty, but the internal\nimplementation differs from scotty's.\n\n##
  Thanks to\n\n* Tim Baumann [Github](https://github.com/timjb) (lot's of help with
  typesafe routing)\n* Tom Nielsen [Github](https://github.com/glutamate)  (much feedback
  and small improvements)\n* ... and all other awesome [contributors](https://github.com/agrafix/Spock/graphs/contributors)!\n\n##
  Hacking\n\nPull requests are welcome! Please consider creating an issue beforehand,
  so we can discuss what you would like to do. Code should be written in a consistent
  style throughout the project. Avoid whitespace that is sensible to conflicts. (E.g.
  alignment of `=` signs in functions definitions) Note that by sending a pull request
  you agree that your contribution can be released under the BSD3 License as part
  of the `Spock` package or related packages.\n\n\n## Misc\n\n### Supported GHC Versions\n\n*
  7.6.3\n* 7.8.4\n* 7.10.2\n\n### License\n\nReleased under the BSD3 license.\n(c)
  2013 - 2015 Alexander Thiemann\n"
license-name: BSD3
