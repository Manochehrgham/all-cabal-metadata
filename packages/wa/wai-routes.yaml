changelog-type: ''
hash: 584c60d2a99ccb4960a120947b037e72cfee405fd9f1e85fdcd9a4040f32d5f5
synopsis: Typesafe URLs for Wai applications.
changelog: ''
all-versions:
- '0.1'
- '0.2'
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.2.4'
- '0.3.0'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.3.4'
- '0.4.0'
- '0.4.1'
- '0.5.0'
- '0.5.1'
latest: '0.5.1'
description-type: haddock
description: ! 'Provides easy to use typesafe URLs for Wai Applications.


  Sample usage follows (See examples/Example.hs in the source bundle for the full
  code) -


  @

  &#123;-&#35; LANGUAGE OverloadedStrings, TypeFamilies &#35;-&#125;


  import Network.Wai

  import Network.Wai.Middleware.Routes


  import Data.IORef


  &#45;&#45; The Site Argument

  data MyRoute = MyRoute (IORef DB)


  &#45;&#45; Generate Routes

  mkRoute "MyRoute" &#91;parseRoutes&#124;

  &#47;             UsersR         GET

  &#47;user&#47;&#35;Int    UserR&#58;

  &#32;&#32;/              UserRootR   GET

  &#32;&#32;/delete        UserDeleteR POST

  &#124;&#93;


  &#45;&#45; Define Handlers

  &#45;&#45; All Users Page

  getUsersR &#58;&#58; Handler MyRoute

  getUsersR (MyRoute dbref) request = ...

  &#45;&#45; Single User Page

  getUserRootR &#58;&#58; Int -> Handler MyRoute

  getUserRootR userid (MyRoute dbref) request = ...

  &#45;&#45; Delete Single User

  postUserDeleteR &#58;&#58; Int -> Handler MyRoute

  postUserDeleteR userid (MyRoute dbref) request = ...


  &#45;&#45; Define Application using RouteM Monad

  myApp = do

  &#32;&#32;db <- liftIO &#36; newIORef mydb

  &#32;&#32;route (MyRoute db)

  &#32;&#32;setDefaultAction $ staticApp $ defaultFileServerSettings &#34;static&#34;


  &#45;&#45; Run the application

  main &#58;&#58; IO ()

  main = toWaiApp myApp >>= run 8080

  @'
