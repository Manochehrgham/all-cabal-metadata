homepage: ''
changelog-type: markdown
hash: fb612b9e5e2e7c31e222c962025e110dfebbfdd1c56f90f4bc73383e20860237
test-bench-deps: {}
maintainer: martin@grabmueller.de
synopsis: WAD file utilities.
changelog: ! '## 0.1.0.2


  * Cosmetics.


  ## 0.1.0.1


  * Cosmetics.


  ## 0.1.0.0


  * Initial version, includes:

  * WAD file parsing

  * dumping of levels, sprites, textures as JavaScript code

  * including a HTML5 viewer that can display the exported WAD data

  * Support for DOOM/DOOM II WADs.

'
basic-deps:
  waddle: -any
  bytestring: ! '>=0.10'
  case-insensitive: ! '>=1.2'
  base: ==4.7.*
  containers: ! '>=0.5.5.1'
  binary: ! '>=0.7'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
author: Martin Grabmueller
latest: '0.1.0.2'
description-type: markdown
description: ! "# Waddle, a library of WAD utilities\n\nWaddle is a library for reading
  the contents of WAD files.\n\nIt can be used to parse WAD files into Haskell data\ntypes.
  Additionaly, WAD data can be exported to JavaScript code.\n\nIn the folder \"visualizer\",
  there is a HTML5/Canvas viewer for the\nexported data.\n\nWaddle has been tested
  with DOOM.WAD, DOOM2.WAD, PLUTONIA.WAD and\nTNT.WAD from Ultimate DOOM, DOOM II
  and Final DOOM.\n\nTo try it out, make sure you have a WAD file available and do
  the\nfollowing:\n\n    tar xzvf waddle-X.Y.Z.W.tar.gz\n    cd waddle-X.Y.Z.W\n    cabal
  sandbox init\n    cabal install\n    mkdir visualize/data\n    cabal run DOOM.WAD
  visualize/data\n\nThen fire up a capable web browser and open visualize/waddle.html.\n\nHappy
  WAD hacking!\n  Martin\n"
license-name: BSD3
