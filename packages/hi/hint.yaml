homepage: http://hub.darcs.net/jcpetruzza/hint
changelog-type: markdown
hash: 9e17c8426cd7f344325ad76d6739584a4a9066721acb7712facc0e0f4709ee07
test-bench-deps:
  exceptions: -any
  extensible-exceptions: -any
  base: <5
  hint: -any
  filepath: -any
  HUnit: ==1.2.*
  mtl: -any
  directory: -any
maintainer: jcpetruzza@gmail.com
synopsis: Runtime Haskell interpreter (GHC API wrapper)
changelog: ! "0.4.2.2\n-------\n\n * Builds with ghc 7.10\n * Builds again with ghc
  7.4\n * Drops dependency on utf8-string\n\n\n0.4.2.1\n-------\n\n * Better error
  reporting (thanks to Corentin Dupont)\n\n0.4.2.0\n-------\n\n * Based on exceptions-0.6\n\n0.4.1.0\n-------\n\n
  * Based on exceptions-0.4\n\n0.4.0.0\n-------\n * Compiles with ghc 7.8\n\n * Fixed
  an issue where \"P\" was available as a qualified version of Prelude\n   (thanks
  to Samuel Gélineau)\n\n * Uses exceptions package instead of MonadCatchIO-mtl (API
  breakage expected)\n\n * No longer depends on haskell-src\n\n * Changelog should
  now appear in Hackage\n\n * Integrated unit tests with cabal\n\n0.3.3.7\n-------\n
  * Fixed a race condition that would happen, for instance, when two process where
  run\n   one next to the other, making them, on some platforms, to get the same random
  number seed\n   (thanks to Mario Pastorelli and Samuel Gélineau)\n\n * Small fix
  in documentation (thanks to Daniil Frumin)\n\n0.3.3.6\n-------\n * Works again on
  GHC 7.2.x (thanks to Björn Peemöller)\n\n0.3.3.5\n-------\n * Works on GHC 7.4.6\n
  * Cleans up files for phantom modules that were left behind (thanks to Beltram Felgenhauer)\n\n0.3.3.4\n-------\n
  * Works on GHC 7.4.1\n\n0.3.3.3\n-------\n * Works on GHC 7.2.1\n\n0.3.3.2\n-------\n
  * Supports GHC 7\n\n0.3.3.1\n-------\n * Instance declaration for Applicative (InterpreterT
  m) works with mtl-2\n   (requires Applicative m, this shouldn't break anything...)\n\n0.3.3.0\n-------\n
  * add unsafeRunInterpreterWithArgs\n * check that only one instance of the interpreter
  is run at any time\n\n0.3.2.3\n-------\n * Can be built against MonadCatchIO-mtl-0.3.x.x\n\n0.3.2.2\n-------\n
  * Fixed a bug that would make expressions using heavy use of the layout\n   rule
  to fail to be interpreted (see parens)\n\n0.3.2.1\n-------\n * hint.cabal includes
  version bounds for package ghc-mtl. This is to\n   avoid the accidental selection
  of the completely unrelated ghc-mtl\n   internal to ghc and, apparently, installed
  in the hackage server\n\n0.3.2.0\n-------\n * Exports functions parens and isInterpretedModule\n\n
  * Experimental support for module annotations\n\n * Uses extensible-exceptions in
  order to provide a uniform interface\n   accross different ghc versions\n\n * Provides
  an Applicative instance for IntepreterT\n\n * Adds an option to configurate the
  searchPath\n\n\n0.3.1.0\n-------\n * No longer uses Language.Haskell.Extension due
  to configuration problems with Cabal.\n   Instead, it uses its own Language.Haskell.Interpreter.Extension
  module.\n\n0.3.0.0\n-------\n * Updated API:\n   + InterpreterT monad transformer
  (Interpreter = InterpreterT IO)\n   + No more Sessions, use runInterpreter only
  once\n   + New options handling functions\n     - but observe that there is no setOptimizations
  equivalent;\n       since GHC does no optimization on interpreted code, this was
  actually\n       doing nothing\n * Works with GHC 6.10 and 6.8 (untested with 6.6)\n\n0.2.5\n-----\n
  * setImportsQ added (modules can be imported both qualified and unqualified)\n\n0.2.4.1\n-------\n
  * BUGFIX: No longer fails on expressions ending in a -- comment\n\n0.2.4\n-----\n
  * setInstalledModsAreInScopeQualified added\n * Now depends on ghc-paths (no longer
  needs a custom cabal script)\n\n0.2.2\n-----\n * setOptimizations added\n * Module
  Language.Haskell.Interpreter.GHC.Unsafe added\n   (contains unsafeSetGhcOption)\n
  * unit tests now based on HUnit\n\n0.2.1\n-----\n * BUGFIX: Module reloading was
  broken under 6.8\n * GHC.GhcExceptions are catched and turned into InterpreterErrors\n\n0.2.0.1\n-------\n
  * Adds the requirement cabal-version < 1.3\n\n0.2\n---\n\n * Works also with GHC
  6.8 and 6.6\n * Added the getModuleExports function\n * withSession function throws
  a dynamic exception instead of returning Either Error a\n * Requires Cabal 1.2.x\n"
basic-deps:
  exceptions: -any
  ghc: ! '>=7.4'
  ghc-mtl: ==1.2.1.*
  extensible-exceptions: -any
  unix: ! '>=2.2.0.0'
  base: ==4.*
  filepath: -any
  ghc-paths: -any
  mtl: -any
  random: -any
  directory: -any
all-versions:
- '0.1'
- '0.2'
- '0.2.1'
- '0.2.2'
- '0.2.4'
- '0.2.4.1'
- '0.3.0.0'
- '0.3.1.0'
- '0.3.2.0'
- '0.3.2.1'
- '0.3.2.2'
- '0.3.2.3'
- '0.3.3.0'
- '0.3.3.1'
- '0.3.3.2'
- '0.3.3.3'
- '0.3.3.4'
- '0.3.3.5'
- '0.3.3.6'
- '0.3.3.7'
- '0.4.0.0'
- '0.4.1.0'
- '0.4.2.0'
- '0.4.2.1'
- '0.4.2.2'
author: Daniel Gorin
latest: '0.4.2.2'
description-type: text
description: ! '=== Description ===


  This library defines an Interpreter monad. It allows to load Haskell

  modules, browse them, type-check and evaluate strings with Haskell

  expressions and even coerce them into values. The library is

  thread-safe and type-safe (even the coercion of expressions to

  values).


  It is, esentially, a huge subset of the GHC API wrapped in a simpler

  API.



  === Documentation ===


  The library cames with haddock documentation you can build

  (see above). Also, check examples/example.hs to see a simple but

  comprehensive example (it must be run from the examples

  directory, since it expects to find the SomeModule.hs file

  located there).


  === Contact  ===


  Bug-reports, questions, suggestions and patches are all welcome.


  To get a copy of the darcs repository:


  darcs get http://hub.darcs.net/jcpetruzza/hint



  If you report an issue, please send me an email as well, since

  otherwise I get no notifications...

'
license-name: BSD3
