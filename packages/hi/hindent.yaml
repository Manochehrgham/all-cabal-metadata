homepage: http://www.github.com/chrisdone/hindent
changelog-type: ''
hash: 9b57c7379755de660924a057954ecfa63a24fe17458ac9ed9a1d8ce1334e4971
test-bench-deps:
  hindent: -any
  base: ==4.*
  hspec: -any
  text: -any
  monad-loops: -any
  criterion: -any
  haskell-src-exts: -any
  ghc-prim: -any
  mtl: -any
  deepseq: -any
  directory: -any
maintainer: chrisdone@gmail.com
synopsis: Extensible Haskell pretty printer
changelog: ''
basic-deps:
  descriptive: ! '>=0.7 && <0.10'
  hindent: -any
  base: ! '>=4.7 && <5'
  text: -any
  monad-loops: -any
  containers: -any
  haskell-src-exts: ! '>=1.18'
  ghc-prim: -any
  mtl: -any
  transformers: -any
  directory: -any
all-versions:
- '0.0'
- '1.0'
- '2.0'
- '2.1'
- '2.2'
- '2.3'
- '2.4'
- '3.0'
- '3.1'
- '3.2'
- '3.3'
- '3.4'
- '3.5'
- '3.6'
- '3.7'
- '3.8'
- '3.9'
- '3.9.1'
- '4.0'
- '4.1.0'
- '4.1.1'
- '4.2.0'
- '4.2.1'
- '4.2.2'
- '4.2.3'
- '4.2.4'
- '4.3.0'
- '4.3.1'
- '4.3.2'
- '4.3.3'
- '4.3.4'
- '4.3.5'
- '4.3.6'
- '4.3.7'
- '4.3.8'
- '4.3.9'
- '4.3.10'
- '4.3.11'
- '4.3.12'
- '4.4.0'
- '4.4.1'
- '4.4.2'
- '4.5.0'
- '4.5.1'
- '4.5.2'
- '4.5.3'
- '4.5.4'
- '4.5.5'
- '4.5.6'
- '4.5.7'
- '4.6.0'
- '4.6.1'
- '4.6.2'
- '4.6.3'
- '4.6.4'
- '5.0.0'
author: Chris Done, Andrew Gibiansky, Tobias Pflug, Pierre Radermecker
latest: '5.0.0'
description-type: markdown
description: ! "# hindent [![Hackage](https://img.shields.io/hackage/v/hindent.svg?style=flat)](https://hackage.haskell.org/package/hindent)
  [![Build Status](https://travis-ci.org/chrisdone/hindent.png)](https://travis-ci.org/chrisdone/hindent)\n\nExtensible
  Haskell pretty printer. Both a library and an\nexecutable.\n\n## Install\n\n    $
  stack install\n\n## Usage\n\n    hindent is used in a pipeline style:\n\n    $ cat
  path/to/sourcefile.hs | hindent > outfile.hs\n\n## Emacs\n\nIn\n[elisp/hindent.el](https://github.com/chrisdone/hindent/blob/master/elisp/hindent.el)\nthere
  is `hindent-mode`, which provides keybindings to reindent parts of the\nbuffer:\n\n-
  `M-q` reformats the current declaration.  When inside a comment, it fills the\n
  \ current paragraph instead, like the standard `M-q`.\n- `C-M-\\` reformats the
  current region.\n\nTo enable it, add the following to your init file:\n\n```lisp\n(add-to-list
  'load-path \"/path/to/hindent/elisp\")\n(require 'hindent)\n(add-hook 'haskell-mode-hook
  #'hindent-mode)\n```\n\n## Vim\n\nThe `'formatprg'` option lets you use an external
  program (like hindent) to\nformat your text. Put the following line into ~/.vim/ftplugin/haskell.vim\nto
  set this option for Haskell files:\n\n    setlocal formatprg=hindent\n\nThen you
  can format with hindent using `gq`. Read `:help gq` and `help\n'formatprg'` for
  more details.\n\nNote that unlike in emacs you have to take care of selecting a
  sensible buffer region as input to\nhindent yourself. If that is too much trouble
  you can try [vim-textobj-haskell](https://github.com/gilligan/vim-textobj-haskell)
  which provides a text object for top level bindings.\n\n## Atom\n\nBasic support
  is provided through [atom/hindent.coffee](https://github.com/chrisdone/hindent/blob/master/atom/hindent.coffee).
  Mode should be installed as package into `.atom\\packages\\${PACKAGE_NAME}`,\nhere
  is simple example of atom [package](https://github.com/Heather/atom-hindent).\n"
license-name: BSD3
