homepage: http://www.github.com/chrisdone/hindent
changelog-type: markdown
hash: ca3216afcc808aa9857817acb7f58b1a1c03804716fe01d295ccfa3192a87d01
test-bench-deps:
  hindent: -any
  exceptions: -any
  bytestring: -any
  base: ==4.*
  Diff: -any
  hspec: -any
  monad-loops: -any
  criterion: -any
  haskell-src-exts: -any
  utf8-string: -any
  ghc-prim: -any
  mtl: -any
  deepseq: -any
  directory: -any
maintainer: chrisdone@gmail.com
synopsis: Extensible Haskell pretty printer
changelog: ! "5.1.1:\n\n    * Preserve spaces between groups of imports (fixes #200)\n
  \   * Support shebangs (closes #208)\n    * Output filename for parse errors (fixes
  #179)\n    * Input with newline ends with newline (closes #211)\n    * Document
  -X (closes #212)\n    * Fix explicit forall in instances (closes #218)\n    * Put
  last paren of export list on a new line #227\n\n5.1.0:\n\n    * Rewrote comment
  association, more reliable\n    * Added --tab-size flag for indentation spaces\n
  \   * Fixed some miscellaneous bugs\n\n5.0.1:\n\n    * Re-implement using bytestring
  instead of text\n    * Made compatible with GHC 7.8 through to GHC 8.0\n    * Added
  test suite and benchmarks in TESTS.md and BENCHMARKS.md\n\n5.0.0:\n\n\t* Drop support
  for styles\n\n4.6.4\n\n\t* Copy/delete file instead of renaming\n\n4.4.6\n\n\t*
  Fix whole module printer\n\t* Accept a filename to reformat\n\n4.4.5\n\n\t* Fix
  bug in infix patterns\n\n4.4.2\n\n\t* Bunch of Gibiansky style fixes.\n\t* Support
  CPP.\n\t* Tibell style fixes.\n\n4.3.8\n\n\t* Fixed: bug in printing operators in
  statements.\n\n4.5.4\n\n\t* Improvements to Tibell style.\n\t* 6x speed up on rendering
  operators.\n"
basic-deps:
  descriptive: ! '>=0.7 && <0.10'
  hindent: -any
  exceptions: -any
  bytestring: -any
  base: ! '>=4.7 && <5'
  text: -any
  monad-loops: -any
  containers: -any
  haskell-src-exts: ! '>=1.18'
  utf8-string: -any
  ghc-prim: -any
  mtl: -any
  transformers: -any
  directory: -any
all-versions:
- '0.0'
- '1.0'
- '2.0'
- '2.1'
- '2.2'
- '2.3'
- '2.4'
- '3.0'
- '3.1'
- '3.2'
- '3.3'
- '3.4'
- '3.5'
- '3.6'
- '3.7'
- '3.8'
- '3.9'
- '3.9.1'
- '4.0'
- '4.1.0'
- '4.1.1'
- '4.2.0'
- '4.2.1'
- '4.2.2'
- '4.2.3'
- '4.2.4'
- '4.3.0'
- '4.3.1'
- '4.3.2'
- '4.3.3'
- '4.3.4'
- '4.3.5'
- '4.3.6'
- '4.3.7'
- '4.3.8'
- '4.3.9'
- '4.3.10'
- '4.3.11'
- '4.3.12'
- '4.4.0'
- '4.4.1'
- '4.4.2'
- '4.5.0'
- '4.5.1'
- '4.5.2'
- '4.5.3'
- '4.5.4'
- '4.5.5'
- '4.5.6'
- '4.5.7'
- '4.6.0'
- '4.6.1'
- '4.6.2'
- '4.6.3'
- '4.6.4'
- '5.0.0'
- '5.0.1'
- '5.1.0'
- '5.1.1'
author: Chris Done, Andrew Gibiansky, Tobias Pflug, Pierre Radermecker
latest: '5.1.1'
description-type: markdown
description: ! "# hindent [![Hackage](https://img.shields.io/hackage/v/hindent.svg?style=flat)](https://hackage.haskell.org/package/hindent)
  [![Build Status](https://travis-ci.org/chrisdone/hindent.png)](https://travis-ci.org/chrisdone/hindent)\n\nHaskell
  pretty printer\n\n[Demonstration site](http://chrisdone.com/hindent/)\n\n[Examples](https://github.com/chrisdone/hindent/blob/master/TESTS.md)\n\n##
  Install\n\n    $ stack install hindent\n\n## Usage\n\n    bash-3.2$ hindent --help\n
  \   hindent --version --help --style STYLE --line-length <...> --tab-size <...>
  [-X<...>]* [<FILENAME>]\n    Version 5.0.1\n    The --style option is now ignored,
  but preserved for backwards-compatibility.\n    Johan Tibell is the default and
  only style.\n\nhindent is used in a pipeline style\n\n    $ cat path/to/sourcefile.hs
  | hindent\n\nConfigure tab size with `--tab-size`:\n\n    $ echo 'example = case
  x of Just p -> foo bar' | hindent --tab-size 2; echo\n    example =\n      case
  x of\n        Just p -> foo bar\n    $ echo 'example = case x of Just p -> foo bar'
  | hindent --tab-size 4; echo\n    example =\n        case x of\n            Just
  p -> foo bar\n\n## Emacs\n\nIn\n[elisp/hindent.el](https://github.com/chrisdone/hindent/blob/master/elisp/hindent.el)\nthere
  is `hindent-mode`, which provides keybindings to reindent parts of the\nbuffer:\n\n-
  `M-q` reformats the current declaration.  When inside a comment, it fills the\n
  \ current paragraph instead, like the standard `M-q`.\n- `C-M-\\` reformats the
  current region.\n\nTo enable it, add the following to your init file:\n\n```lisp\n(add-to-list
  'load-path \"/path/to/hindent/elisp\")\n(require 'hindent)\n(add-hook 'haskell-mode-hook
  #'hindent-mode)\n```\n\n## Vim\n\nThe `'formatprg'` option lets you use an external
  program (like\nhindent) to format your text. Put the following line into\n~/.vim/ftplugin/haskell.vim
  to set this option for Haskell files:\n\n    setlocal formatprg=hindent\n\nThen
  you can format with hindent using `gq`. Read `:help gq` and `help\n'formatprg'`
  for more details.\n\nNote that unlike in emacs you have to take care of selecting
  a\nsensible buffer region as input to hindent yourself. If that is too\nmuch trouble
  you can try\n[vim-textobj-haskell](https://github.com/gilligan/vim-textobj-haskell)\nwhich
  provides a text object for top level bindings.\n\n## Atom\n\nBasic support is provided
  through\n[atom/hindent.coffee](https://github.com/chrisdone/hindent/blob/master/atom/hindent.coffee).
  Mode\nshould be installed as package into `.atom\\packages\\${PACKAGE_NAME}`,\nhere
  is simple example of atom\n[package](https://github.com/Heather/atom-hindent).\n"
license-name: BSD3
