homepage: https://github.com/lspitzner/iridium
changelog-type: markdown
hash: b353f7a84179a110b0157431e5f80c8fc167c5266c9a36dce0e5a13186ce961e
test-bench-deps: {}
maintainer: lsp@informatik.uni-kiel.de
synopsis: Automated Testing and Package Uploading
changelog: ! "# Revision history for iridium\n\n## 0.1.5.1  -- 2016-03-11\n\n  * Fix
  iridium package pvp compliance (lower bounds)\n\n## 0.1.5.0  -- 2016-03-11\n\n  *
  Add package-sdist check\n\n  * Prepare non-static default config\n\n## 0.1.4.0  --
  2016-02-22\n\n  * Fix various bugs\n\n  * Make various changes to the default iridium.yaml\n\n
  \ * Fix/Expand basic git functionality; it includes:\n    * Displaying current branch\n
  \   * Tagging the current commit\n    * Pushing tag and branch to remote\n\n## 0.1.4.0
  \ -- 2016-02-18\n\n  * Start integrating some git-specific functionality\n\n## 0.1.2.0
  \ -- 2016-02-17\n\n  * First release, experimental.\n"
basic-deps:
  bytestring: ! '>=0.10.4.0 && <0.11'
  extra: ! '>=1.4.3 && <1.5'
  unsafe: ! '>=0.0 && <0.1'
  split: ! '>=0.2.3 && <0.3'
  Cabal: ! '>=1.22.5.0 && <1.23'
  base: ! '>=4.7 && <4.9'
  unordered-containers: ! '>=0.2.5.1 && <0.3'
  text: ! '>=1.2.2.0 && <1.3'
  monad-control: ! '>=1.0.0.5 && <1.1'
  process: ! '>=1.2.0.0 && <1.5'
  lifted-base: ! '>=0.2.3.6 && <0.3'
  multistate: ! '>=0.7.0.0 && <0.8'
  turtle: ! '>=1.2.5 && <1.3'
  tagged: ! '>=0.8.3 && <0.9'
  containers: ! '>=0.5.5.1 && <0.6'
  xmlhtml: ! '>=0.2.3.4 && <0.3'
  ansi-terminal: ! '>=0.6.2.3 && <0.7'
  iridium: -any
  foldl: ! '>=1.1.5 && <1.2'
  transformers-base: ! '>=0.4.4 && <0.5'
  transformers: ! '>=0.3.0.0 && <0.5'
  http-conduit: ! '>=2.1.8 && <2.2'
  system-filepath: ! '>=0.4.13.4 && <0.5'
  yaml: ! '>=0.8.16 && <0.9'
  vector: ! '>=0.11.0.0 && <0.12'
all-versions:
- '0.1.5.1'
author: Lennart Spitzner
latest: '0.1.5.1'
description-type: markdown
description: ! "# iridium\n\n[![Build Status](https://secure.travis-ci.org/lspitzner/iridium.svg)](http://travis-ci.org/lspitzner/iridium)\n[![Hackage](https://img.shields.io/hackage/v/iridium.svg)](https://hackage.haskell.org/package/iridium)\n\n#
  Introduction\n\niridium is a fancy wrapper around `cabal upload`. It aims to automate\nseveral
  typical steps when releasing a new package version to hackage.\n\nSteps currently
  include:\n\n- Compilation and running tests using multiple compiler versions.\n
  \ (the different compilers must already be installed.)\n\n- Checking that the changelog
  mentions the latest version.\n\n- Checking that the upper bounds of dependencies\n
  \ are up-to-date by making use of stackage snapshots.\n\n- Uploading of both the
  package itself and the documentation.\n\n# Usage\n\nInstall iridium, run iridium
  in the directory containing the cabal package.\nIt won't do anything without confirmation.\n\n~~~~\n$
  iridium\nChecking compilation and tests with different compiler versions\n  Checking
  with compiler ghc-7.8.4:                                   clear.\n  Checking with
  compiler ghc-7.10.3:                                  clear.\nChecking upper bounds
  using stackage:                                 clear.\nChecking documentation:
  \                                              clear.\nChecking basic compilation:
  \                                          clear.\nChecking that all dependencies
  have upper bounds:                     clear.\nChecking package validity:                                            clear.\nComparing
  local version to hackage version:                           clear.\n[git]\n  Testing
  for uncommitted changes:                                    clear.\nSummary:\n  Package:
  \        iridium\n  Version:         0.1.2.0\n  Warning count:   0\n  Error   count:
  \  0\n  Not -Wall clean:\n  [git]\n    Branch:        master\n\n  Actions:         Upload
  package, Upload documentation\n\n> Continue [y]es [n]o? > y\nPerforming upload..\nBuilding
  source dist for iridium-0.1.2.0...\nPreprocessing library iridium-0.1.2.0...\nPreprocessing
  executable 'iridium' for iridium-0.1.2.0...\nSource tarball created: dist/iridium-0.1.2.0.tar.gz\nHackage
  password:\nUploading dist/iridium-0.1.2.0.tar.gz...\nOk\nUpload successful.\nPerforming
  doc upload..\n[.. some haddock spam ..]\nDocumentation tarball created: dist/iridium-0.1.2.0-docs.tar.gz\nHackage
  password:\nUploading documentation dist/iridium-0.1.2.0-docs.tar.gz...\nOk\nDocumentation
  upload successful.\n$\n~~~~\n\n# Configuration\n\nAn `iridium.yaml` file will be
  created on first invocation.\n\n# Tests\n\n| Test | Description |\n| --- | --- |\n|
  hlint | `forM_ hs-source-dirs $ \\dir -> (\\dir -> call \"hlint \" ++ dir)` |\n|
  testsuites | run `cabal test` when compiling. |\n| upper-bounds-stackage | Check
  that upper bounds are up-to-date by using a stackage cabal.config. This is not the
  best way, because not all packages are on stackage, but it is better than nothing.
  |\n| upper-bounds-exist | Check that all dependencies have upper bounds. (You _do_
  want to conform with the PVP, right?) |\n| documentation | Check that haddocks can
  be created without problems (calling `cabal haddock`). |\n| changelog | Check if
  the changelog mentions (contains) the latest version. |\n"
license-name: BSD3
