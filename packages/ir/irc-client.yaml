homepage: https://github.com/barrucadu/irc-client
changelog-type: ''
hash: 98c51b5108126b48476c39b470b015790dc03dde5057f38e0a287e52f8632f5e
test-bench-deps: {}
maintainer: mike@barrucadu.co.uk
synopsis: An IRC client library.
changelog: ''
basic-deps:
  bytestring: ! '>=0.10'
  stm: ! '>=2.4'
  base: ! '>=4.7 && <5'
  data-default-class: ! '>=0.0.1'
  time: ! '>=1.4'
  text: ! '>=1.1'
  conduit: ! '>=1.2'
  irc-ctcp: ! '>=0.1.2'
  stm-conduit: ! '>=2.5'
  old-locale: ! '>=1.0'
  transformers: ! '>=0.3'
  irc-conduit: ! '>=0.1.1'
all-versions:
- '0.2.3.0'
- '0.2.3.1'
- '0.2.4.0'
author: Michael Walker
latest: '0.2.4.0'
description-type: haddock
description: ! 'An IRC client library built atop

  <http://hackage.haskell.org/package/irc-conduit irc-conduit>. Why

  another IRC client library, you cry? I didn''t really find one that

  did what I wanted (specifically, handle connecting to servers and

  calling event handlers, possibly with TLS), but which didn''t

  implement almost a full IRC bot for you. That takes out all the fun!


  <http://hackage.haskell.org/package/irc-conduit irc-conduit> and

  <http://hackage.haskell.org/package/irc-ctcp irc-ctcp> are my

  solution to the first part of that, this is my solution to the

  latter. It''s a simple IRC client library that does the basics for

  you, but isn''t an all-singing, all-dancing, fully-featured IRC

  /application/. It is a merely a simple library.'
license-name: MIT
