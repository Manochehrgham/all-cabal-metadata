changelog-type: ''
hash: e648b8e92d6a77decb999337923b4e6197427694dbd4b26cc5ba9e79988d2e76
synopsis: An IRC client library and text client
changelog: ''
all-versions:
- '1.0'
- '1.1'
latest: '1.1'
description-type: haddock
description: ! 'This package provides an IRC connection library as well as a console-based
  IRC client

  that uses the library.


  /Library module breakdown/


  * "Irc.Cmd" - Functions for generating IRC protocol message for client-to-server


  * "Irc.Core" - Functions for parsing low-level IRC messages into mid-level IRC messages


  * "Irc.Core.Prisms" - Prisms for all of the mid-level IRC message constructors


  * "Irc.Format" - Functions for parsing and rendering low-level IRC protocol messages


  * "Irc.Message" - High-level IRC event messages for client interpretation


  * "Irc.Model" - Functions for interpreting mid-level IRC messages to generate high-level

  event messages and to maintain a consistent view of the connection


  * "Irc.RateLimit" - Functions to assist with rate-limiting outgoing client messages


  * "Irc.Time" - Internal compatibility module for time-1.4 and time-1.5 interop


  /Library module breakdown/


  * "Main" - Main client module


  * "ClientState" - Types and operations representing the full state of the client


  * "CommandArgs" - Types and functions for interpreting the initial client configuration


  * "CommandParser" - Types and functions for parsing and pretty printing IRC commands


  * "Connection" - Types and functions for establishing a plain and TLS connections


  * "CtcpHandler" - Event handler for CTCP messages


  * "EditBox" - Types and functions for managing the input box along the bottom of
  the client


  * "HaskelHighlighter" - Haskell syntax highlighting support


  * "ImageUtils" - Functions to support the various view construction


  * "Moderation" - Implementation of various IRC channel moderation automation


  * "ServerSettings" - Types for defining connection parameters for an IRC server


  * "Views.BanList" - Functions to generate the ban list view


  * "Views.Channel" - Functions to generate message list views


  * "Views.ChannelInfo" - Functions to generate metadata views for channels


  See the associated README file for help using the client.'
