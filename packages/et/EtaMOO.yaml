homepage: http://verement.github.io/etamoo
changelog-type: ''
hash: c3e81753745fac106901e7f1ac28a637a71ac6a1a97e00943224a7b8978ced9c
test-bench-deps: {}
maintainer: Rob Leslie <rob@mars.org>
synopsis: A new implementation of the LambdaMOO server
changelog: ''
basic-deps:
  bytestring: -any
  case-insensitive: -any
  unix: -any
  haskeline: -any
  stm: -any
  base: ==4.*
  pipes-bytestring: -any
  time: -any
  unordered-containers: -any
  text: ! '>=1.2'
  network: -any
  pureMD5: -any
  parsec: -any
  array: -any
  pipes-network: -any
  containers: ! '>=0.4'
  pipes: -any
  pipes-concurrency: -any
  old-locale: -any
  mtl: -any
  hashable: -any
  stm-chans: -any
  transformers: -any
  random: -any
  vector: -any
all-versions:
- '0.1.0.0'
- '0.2.0.0'
author: Rob Leslie <rob@mars.org>
latest: '0.2.0.0'
description-type: markdown
description: ! "\nImportant!\n==========\n\n**This is experimental and (currently)
  incomplete software. It is not yet\nfully usable, although with further development
  it is hoped that it soon will\nbe.**\n\n_At present, the code will load a database
  and listen for network\nconnections. You can connect using any `telnet` client and
  interact with the\nMOO environment, however no changes to the database will be saved,
  and a few\nother features have also yet to be implemented._\n\nAbout\n=====\n\nEtaMOO
  is a new implementation of the LambdaMOO server written in Haskell.\n\n[LambdaMOO][]
  is a network-accessible, multi-user, programmable, interactive\nsystem well-suited
  to the construction of text-based adventure games,\nconferencing systems, and other
  collaborative software.\n\n  [LambdaMOO]: http://www.ipomoea.org/moo/\n\nEtaMOO
  differs from LambdaMOO in a few significant ways:\n\n  * EtaMOO is multi-threaded.
  MOO tasks run concurrently, producing network\n    output and changes to the database
  in isolated transactions that are\n    committed only when not in conflict with
  any other transaction. (In cases\n    of conflict, transactions are automatically
  retried.) Separate threads are\n    also used for network connection management,
  so for example name lookups\n    do not block the entire server.\n\n  * EtaMOO supports
  64-bit MOO integers via compile-time build option.\n\n  * EtaMOO is Unicode-aware,
  and will eventually include support for Unicode\n    MOO strings via compile-time
  build option.\n\n  * EtaMOO supports IPv6.\n\nThe implementation of EtaMOO closely
  follows the specifications of the\n[LambdaMOO Programmer's Manual][Programmer's
  Manual], and should therefore be\ncompatible with most LambdaMOO databases as of
  about version 1.8.3 of the\nLambdaMOO server code.\n\n  [Programmer's Manual]: http://www.ipomoea.org/moo/#progman\n\nInstalling\n----------\n\nEtaMOO
  is built with [Cabal][], the Haskell package manager. In the simplest\ncase, simply
  running:\n\n    cabal install EtaMOO\n\nshould automatically download, build, and
  install the `etamoo` executable\nafter doing the same for all of its Haskell dependencies.\n\n
  \ [Cabal]: http://www.haskell.org/cabal/\n\nCabal itself is part of the [Haskell
  Platform][] which is available for many\ndistributions and platforms.\n\n  [Haskell
  Platform]: http://www.haskell.org/platform/\n\nEtaMOO has non-Haskell dependencies
  on two external libraries: _libpcre_ (with\nUTF-8 support enabled) for regular expression
  matching, and, possibly,\n_libcrypt_ (often part of the standard libraries) for
  the MOO `crypt()`\nbuilt-in function. You may need to ensure you have these available
  before\ninstalling EtaMOO.\n\nHacking\n-------\n\n[Documentation][] is available
  for the various types, data structures, and\nfunctions used internally by EtaMOO.\n\n
  \ [Documentation]: http://verement.github.io/etamoo/doc/\n\n"
license-name: BSD3
