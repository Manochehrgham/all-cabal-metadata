homepage: https://github.com/nfjinjing/http-pony
changelog-type: markdown
hash: bb97ed924ed1bcd3dc02cd8a424d6bf067bdc22fc9ca9ee57ff874536da5f9d9
test-bench-deps: {}
maintainer: nfjinjing@gmail.com
synopsis: A type unsafe http library
changelog: ! '# Revision history for http-pony


  ## 0.1.0.0  -- YYYY-mm-dd


  * First version. Released on an unsuspecting world.

'
basic-deps:
  bytestring: ! '>=0.10 && <0.11'
  case-insensitive: ! '>=1.2'
  base: ! '>=4.9 && <4.10'
  network: ! '>=2.6'
  pipes-network: ! '>=0.6'
  pipes-parse: ! '>=3.0'
  pipes: ! '>=4.1'
  pipes-attoparsec: ! '>=0.5'
  attoparsec: ! '>=0.13'
  transformers: ! '>=0.5'
  pipes-safe: ! '>=2.2'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
author: Jinjing Wang
latest: '0.1.0.1'
description-type: markdown
description: ! "Teaser\n======\n\nLet's write a hello world app.\n\n    {-# LANGUAGE
  OverloadedStrings #-}\n\n    module Hello where\n\n    import Pipes (yield)\n\n
  \   hello _ = pure (\"HTTP/1.1 200 OK\", [], yield \"hello world\\n\")\n\nNote,
  we are not importing any interface!\n\nIf we take a closer look at the type of `hello`:\n\n
  \   Prelude Hello> :t hello\n    hello\n      :: (Applicative f, Data.String.IsString
  a, Data.String.IsString t,\n          Monad m) =>\n        t2 -> f (t, [t1], Pipes.Internal.Proxy
  x' x () a m ())\n\nThis is a *pure* app!\n\nShall we run it?\n\n{-# LANGUAGE OverloadedStrings
  #-}\n\n    module RunHello where\n\n    import Network.HTTP.Pony.Serve (run, http)\n
  \   import Pipes.Safe (runSafeT)\n    import PonyHello (ponyHello)\n\n    main ::
  IO ()\n    main = (runSafeT . run \"localhost\" \"8080\" . http) ponyHello\n\nTest
  it:\n\n    # the above files are mirrored in `./test`\n    runghc -isrc -itest test/RunHello.hs\n
  \  \n    # open another terminal\n    curl localhost:8080 -i\n    \n    # output:\n\n
  \   > HTTP/1.1 200 OK\n    >\n    > hello world\n \nwow ~\n\nExercise: write a `tcp
  cat`\n"
license-name: BSD3
