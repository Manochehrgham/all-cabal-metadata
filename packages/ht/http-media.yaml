changelog-type: ''
hash: 204cb2e2714d7fcfc6e0de04945dbd2b0b19294c924d9f4aad6dbcdafe19bdac
synopsis: Processing HTTP Content-Type and Accept headers
changelog: ''
all-versions:
- '0.1.0'
- '0.1.1'
- '0.2.0'
- '0.3.0'
- '0.4.0'
- '0.5.0'
- '0.5.1'
- '0.6.0'
- '0.6.1'
- '0.6.2'
latest: '0.6.2'
description-type: haddock
description: ! 'This library is intended to be a comprehensive solution to parsing
  and

  selecting quality-indexed values in HTTP headers. It is capable of parsing

  both media types and language parameters from the Accept and Content header

  families, and can be extended to match against other accept headers as well.

  Selecting the appropriate header value is achieved by comparing a list of

  server options against the quality-indexed values supplied by the client.


  In the following example, the Accept header is parsed and then matched against

  a list of server options to serve the appropriate media using

  ''mapAcceptMedia'':


  > getHeader >>= maybe send406Error sendResourceWith . mapAcceptMedia

  >     [ ("text/html",        asHtml)

  >     , ("application/json", asJson)

  >     ]


  Similarly, the Content-Type header can be used to produce a parser for request

  bodies based on the given content type with ''mapContentMedia'':


  > getContentType >>= maybe send415Error readRequestBodyWith . mapContentMedia

  >     [ ("application/json", parseJson)

  >     , ("text/plain",       parseText)

  >     ]


  The API is agnostic to your choice of server.'
