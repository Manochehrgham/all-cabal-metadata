homepage: https://github.com/snoyberg/http-client
changelog-type: markdown
hash: 24d668bb7503baf0d167b2dd8fa8a3a3fc2d93d212fc7a15ff6e5c05163fb765
test-bench-deps:
  http-client: -any
  base: -any
  hspec: -any
  http-client-tls: -any
  http-types: -any
maintainer: michael@snoyman.com
synopsis: http-client backend using the connection package and tls library
changelog: ! '## 0.2.4.1


  * Cabal description fix


  ## 0.2.4


  * Global manager


  ## 0.2.3


  * Exception catching cleanup

'
basic-deps:
  http-client: ! '>=0.3.5'
  bytestring: -any
  base: ! '>=4 && <5'
  data-default-class: -any
  tls: ! '>=1.2'
  network: -any
  connection: ! '>=0.2.2'
all-versions:
- '0.2.0.0'
- '0.2.0.1'
- '0.2.0.2'
- '0.2.0.3'
- '0.2.1'
- '0.2.1.1'
- '0.2.1.2'
- '0.2.2'
- '0.2.3'
- '0.2.4'
- '0.2.4.1'
author: Michael Snoyman
latest: '0.2.4.1'
description-type: markdown
description: ! "## http-client-tls\n\nFull tutorial docs are available at:\nhttps://github.com/commercialhaskell/jump/blob/master/doc/http-client.md\n\nUse
  the http-client package with the pure-Haskell tls package for secure\nconnections.
  For the most part, you'll just want to replace\n`defaultManagerSettings` with `tlsManagerSettings`,
  e.g.:\n\n```haskell\nimport Network.HTTP.Client\nimport Network.HTTP.Client.TLS\n\nmain
  :: IO ()\nmain = do\n    manager <- newManager tlsManagerSettings\n    ...\n```\n"
license-name: MIT
