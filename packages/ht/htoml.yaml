changelog-type: markdown
hash: 0588b9388abe5a8c8ee39557d0118ce016efe8f1af22c028104ca58238eccb58
test-bench-deps:
  bytestring: -any
  htoml: -any
  Cabal: -any
  base: -any
  time: -any
  unordered-containers: -any
  text: -any
  tasty-hspec: -any
  criterion: -any
  parsec: -any
  containers: -any
  tasty-hunit: -any
  file-embed: -any
  tasty: -any
  aeson: -any
  vector: -any
synopsis: Parser for TOML files
changelog: ! 'Change log

  ==========


  #### dev

  * ...


  #### 0.1.0.2

  * Updated the REAMDE

  * Added/relaxed dependency version contraints where applicable

  * Fixed all warnings

  * Added `CHANGES.md`


  #### 0.1.0.1

  * Fixes `cabal configure` error in cabal file


  #### 0.1.0.0

  * Initial upload to Hackage

'
basic-deps:
  bytestring: ! '>=0.9'
  htoml: -any
  Cabal: ! '>=1.16.0'
  base: ! '>=4.3 && <5'
  time: -any
  unordered-containers: ! '>=0.2'
  text: ! '>=1.0 && <2'
  tasty-hspec: ! '>=0.2'
  parsec: ! '>=3.1.2 && <4'
  containers: ! '>=0.5'
  old-locale: -any
  tasty-hunit: ! '>=0.9'
  file-embed: ! '>=0.0.5'
  tasty: ! '>=0.10'
  aeson: ! '>=0.8'
  vector: ! '>=0.10'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
latest: '0.1.0.2'
description-type: markdown
description: ! "htoml\n=====\n\nA [TOML](https://github.com/mojombo/toml) parser library
  in\n[Haskell](http://haskell-lang.org).\n\nTOML is the obvious, minimal configuration
  language by\n[Tom Preston-Werner](https://github.com/mojombo).\nIt is an alternative
  to the [XML](http://www.w3.org/TR/REC-xml/),\n[YAML](http://www.yaml.org/spec/1.2/spec.html)
  and\n[INI](http://en.wikipedia.org/wiki/INI_file) formats for the purpose of\nconfiguration
  files, as the first two are too heavy for that prupose,\nand the latter is underspecified.\nToml
  is to configuration files, like what Markdown is for rich-text.\n\nThis library
  aims to be compatible with the latest version of the\n[TOML spec](https://github.com/mojombo/toml),
  currently that is\n[v0.3.1](https://github.com/toml-lang/toml/releases/tag/v0.3.1).\n\nThe
  documentation for this package may (or may not) be found on\n[Hackage](https://hackage.haskell.org/package/htoml).\n\n\n###
  Quick start\n\nInstalling `htoml` is easy.\n\n    cabal install htoml\n\nIn order
  to make your project depend on it you can add it as a\ndependency in your project's
  cabal file.\n\nTo quickly show some features of `htoml` we start `GHCi` from the\nroot
  of the repository so it picks up configuration from the\n`.ghci` file that lives
  there.\n\n    git clone https://github.com/cies/htoml.git\n    cd htoml\n    cabal
  repl  ;# this starts GHCi\n\nWe can immediately start exploring from the `GHCi`
  prompt.\n\n    > txt <- readFile \"benchmarks/example.toml\"\n    > let r = parseTomlDoc
  \"\" txt\n    > r\n    Right (fromList [(\"database\",NTable (fromList [(\"enabled\",NTValue
  (VBoolean True) [...]\n\n    > let Right toml = r\n    > toJSON toml\n    Object
  (fromList [(\"database\",Object (fromList [(\"enabled\",Bool True) [...]\n\n    >
  let Left error = parseTomlDoc \"\" \"== invalid toml ==\"\n    > error\n    (line
  1, column 1):\n    unexpected '='\n    expecting \"#\", \"[\" or end of input\n\nNotice
  that some outputs are truncated, indicated by `[...]`.\n\n\n### Version contraints
  of `htoml`'s dependencies\n\nIf you encounter any problems because `htoml`'s dependecies
  are\nconstrained either too much or too little, please\n[file a issue](https://github.com/cies/htoml/issues)
  for that.\n\nI will try to have `htoml` included in [Stackage](http://stackage.org)\nas
  soon as it is reviewed by the community. Stackage provides a very\nattractive solution
  to most (dependency) version conflicts.\n\n\n### Tests and benchmarks\n\nThe test
  suite is build by default, `cabal configure --disable-tests` disables them.\nThe
  benchmark suite is not run by default, `cabal configure --enable-benchmarks` enables
  them.\n\nWith `cabal build` both of these suites are build as executables and\nput
  somewhere in `dist/`. Passing `--help` to them will reveal their\noptions.\n\n[BurntSushi's
  language agnostic test suite](https://github.com/BurntSushi/toml-test)\nis embedded
  in the test suite executable.  Using a shell script (that\nlives in `test/BurntSushi`)
  the latest tests can be fetched from\nBurntSushi's repository.\n\n\n### Contributions\n\nMost
  welcome! Please raise issues, start discussions, give comments or\nsubmit pull-requests.\nThis
  is one of the first Haskell libraries I wrote, any feedback is\nmuch appreciated.\n\n\n###
  Features\n\n* Follows the latest version of the TOML spec, proven by an extensive
  test suite\n* Incorporates [BurntSushi's language agnostic test suite](https://github.com/BurntSushi/toml-test)\n*
  Has an internal representation that easily maps to JSON\n* Provides a JSON interface
  (suggested by Greg Weber)\n* Useful error messages (thanks to using Parsec over
  Attoparsec)\n* Understands arrays as described in [this issue](https://github.com/toml-lang/toml/issues/254)\n*
  Fails on mix-type arrays (as per spec)\n* Provides a benchmark suite\n* Tries to
  be well documented (please raise an issue if you find documentation lacking)\n\n\n###
  Todo\n\n* Release a stable 1.0 release and submit it to [Stackage](http://stackage.org)\n*
  More documentation\n* Moke all tests pass (currently some more obscure corner cases
  don't pass)\n* Add more tests (maybe find a more mature TOML parser and steal their
  tests)\n* Add property tests with QuickCheck (the internet says it's possible for
  parsers)\n* Extensively test error cases\n* Try using Vector instead of List (measure
  performance increase with the benchmarks)\n* See how lenses may (or may not) fit
  into this package\n\n\n### Acknoledgements\n\nOriginally this project started off
  by improving the `toml` package by\nSpiros Eliopoulos.\n\n\n### Copyright and licensing\n\nThis
  package includes BurntSushi's language agnostic\n[TOML tests](https://github.com/BurntSushi/toml-test),
  which are WTFPL\nlicensed.\n\nThe TOML examples that are used as part of the benchmarks
  are copied\nfrom Tom Preston-Werner's TOML spec which is MIT licensed.\n\nFor all
  other files in this project the copyrights are specified in the\n`htoml.cabal` file,
  and are distributed under the BSD3 license as found\nin the `LICENSE` file.\n"
