homepage: ''
changelog-type: ''
hash: 400fbdac5b54bb2689d8e1b420ecd625bd29f83ea8fe2ff7ec3cff4e8e504d60
test-bench-deps:
  pred-trie: -any
  exceptions: -any
  bytestring: -any
  wai-transformers: -any
  base: -any
  unordered-containers: -any
  hspec: -any
  text: -any
  semigroups: -any
  tries: -any
  pred-set: -any
  regex-compat: -any
  wai-middleware-content-type: -any
  hspec-wai: -any
  hashtables: -any
  composition-extra: -any
  HSet: -any
  nested-routes: -any
  mtl: -any
  hashable: -any
  poly-arity: -any
  attoparsec: -any
  transformers: -any
  errors: -any
  wai-middleware-verbs: -any
  http-types: -any
maintainer: Athan Clark <athan.clark@gmail.com>
synopsis: Declarative, compositional Wai responses
changelog: ''
basic-deps:
  warp: -any
  pred-trie: ! '>=0.5.1'
  exceptions: -any
  bytestring: -any
  wai-transformers: ! '>=0.0.5'
  base: ! '>=4.8 && <5'
  unordered-containers: -any
  text: -any
  semigroups: -any
  tries: -any
  pred-set: ! '>=0.0.1'
  regex-compat: -any
  wai-middleware-content-type: ! '>=0.4.0'
  hashtables: -any
  composition-extra: ! '>=2.0.0'
  HSet: -any
  nested-routes: ! '>=7'
  mtl: -any
  hashable: -any
  poly-arity: ! '>=0.0.7'
  attoparsec: -any
  transformers: -any
  errors: -any
  wai-middleware-verbs: ! '>=0.3.0'
  http-types: -any
all-versions:
- '6.1.0'
- '7.0.0'
- '7.1.0.1'
- '7.1.1'
- '7.2.0'
author: Athan Clark <athan.clark@gmail.com>
latest: '7.2.0'
description-type: haddock
description: ! 'A method to writing Wai responses


  This library attempts to make it easier to write nice Wai response handlers

  by giving us a Sinatra/

  <https://hackage.haskell.org/package/scotty Scotty>-like syntax for declaring HTTP-verb
  oriented

  routes, in addition to file-extension handling and rose-tree like composition.

  Not only do we have literal route specification, like

  <https://hackage.haskell.org/package/scotty Scotty> &

  <https://hackage.haskell.org/package/spock Spock>, but we

  can also embed

  <https://hackage.haskell.org/package/attoparsec Attoparsec>

  parsers and <https://hackage.haskell.org/package/regex-compat Regular Expressions>

  /directly/ in our routes, with our handlers

  reflecting their results.'
license-name: BSD3
