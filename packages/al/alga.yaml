homepage: https://github.com/mrkkrp/alga
changelog-type: markdown
hash: 8fb7d071d2c4bd5e22820c1fe1be6fe57ccbc80fa9cb589397b9b2c76a9bbb15
test-bench-deps:
  tf-random: ! '>=0.5'
  test-framework: ! '>=0.4 && <1'
  base: ! '>=4.8 && <5'
  text: ! '>=1.2.0.4'
  megaparsec: ==4.*
  alga: ! '>=0.2.0'
  test-framework-quickcheck2: ! '>=0.3 && <0.4'
  containers: ! '>=0.5.5.1'
  hxt: ! '>=9.3.1.15'
  mtl: ! '>=2.1.3.1'
  transformers: ! '>=0.2.0.0'
  random: -any
  QuickCheck: ! '>=2.4 && <3'
maintainer: Mark Karpov
synopsis: Algorithmic automation for various DAWs
changelog: ! '## ALGA 0.2.0


  * Use the `path-io` library.


  * Use YAML files for configuration.


  * Fixed bug with “unsupported protocol in URI” on Windows.


  * Cosmetic changes in the interface.


  ## ALGA 0.1.0


  * Initial release.

'
basic-deps:
  tf-random: ! '>=0.5'
  exceptions: ! '>=0.8'
  haskeline: ! '>=0.7.1.3'
  path: ! '>=0.5.3'
  base: ! '>=4.8 && <5'
  text: ! '>=1.2.0.4'
  megaparsec: ! '>=4.2'
  alga: ! '>=0.2.0'
  filepath: ! '>=1.3.0.2'
  data-default: ! '>=0.5.3'
  containers: ! '>=0.5.5.1'
  hxt: ! '>=9.3.1.15'
  formatting: ! '>=6.2'
  mtl: ! '>=2.1.3.1'
  transformers: ! '>=0.2.0.0'
  optparse-applicative: ! '>=0.11.0.2'
  random: -any
  aeson: ! '>=0.7'
  path-io: ! '>=0.3.1'
  yaml: ! '>=0.8.15.1'
all-versions:
- '0.1.0'
- '0.2.0'
author: Mark Karpov
latest: '0.2.0'
description-type: markdown
description: ! "# ALGA\n\n[![License GPL 3](https://img.shields.io/badge/license-GPL_3-green.svg)](http://www.gnu.org/licenses/gpl-3.0.txt)\n[![Hackage](https://img.shields.io/hackage/v/alga.svg?style=flat)](https://hackage.haskell.org/package/alga)\n[![Build
  Status](https://travis-ci.org/mrkkrp/alga.svg?branch=master)](https://travis-ci.org/mrkkrp/alga)\n\nHow
  to algorithmically control every aspect of music using familiar, robust\ntools:
  plugins, DAWs, etc. that have not been built with this in mind? I've\npartially
  solved the problem in [MIDA](https://github.com/mrkkrp/mida) —\nprogram that generates
  MIDI files using simple, symmetric, declarative\nlanguage. However, even though
  MIDA is a fine tool to create scores, it's\nnot sufficient if you want to control
  everything. Initially I thought I\ncould find some plugins that can algorithmically
  control other plugins, but\nthere are no decent tools of this sort. How automation
  is handled in a\ntraditional DAW? Well, you draw it in a separate track. Wouldn't
  it be a\ngood idea to algorithmically perform exactly that — drawing of the\nautomation
  track? This is simpler than it may seem: many DAWs allow to\nexport tracks in XML
  format, and this is all we need to start our hacking.\n\n## How does it work?\n\nYou
  export your tracks in XML format, write some scripts in\n[MIDA](https://github.com/mrkkrp/mida)-like
  language and patch the XML\nfile. Then you can import the files back, they will
  (hopefully) have fancy\nautomation tracks in place.\n\n## Installation\n\n1. Install
  the [Haskell Tool Stack](http://haskellstack.org).\n\n2. Add `~/.local/bin` directory
  to your `PATH`, like this:\n\n   ```\n   # in .bashrc or similar\n   export PATH=$HOME/.local/bin:$PATH\n
  \  ```\n\n3. Clone the repo, `cd` into it, and let `stack` do its thing:\n\n   ```\n
  \  $ git clone https://github.com/mrkkrp/alga.git\n   $ cd mida\n   $ stack build
  --copy-bins\n   ```\n\n4. Check it out:\n\n   ```\n   $ alga --version\n   ALGA
  0.2.0\n   ```\n\n## Example\n\nALGA is a simple declarative language. Just to get
  feeling of it:\n\n```\n#\n# Example of ALGA program\n#\n\nmy_track.pan  = {0..16}
  / 16 $ [{2}]\nmy_track.pand = 1/8, 0\n```\n\nThis thing changes position of stereo-panorama
  for track named\n`my_track`. There are 16 possible values from left to right. Panorama
  is\nchanged instantly, every eighth note.\n\nYou can control volume, panorama, mute,
  input gain, all parameters of send\nslots, insertion slots, and software synths.
  Changes can be applied to audio\ntracks, group tracks, instrument tracks, and effect
  tracks.\n\nSee [ALGA Manual](https://mrkkrp.github.io/alga/) for more information.\n\n##
  License\n\nCopyright © 2015–2016 Mark Karpov\n\nDistributed under GNU GPL, version
  3.\n"
license-name: GPL-3
