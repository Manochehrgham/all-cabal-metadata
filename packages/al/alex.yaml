homepage: http://www.haskell.org/alex/
changelog-type: markdown
hash: bd647b9fac1b1cae339a158925a237e671d91ec1d3d898d813c617f12fc6ee5a
test-bench-deps:
  base: -any
  process: -any
maintainer: Simon Marlow <marlowsd@gmail.com>
synopsis: Alex is a tool for generating lexical analysers in Haskell
changelog: ! "##  Changes in 3.1.7:\n\n * Add support for `%encoding` directive\n
  \  (allows to control `--latin1` from inside Alex scripts)\n * Make code forward-compatible
  with in-progress proposals\n * Suppress more warnings\n\n##  Changes in 3.1.6:\n\n
  * `sdist` for 3.1.5 was mis-generated, causing it to ask for Happy\n    when building.\n\n##
  Changes in 3.1.5:\n\n * Generate less warning-laden code, and suppress other warnings.\n
  * Bug fixes.\n\n##  Changes in 3.1.4:\n\n * Add Applicative/Functor instances for
  GHC 7.10\n\n##  Changes in 3.1.3:\n\n * Fix for clang (XCode 5)\n\n##  Changes in
  3.1.2:\n\n * Add missing file to extra-source-files\n\n##  Changes in 3.1.1:\n\n
  * Bug fixes (#24, #30, #31, #32)\n\n##  Changes in 3.1.0:\n\n * necessary changes
  to work with GHC 7.8.1\n\n##  Changes in 3.0 (since 2.3.5)\n\n * Unicode support
  (contributed mostly by Jean-Philippe Bernardy,\n   with help from Alan Zimmerman).\n\n
  \  * An Alex lexer now takes a UTF-8 encoded byte sequence as input\n     (see Section
  5.1, “Unicode and UTF-8”. If you are using the\n     \"basic\" wrapper or one of
  the other wrappers that takes a\n     Haskell String as input, the string is automatically
  encoded\n     into UTF-8 by Alex. If your input is a ByteString, you are\n     responsible
  for ensuring that the input is UTF-8 encoded. The\n     old 8-bit behaviour is still
  available via the --latin1\n     option.\n\n   * Alex source files are assumed to
  be in UTF-8, like Haskell\n     source files. The lexer specification can use Unicode\n
  \    characters and ranges.\n\n   * `alexGetChar` is renamed to `alexGetByte` in
  the generated code.\n\n   * There is a new option, `--latin1`, that restores the
  old\n     behaviour.\n\n * Alex now does DFA minimization, which helps to reduce
  the size\n   of the generated tables, especially for lexers that use Unicode.\n"
basic-deps:
  base: ! '>=2.1 && <5'
  array: -any
  containers: -any
  QuickCheck: ! '>=2'
  directory: -any
all-versions:
- '2.1.0'
- '2.2'
- '2.3'
- '2.3.1'
- '2.3.2'
- '2.3.3'
- '2.3.4'
- '2.3.5'
- '3.0'
- '3.0.1'
- '3.0.2'
- '3.0.3'
- '3.0.4'
- '3.0.5'
- '3.1.0'
- '3.1.1'
- '3.1.2'
- '3.1.3'
- '3.1.4'
- '3.1.5'
- '3.1.6'
- '3.1.7'
author: Chris Dornan and Simon Marlow
latest: '3.1.7'
description-type: text
description: ! "\t\t       Alex: A Lexical Analyser Generator\n\nAlex is a Lex-like
  tool for generating Haskell scanners.  For complete\ndocumentation, see the doc
  directory.\n\n   http://www.haskell.org/alex/\n   http://hackage.haskell.org/package/alex\n\nAlex
  is built using Cabal.  First install GHC, then:\n \n  $ runhaskell Setup.lhs configure\n
  \ $ runhaskell Setup.lhs build\n  $ runhaskell Setup.lhs install\n\nAlex version
  2.0 has changed fairly considerably since version 1.x,\nand the syntax is almost
  completely different.  For a detailed list of\nchanges, see the release notes in
  the documentation.\n\nAlex is now covered by a BSD-Style licence; see the licence
  file in\nthe `doc' directory for details.\n\nThe sources are in the the `src' directory
  and the documentation in the `doc'\ndirectory; various  examples are in the 'examples'
  subdirectory.\n\nThe source code in the 'src' and 'examples' directories is intended\nfor
  a Haskell 98 compiler with hierarchical modules.  It should work\nwith GHC >= 5.04.\n\nPlease
  report any bugs or comments to the email addresses given below.\n\nShare and enjoy,\n\nChris
  Dornan:  cdornan@arm.com\nIsaac Jones:   ijones@syntaxpolice.org\nSimon Marlow:
  \ simonmar@microsoft.com\n"
license-name: BSD3
