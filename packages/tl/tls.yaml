homepage: http://github.com/vincenthz/hs-tls
changelog-type: markdown
hash: 9012124e41bf2ba364b2a6dfd37cae4961dbcc56e8f8a0d928a7eb93ce4b8f09
test-bench-deps:
  cereal: ! '>=0.3'
  bytestring: -any
  x509-validation: -any
  hourglass: -any
  base: ==4.*
  data-default-class: -any
  tls: -any
  criterion: -any
  crypto-pubkey: ! '>=0.2'
  x509: -any
  cprng-aes: ! '>=0.5'
  tasty-quickcheck: -any
  mtl: -any
  crypto-random: -any
  tasty: -any
  QuickCheck: ! '>=2'
maintainer: Vincent Hanquez <vincent@snarc.org>
synopsis: TLS/SSL protocol native implementation (Server and Client)
changelog: ! "## Version 1.2.16\n\n- Fix an issue with stream cipher not correctly
  calculating the internal state,\n  resulting systematically in bad record mac failure
  during handshake\n\n## Version 1.2.15\n\n- support chain certificate in credentials\n\n##
  Version 1.2.14\n\n- adding ALPN extension\n- adding support for AEAD, and particularly
  AES128-GCM\n- Adding support for ECDH\n- Do not support SSL3 by default for security
  reason.\n- add EnumSafe8 and 16 for specific sized Enum instance that are safer\n-
  export signatureAndHash parser/encoder\n- add a \"known\" list of extensions\n-
  add SignatureAlgorithms extension\n- add Heartbeat extension\n- add support for
  EC curves and point format extensions\n- add preliminary SessionTicket extension\n-
  Debug: Add the ability to choose arbitrary cipher in the client hello.\n\n## Version
  1.2.13\n\n- Fix compilation with old mtl version\n\n## Version 1.2.12\n\n- Propagate
  asynchronous exception\n\n## Version 1.2.11\n\n- use hourglass instead of time\n-
  use tasty instead of test-framework\n- add travis file\n- remove old de-optimisation
  flag as the bytestring bug is old now and it conflict with cabal check\n\n## Version
  1.2.10\n\n- Update x509 dependencies\n\n## Version 1.2.9\n\n- Export TLSParams and
  HasBackend type names\n- Added FlexibleContexts flag required by ghc-7.9\n- debug:
  add support for specifying the timeout length in milliseconds.\n- debug: add support
  for 3DES in simple client\n\n## Version 1.2.8\n\n- add support for 3DES-EDE-CBC-SHA1
  (cipher 0xa)\n\n## Version 1.2.7\n\n- repair retrieve certificate validation, and
  improve fingerprints\n- remove groom from dependency\n- make RecordM an instance
  of Applicative\n- Fixes the Error_EOF partial pattern match error in exception handling\n\n##
  Version 1.2.6 (23 Mar 2014)\n\n- Fixed socket backend endless loop when the server
  does not close connection\n  properly at the TLS level with the close notify alert.\n-
  Catch Error_EOF in recvData and return empty data.\n\n## Version 1.2.5 (23 Mar 2014)\n\n-
  Fixed Server key exchange data being parsed without the correct\n  context, leading
  to not knowing how to parse the structure.\n  The bug happens on efficient server
  that happens to send the ServerKeyXchg\n  message together with the ServerHello
  in the same handshake packet.\n  This trigger parsing of all the messages without
  having set the pending cipher.\n  Delay parsing, when this happen, until we know
  what to do with it.\n\n## Version 1.2.4 (23 Mar 2014)\n\n- Fixed unrecognized name
  non-fatal alert after client hello.\n- Add SSL3 to the supported list of version
  by default.\n- Fix cereal lower bound to 0.4.0 minimum\n\n## Version 1.2.3 (22 Mar
  2014)\n\n- Fixed handshake records not being able to span multiples records.\n"
basic-deps:
  cereal: ! '>=0.4'
  bytestring: -any
  cipher-des: -any
  x509-validation: ! '>=1.5.1 && <1.6.0'
  base: ! '>=3 && <5'
  data-default-class: -any
  crypto-cipher-types: ! '>=0.0.8'
  cipher-rc4: -any
  crypto-pubkey-types: ! '>=0.4'
  asn1-types: ! '>=0.2.0'
  network: -any
  async: -any
  x509-store: ! '>=1.5.0'
  crypto-pubkey: ! '>=0.2.8'
  crypto-numbers: -any
  x509: ! '>=1.5.0 && <1.6.0'
  cipher-aes: ! '>=0.2 && <0.3'
  mtl: -any
  crypto-random: ! '>=0.0 && <0.1'
  byteable: -any
  transformers: -any
  asn1-encoding: -any
  cryptohash: ! '>=0.6'
all-versions:
- '0.1'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.2'
- '0.3'
- '0.3.1'
- '0.3.2'
- '0.3.3'
- '0.4.0'
- '0.4.1'
- '0.5.0'
- '0.5.1'
- '0.6.0'
- '0.6.1'
- '0.6.2'
- '0.6.3'
- '0.6.4'
- '0.7.0'
- '0.7.1'
- '0.7.2'
- '0.8.0'
- '0.8.1'
- '0.8.2'
- '0.8.3'
- '0.8.3.1'
- '0.8.3.2'
- '0.8.4'
- '0.8.5'
- '0.9.0'
- '0.9.1'
- '0.9.2'
- '0.9.3'
- '0.9.4'
- '0.9.5'
- '0.9.6'
- '0.9.7'
- '0.9.8'
- '0.9.9'
- '0.9.10'
- '0.9.11'
- '1.0.0'
- '1.0.1'
- '1.0.2'
- '1.0.3'
- '1.1.0'
- '1.1.1'
- '1.1.2'
- '1.1.3'
- '1.1.4'
- '1.1.5'
- '1.2.0'
- '1.2.1'
- '1.2.2'
- '1.2.3'
- '1.2.4'
- '1.2.5'
- '1.2.6'
- '1.2.7'
- '1.2.8'
- '1.2.9'
- '1.2.10'
- '1.2.11'
- '1.2.12'
- '1.2.13'
- '1.2.14'
- '1.2.15'
- '1.2.16'
- '1.2.17'
author: Vincent Hanquez <vincent@snarc.org>
latest: '1.2.17'
description-type: haddock
description: ! 'Native Haskell TLS and SSL protocol implementation for server and
  client.


  This provides a high-level implementation of a sensitive security protocol,

  eliminating a common set of security issues through the use of the advanced

  type system, high level constructions and common Haskell features.


  Currently implement the SSL3.0, TLS1.0, TLS1.1 and TLS1.2 protocol,

  and support RSA and Ephemeral (Elliptic curve and regular) Diffie Hellman key exchanges,

  and many extensions.


  Some debug tools linked with tls, are available through the

  <http://hackage.haskell.org/package/tls-debug/>.'
license-name: BSD3
