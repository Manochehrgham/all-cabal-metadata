homepage: https://github.com/jdreaver/oanda-rest-api#readme
changelog-type: markdown
hash: 44db3924a18face1edc0b9c6ee19c0ed2bc0d0441a123286bb099bfac663d1d5
test-bench-deps:
  hlint: -any
  bytestring: ! '>=0.10.0'
  base: ! '>=4.7 && <5'
  hspec: -any
  text: ! '>=1.2.0'
  oanda-rest-api: -any
  HUnit: -any
  containers: ! '>=0.5.2'
  lens: ! '>=4.0'
  old-locale: ! '>=1.0.0.6'
  thyme: -any
  scientific: ! '>=0.3.3.0'
  Decimal: ! '>=0.4.2'
  http-conduit: -any
  aeson: ! '>=0.8.0'
  vector: ! '>=0.10.0'
maintainer: johndreaver@gmail.com
synopsis: Client to the OANDA REST API
changelog: ! "# Changelog\n\n## 0.3.0.0\n\n- Prefer `Text` instead of `String` for
  arguments. We still use `String` in\n  endpoints since that is what `wreq` uses.\n-
  Use `http-conduit` instead of `wreq`\n\n## 0.2.0.0\n\n- Use thyme instead of time.
  Thyme uses a much more efficient representation of\n  time stamps. Note that thyme
  has a module called Data.Thyme.Time that\n  provides wrappers and conversion functions
  to and from time types.\n- Added a convenient `granularityToDiffTime` to convert
  from `Granularity` to\n  `NominalDiffTime`.\n- Fixed not being able to use a start/end
  time in conjunction with a count for\n  the candlestick endpoints.\n- Use true optional
  arguments using `Maybe`. This fixes some endpoints breaking\n  when empty lists
  were passed, and also makes it so we don't have to hard-code\n  defaults.\n\n##
  0.1.0.0\n\nInitial release. The API is not yet complete, but there is enough to
  be useful.\n"
basic-deps:
  bytestring: ! '>=0.10.0'
  base: ! '>=4.8 && <5'
  text: ! '>=1.2.0'
  containers: ! '>=0.5.2'
  lens: ! '>=4.0'
  old-locale: ! '>=1.0.0.6'
  thyme: -any
  scientific: ! '>=0.3.3.0'
  Decimal: ! '>=0.4.2'
  http-conduit: -any
  aeson: ! '>=0.8.0'
  vector: ! '>=0.10.0'
all-versions:
- '0.1.0.0'
- '0.3.0.0'
author: John David Reaver
latest: '0.3.0.0'
description-type: markdown
description: ! "# oanda-rest-api\n\n[![Build Status](https://travis-ci.org/jdreaver/oanda-rest-api.svg)](https://travis-ci.org/jdreaver/oanda-rest-api)\n\nThis
  library implements Haskell client to the\n[OANDA REST API](http://developer.oanda.com/rest-live/introduction/).\n\n##
  Status\n\nThere are still parts of the API that are not yet implemented. Here is
  the\nstatus of each part of the API:\n\n* Rates: Mostly done, just need to refactor
  so the parameters are cleaner.\n* Accounts: Done.\n* Orders: Can only get a list
  of open orders. Can't yet create or modify\n  orders.\n* Trades: Almost done, just
  need to add closing a trade.\n* Positions: Done.\n* Transaction History: Almost
  done. Could probably refactor the types to be\n  more specific, instead of putting
  `Maybe` everywhere.\n"
license-name: BSD3
