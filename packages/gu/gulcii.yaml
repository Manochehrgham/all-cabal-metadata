homepage: http://code.mathr.co.uk/gulcii
changelog-type: ''
hash: 49fc9bd3f4990d71c40e5572edd92218f79973d63a249c477758c25daca3ea80
test-bench-deps: {}
maintainer: claude@mathr.co.uk
synopsis: graphical untyped lambda calculus interactive interpreter
changelog: ''
basic-deps:
  base: ! '>=3 && <6'
  filepath: ! '>=1.1 && <1.4'
  cairo: ! '>=0.11 && <0.14'
  containers: ! '>=0.3 && <0.6'
  gtk: ! '>=0.11 && <0.14'
all-versions:
- '0.2.0.1'
- '0.2.0.3'
author: Claude Heiland-Allen
latest: '0.2.0.3'
description-type: haddock
description: ! 'GULCII is an untyped lambda calculus interpreter supporting interactive

  modification of a running program with graphical display of graph reduction.


  There are three variants of lambda abstraction: lazy, strict, and copy:


  @> \x . f x x    -- x is evaluated lazily with sharing@

  @> \x ! f x x    -- x is evaluated strictly and shared@

  @> \x ? f x x    -- x is copied before any evaluation@


  There is additional syntax sugar for natural numbers and lists, using

  <http://en.wikipedia.org/wiki/Mogensen%E2%80%93Scott_encoding#Scott_encoding>:


  @> [0,1,2,3]@


  There is a small standard library based loosely around the Haskell Prelude,

  with additions geared towards MIDI generation for live-coding music, implemented

  using a mechanism similar to ''Debug.Trace.trace'':


  @> \x y . &#123; print : x &#125; y@


  Quick start:


  > gulcii

  > :load mars

  > main

  > :quit


  If you have Pure-data and Timidity, try:


  > timidity -iA -Oj &

  > pd -alsamidi ~/.cabal/share/gulcii-0.2.0.3/extra/fudi2midi.pd &

  > gulcii | pdsend 8765


  See also: live-sequencer which has many more features (but no sharing during

  evaluation).'
license-name: GPL-2
