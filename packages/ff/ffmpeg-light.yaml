homepage: ''
changelog-type: markdown
hash: 84ea6db465cd21493e80859f1601f5911128494bef74a13dce62a221c749281d
test-bench-deps: {}
maintainer: acowley@gmail.com
synopsis: Minimal bindings to the FFmpeg library.
changelog: ! "0.8.2\n---\n\n* Added probe features\n\n0.8.1\n---\n\n* Update raster
  demo to use new JuicyPixels-3.2 API\n\n0.8\n---\n\n* Update to transformers-0.4.1
  and mtl-2.2.1\n  * Changed decode-related types to accomodate deprecation of the\n
  \   `Error` class. This means that if you want to initialize decoders\n    in your
  own transformer stack that has a `MonadError` instance,\n    you will need to use
  the variants with names suffixed by a \"T\"\n    (for transformer).\n\n* Update
  to ffmpeg 2.3\n\n  * Address deprecation warning\n\n    `Using AVStream.codec.time_base
  as a timebase hint to the muxer is\n       deprecated. Set AVStream.time_base instead.`\n\n
  \ * Address \"non-strictly-monotonic PTS\" warning\n\n* Rasterific bump\n  * Rasterific
  exports its own linear algebra types as of 0.3\n\n0.7.1\n---\n\n* Bumped transformers
  dependency\n\n  Note: The use of mtl still triggers deprecation warnings from\n
  \ transformers.\n\n* Fixed bug with changing source pixel format from RGB during\n
  \ encoding.\n\n* Added BGRA pixel format\n\n0.7\n---\n\n* Simplified top-level API
  to focus on JuicyPixels-based interface\n\n0.6\n---\n\n* Cleaned the API of detritus.
  Use the image* functions.\n\n0.5\n---\n\n* Juiced the Encode and Decode APIs.\n\n
  \ Using `imageWriter` and `imageReader` provides a degree of pixel\n  format polymorphism
  based on JuicyPixels pixel types.\n\n0.4\n---\n\n* Fixed corrupted output of palettized
  animated GIFs.\n\n* Added palettization options\n\n    * Using `avPixFmtRgb8` results
  in a small file\n\n    * Using the default pixel format (`avPixFmtPal8`) results
  in a good-looking,\n       fairly large file thanks to JuicyPixels's `palettize`
  function.\n\n    * Setting the `epPreset` field of the `EncodingParams` value passed
  to\n      `frameWriter` to `\"dither\"` results in an even prettier, even larger
  GIF\n      file (again, thanks to JuicyPixels's `palettize` function).\n\n    *
  See the `demo/Raster.hs` for examples.\n\n0.3.1\n---\n\n* Automatically palettize
  RGB24 to RGB8 for GIF output.\n\n* Add a Rasterific demo program that records an
  animation.\n\n0.3\n---\n\n* Support for GIF encoding (and other palletized formats).\n\n0.2\n---\n\n*
  Separate `Scaler` module and friendly `libswscaler` interface.\n\n* Generalized
  `toJuicy` conversion.\n\n* Added demo program.\n\n0.1\n---\n\n* Basic h264 encoding
  and decoding.\n"
basic-deps:
  exceptions: -any
  either: -any
  JuicyPixels: ==3.2.*
  base: ! '>=4.6 && <5'
  mtl: ! '>=2.2.1 && <2.3'
  transformers: ! '>=0.4.1 && <0.5'
  vector: ! '>=0.10.9 && <0.12'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.2'
- '0.2.0.1'
- '0.3'
- '0.3.0.1'
- '0.3.1'
- '0.4'
- '0.5'
- '0.6'
- '0.7'
- '0.7.1'
- '0.7.1.1'
- '0.8'
- '0.8.1'
- '0.8.2'
author: Anthony Cowley
latest: '0.8.2'
description-type: haddock
description: ! 'Stream frames from an encoded video, or stream frames to

  a video output file. To read the first frame from

  an @h264@-encoded file into a JuicyPixels

  @Maybe DynamicImage@,


  > import Codec.FFmpeg

  > import Codec.Picture

  > import Control.Applicative

  >

  > go :: IO (Maybe DynamicImage)

  > go = do (getFrame, cleanup) <- imageReader "myVideo.mov"

  >         (fmap ImageRGB8 <$> getFrame) <* cleanup


  Tested on OS X 10.9.4 with <http://www.ffmpeg.org FFmpeg> 2.3

  installed via <http://brew.sh homebrew>.'
license-name: BSD3
