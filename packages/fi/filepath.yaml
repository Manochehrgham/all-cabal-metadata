changelog-type: markdown
hash: 02a3d0dbafeaa7babe4c208190377c70d5516398c5bb209d6af28bead7d08690
test-bench-deps:
  base: -any
  filepath: -any
  QuickCheck: ! '>=2.7 && <2.8'
synopsis: Library for manipulating FilePaths in a cross platform way.
changelog: ! "# Changelog for [`filepath` package](http://hackage.haskell.org/package/filepath)\n\n_Note:
  below all `FilePath` values are unquoted, so `\\\\` really means two backslashes._\n\n##
  1.4.0.0  *Mar 2015*\n\n  * Bundled with GHC 7.10.1\n\n  * New function: Add `-<.>`
  as an alias for `replaceExtension`.\n\n  * Semantic change: `joinDrive /foo bar`
  now returns `/foo/bar`, instead of `/foobar`\n\n  * Semantic change: on Windows,
  `splitSearchPath File1;\\\"File 2\\\"` now returns `[File1,File2]` instead of `[File1,\\\"File2\\\"]`\n\n
  \ * Bug fix: on Posix systems, `normalise //home` now returns `/home`, instead of
  `//home`\n\n  * Bug fix: `normalise /./` now returns `/` on Posix and `\\` on Windows,
  instead of `//` and `\\\\`\n\n  * Bug fix: `isDrive \"\"` now returns `False`, instead
  of `True`\n\n  * Bug fix: on Windows, `dropTrailingPathSeparator /` now returns
  `/` unchanged, instead of the normalised `\\`\n\n  * Bug fix: on Windows, `equalFilePath
  C:\\ C:` now returns `False`, instead of `True`\n\n  * Bug fix: on Windows, `isValid
  \\\\\\foo` now returns `False`, instead of `True`\n\n  * Bug fix: on Windows, `isValid
  \\\\?\\D:file` now returns `False`, instead of `True`\n\n  * Bug fix: on Windows,
  `normalise \\` now returns `\\` unchanged, instead of `\\\\`\n\n  * Bug fix: on
  Windows, `normalise C:.\\` now returns `C:`, instead of `C:\\\\`\n\n  * Bug fix:
  on Windows, `normalise //server/test` now returns `\\\\server\\test`, instead of
  `//server/test` unchanged\n\n  * Bug fix: on Windows, `makeRelative / //` now returns
  `//`, instead of `\"\"`\n\n## 1.3.0.2  *Mar 2014*\n\n  * Bundled with GHC 7.8.1\n\n
  \ * Update to Cabal 1.10 format\n\n  * Minor Haddock cleanups\n\n## 1.3.0.1  *Sep
  2012*\n\n  * Bundled with GHC 7.6.1\n\n  * No changes\n\n## 1.3.0.0  *Feb 2012*\n\n
  \ * Bundled with GHC 7.4.1\n\n  * Add support for SafeHaskell\n\n  * Bug fix: `normalise
  /` now returns `/`, instead of `/.`\n"
basic-deps:
  base: ! '>=4 && <4.9'
all-versions:
- '1.0'
- '1.1.0.0'
- '1.1.0.1'
- '1.1.0.2'
- '1.1.0.3'
- '1.1.0.4'
- '1.2.0.0'
- '1.2.0.1'
- '1.3.0.0'
- '1.3.0.1'
- '1.3.0.2'
- '1.4.0.0'
latest: '1.4.0.0'
description-type: markdown
description: ! '# FilePath [![Hackage version](https://img.shields.io/hackage/v/filepath.svg?style=flat)](https://hackage.haskell.org/package/filepath)
  [![Build Status](https://img.shields.io/travis/haskell/filepath.svg?style=flat)](https://travis-ci.org/haskell/filepath)


  The `filepath` package provides functionality for manipulating `FilePath` values,
  and is shipped with both [GHC](https://www.haskell.org/ghc/) and the [Haskell Platform](https://www.haskell.org/platform/).
  It provides three modules:


  * [`System.FilePath.Posix`](http://hackage.haskell.org/package/filepath/docs/System-FilePath-Posix.html)
  manipulates POSIX/Linux style `FilePath` values (with `/` as the path separator).

  * [`System.FilePath.Windows`](http://hackage.haskell.org/package/filepath/docs/System-FilePath-Windows.html)
  manipulates Windows style `FilePath` values (with either `\` or `/` as the path
  separator, and deals with drives).

  * [`System.FilePath`](http://hackage.haskell.org/package/filepath/docs/System-FilePath.html)
  is an alias for the module appropriate to your platform.


  All three modules provide the same API, and the same documentation (calling out
  differences in the different variants).

'
