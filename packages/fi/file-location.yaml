changelog-type: ''
hash: 3ef92937617466534eae7ad840e0b94354388ac532007941a778807041ca9aad
test-bench-deps:
  base: ! '>=4 && <5'
  process: -any
  lifted-base: -any
  file-location: -any
synopsis: common functions that show file location information
changelog: ''
basic-deps:
  base: ! '>=4 && <5'
  th-orphans: ! '>=0.9'
  lifted-base: -any
  containers: -any
  transformers: ! '>=0.2 && <0.5'
  template-haskell: -any
all-versions:
- '0.2.0'
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.2.4'
- '0.3.0'
- '0.4.0'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.4.4'
- '0.4.5'
- '0.4.5.1'
- '0.4.5.2'
- '0.4.5.3'
- '0.4.6'
- '0.4.7'
- '0.4.7.1'
latest: '0.4.7.1'
description-type: haddock
description: ! 'Common debugging\/error\/exception functions that give file location
  information


  @

  $(err \"OH NO!\")

  main:Main main.hs:16:1 OH NO!

  @


  Notice how it displays package:module file:line:character


  It exposes the functions err (error), undef (undefined), and trc (Debug.Trace.trace).
  All of these behave the same as their normal counterpart but also spit out a location.


  Here is my favorite helper, debug, which is like trace but just show the value.


  @

  debug [1,2,3]

  DEBUG: [1,2,3]

  [1,2,3]

  @


  And The Template Haskell version.


  @

  $(dbg) [1,2,3]

  DEBUG main:Main main.hs:1:3 [1,2,3]

  [1,2,3]

  @


  Also there is a version of thrwIO that gives location information


  @

  ($(thrwIO) $ AException) `catch` \e -> putStrLn (\"Caught \" ++ show (e :: AException))

  Caught AException \"main:Main test/main.hs:25:6\"

  @


  See module for a listing of all the functions with short descriptions, and the homepage
  for some more examples https://github.com/gregwebs/ErrorLocation.hs'
