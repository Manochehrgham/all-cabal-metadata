homepage: https://github.com/reinerp/first-class-patterns
changelog-type: ''
hash: 99968efe85cedbf68969f45317744982b03cc4b42d8d552072c33eb31a765901
test-bench-deps: {}
maintainer: Brent Yorgey <byorgey@cis.upenn.edu>
synopsis: First class patterns and pattern matching, using type families
changelog: ''
basic-deps:
  base: ! '>=4.5 && <5'
  transformers: ! '>=0.1.0 && <0.6'
all-versions:
- '0.1.0'
- '0.2.0'
- '0.3.0'
- '0.3.1'
- '0.3.2'
- '0.3.2.1'
- '0.3.2.2'
- '0.3.2.3'
author: Reiner Pope, Brent Yorgey
latest: '0.3.2.3'
description-type: haddock
description: ! 'This package implements a library of first class patterns. The

  initial basis for this library was Morten Rhiger''s \"Type-safe

  pattern combinators\"; the patterns can be used in an almost

  identical way to those of Morten Rhiger. In a series of blog

  posts at

  <http://reinerp.wordpress.com/category/pattern-combinators/>

  the types of patterns were made more revealing using type

  families, and a simpler implementation was used which avoids

  some book-keeping.


  The library reimplements most of Haskell''s built-in

  pattern matching facilities, plus some more. The pattern

  matches of this library are lightweight: when GHC''s

  optimisation is turned on, all overhead should be optimised

  away, leaving a standard Haskell pattern match.


  If you''re just reading the documentation for this library for

  the first time, start with "Data.Pattern".'
license-name: BSD3
