homepage: http://code.haskell.org/~wren/
changelog-type: text
hash: 85773cd2c3b0b63243eeeb7658ad20bf846b6c51466e31a7657a111eccb6108a
test-bench-deps: {}
maintainer: wren@community.haskell.org
synopsis: Log-domain floating point numbers
changelog: ! "0.13.3.2 (2015-08-06):\n    - Fixed the buggy Show LogFloat instance\n0.13.3.1
  (2015-05-30):\n    - Moved VERSION to CHANGELOG\n0.13.3 (2015-03-29):\n    - Got
  clean compile on GHC 7.10.1\n0.13.2 (2015-03-23):\n    - Preliminary fixes for dealing
  with type-roles in GHC 7.10\n0.13.1 (2015-03-10):\n    - Fixed a major bug in sum\n0.13
  (2015-02-17):\n    - monomorphized logFloat, logToLogFloat, fromLogFloat, logFromLogFloat\n
  \   - added sum, product, pow\n    - cleaned up some extraneous rewrite rules\n
  \   - removed support for older versions of GHC, in order to clean things up\n\n0.12.1
  (2010-03-19):\n    - Fixed some NaN injection bugs in the Num instance. These would
  only have been triggered by non-probabilistic uses of LogFloat (i.e., if you used
  @logFloat infinity@)\n0.12.0.3 (2009-04-03):\n    - Added notes to INSTALL about
  Windows compatibility\n0.12.0.2 (2009-04-03):\n    - Updated TODO and VERSION\n0.12.0.1
  (2009-03-25):\n    - Disabled -fvia-C so the FFI can be used in GHC 6.10\n0.12 (2009-03-10):\n
  \   - Added log1p.\n\t- Added Storable instance (for GHC only)\n\t- removed orphaned
  toRational/fromRational rules. The RealToFrac module obviates those optimizations.\n\t-
  Adjusted Real LogFloat instance to throw errors on transfinite values\n\n0.11.2
  (2009-03-09):\n    - Moved log/exp rules from LogFloat into Transfinite\n0.11.1.1
  (2009-03-09):\n    - Documentation updates\n0.11.1 (2009-03-08):\n    - Added IArray
  UArray LogFloat instance (thanks to Felipe Lessa).\n0.11 (2009-01-29):\n    - Moved
  the RealToFrac class from Data.Number.Transfinite to Data.Number.RealToFrac. This
  breaks backwards compatibility if you depended directly on that module for the class.
  If you imported the class from Data.Number.LogFloat then you're still fine.\n\t-
  Cabal build fail due to missing new module (Fixed in 0.11.0.1).\n\n0.10 (2009-01-29):\n\t-
  Hugs' Prelude definitions of isInfinite and isNaN for Float and Double are buggy.
  The new Hugs.RealFloat module provides correct implementations (defaulting to the
  Prelude definition for non-Hugs compilers).\n    - The PartialOrd and Transfinite
  instances for Double and Float have been updated to use these corrected functions.\n
  \   -  Added maxPO and minPO to PartialOrd and added comparingPO to Data.Number.PartialOrd.\n
  \   - Minor changes to circumvent bugs in Hackage's new version of Haddock. You
  should be able to see all the documentation now.\n\n0.9.1 (2008-08-30):\n    - Fixed
  some PartialOrd stuff and sanitized documentation\n\t- Build fail on GHC 6.10 due
  to GHC.Prim (Fixed in 0.9.1.1).\n0.9.0 (2008-08-30):\n    - s/toFractional/realToFrac/g.\n
  \   - Also moved realToFrac and log to Transfinite\n\t- Build fail on GHC 6.10 due
  to GHC.Prim\n\n0.8.6 (2008-08-17):\n    - Removed buggy RULES\n\t- Build fail on
  GHC 6.10 due to -Werror and removal of -fno-warn-orphans\n0.8.5 (2008-08-17):\n
  \   - Gave up and converted from lhs to hs so Hackage docs work\n0.8.4 (2008-08-17):\n
  \   - Broke out Transfinite\n0.8.3 (2008-08-16):\n    - Documentation updates\n0.8.2
  (2008-08-14):\n    - Announced release\n0.8:\n    - Did a bunch of tweaking. Things
  should be decent now\n\n0.7:\n    - Haddockified\n0.6:\n    - Fixed monomorphism
  of LogFloat constructors/destructors.\n0.5:\n    - Added optimization rules.\n0.4:\n
  \   - Translated from Perl to Haskell at revision 2007.12.20.\n0.3:\n    - Converted
  extensive comments to POD format.\n0.2:\n    - Did a bunch of profiling, optimizing,
  and debugging.\n0.1:\n    - Initial version (in Perl) created for hw5 for NLP with
  Jason Eisner.\n"
basic-deps:
  base: ==4.*
  array: -any
all-versions:
- '0.8.1'
- '0.8.2'
- '0.8.3'
- '0.8.4'
- '0.8.5'
- '0.8.6'
- '0.9.0'
- '0.9.1'
- '0.9.1.1'
- '0.9.1.2'
- '0.9.1.3'
- '0.10.0'
- '0.11.0'
- '0.11.0.1'
- '0.11.1'
- '0.12'
- '0.12.0.1'
- '0.12.1'
- '0.13.0.1'
- '0.13.1'
- '0.13.2'
- '0.13.3'
- '0.13.3.1'
- '0.13.3.2'
author: wren gayle romano
latest: '0.13.3.2'
description-type: haddock
description: ! 'This module presents a type for storing numbers

  in the log-domain. The main reason for doing this

  is to prevent underflow when multiplying many

  probabilities as is done in Hidden Markov Models.

  It is also helpful for preventing overflow.'
license-name: BSD3
