changelog-type: ''
hash: 889abf6de99b6c76a59eb9717af828b61a4c6f2d1bdfaf3f92b71c937b70bedd
synopsis: Methods for composing monads.
changelog: ''
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.4.0.0'
- '0.5.0.0'
- '0.6.0.0'
- '0.7.0.0'
- '0.8.0.0'
- '0.8.1.0'
- '0.8.2.0'
latest: '0.8.2.0'
description-type: haddock
description: ! 'Methods for composing monads.


  The IO monad transformer solves the problem of combining two IO-performing monads,
  so that neither one needs to provide a MonadIO interface and both can be transformed
  separately.


  Most known monads have a distributive law. The Distributive module implements distributivity
  for monad transformers.


  A monad transformer can transform another monad, but if you have two monads both
  lacking a transformer, there is little you can do in general. However, you can compose
  them in a coproduct construction. The PlusMonad module implements a similar plan,
  but differs from coproducts in that it doesn''t compress together contiguous uses
  of a monad.'
