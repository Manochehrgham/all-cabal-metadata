homepage: ''
changelog-type: ''
hash: c097239998d99250043f82a8029df2ffa74bfd892e81ab5285c6fe36e0b6885b
test-bench-deps:
  base: ! '>=4 && <5'
  text: ! '>=0.11.1.0 && <1.3'
  criterion: ! '>=1.0.0.1 && <1.2'
  morte: -any
maintainer: Gabriel439@gmail.com
synopsis: A bare-bones calculus of constructions
changelog: ''
basic-deps:
  http-client: ! '>=0.4.0 && <0.5'
  base: ==4.*
  managed: ! '>=1.0.0 && <1.1'
  text: ! '>=0.11.1.0 && <1.3'
  system-fileio: ! '>=0.2.1 && <0.4'
  array: ! '>=0.4.0.0 && <0.6'
  containers: ! '>=0.5.0.0 && <0.6'
  binary: ! '>=0.7.0.0 && <0.8'
  pipes: ! '>=4.0.0 && <4.2'
  http-client-tls: ! '>=0.2.0 && <0.3'
  transformers: ! '>=0.2.0.0 && <0.5'
  optparse-applicative: <0.13
  text-format: <0.4
  deepseq: ! '>=1.3.0 && <1.5'
  system-filepath: ! '>=0.3.1 && <0.5'
  Earley: ! '>=0.10.1.0 && <0.11'
  microlens-mtl: ! '>=0.1.3.1 && <0.2'
  microlens: ! '>=0.2.0.0 && <0.5'
  morte: -any
all-versions:
- '1.0.0'
- '1.0.1'
- '1.1.0'
- '1.1.1'
- '1.1.2'
- '1.2.0'
- '1.2.1'
- '1.3.0'
- '1.3.1'
- '1.4.0'
- '1.4.1'
- '1.4.2'
author: Gabriel Gonzalez
latest: '1.4.2'
description-type: haddock
description: ! 'Morte is a typed, purely functional, and strongly normalizing

  intermediate language designed for whole-program super-optimization.  Use

  this library to type-check, optimize, parse, pretty-print, serialize and

  deserialize expressions in this intermediate language.


  This library also installs an executable that you can use to type-check and

  optimize a @morte@ program.


  "Morte.Core" contains the core calculus of constructions for this language


  "Morte.Lexer" contains the @alex@-generated lexer for Morte


  "Morte.Parser" contains the @happy@-generated parser for Morte


  Read "Morte.Tutorial" to learn how to use this library'
license-name: BSD3
