homepage: https://github.com/nfjinjing/moesocks
changelog-type: markdown
hash: 89939c6640b59f91a5557a8177f1f3ea98e680b934ba5ee2f35ef06c9095af59
test-bench-deps: {}
maintainer: Jinjing Wang <nfjinjing@gmail.com>
synopsis: A functional firewall killer
changelog: ! '0.1.0.18

  --------

  * Add complete command line arguments


  0.1.0.17

  --------

  * Add `--disable-socks5` flag to switch off the socks5 service on local


  0.1.0.16

  --------

  * Add compatibility with shadowsocks for UDP port forwarding


  0.1.0.15

  --------

  * Add UDP port forwarding


  0.1.0.14

  --------

  * Add IPv6 support

'
basic-deps:
  bytestring: -any
  unix: -any
  stm: -any
  base: ! '>4 && <=5'
  time: -any
  unordered-containers: -any
  text: -any
  network: -any
  async: -any
  containers: -any
  lens: -any
  binary: -any
  hslogger: -any
  mtl: -any
  attoparsec: -any
  transformers: -any
  optparse-applicative: -any
  random: -any
  HsOpenSSL: -any
  aeson: -any
  safe: -any
  cryptohash: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.5'
- '0.1.0.6'
- '0.1.0.7'
- '0.1.0.8'
- '0.1.0.9'
- '0.1.0.10'
- '0.1.0.11'
- '0.1.0.12'
- '0.1.0.13'
- '0.1.0.14'
- '0.1.0.15'
- '0.1.0.16'
- '0.1.0.17'
- '0.1.0.18'
author: Jinjing Wang
latest: '0.1.0.18'
description-type: markdown
description: ! "MoeSocks\n========\n\nA socks5 proxy using the client / server architecture.\n\nMoeSocks
  is greatly inspired by [shadowsocks].\n\nA sample `config.json` file is included
  in this repository and the cabal\narchive.\n\ntype `moesocks --help` for help.\n\nUsage\n-----\n*
  Edit `config.json` to fit your setup (at least the `remote` and `password`\n  fields)\n*
  Start a remote node outside the firewall: \n          \n        moesocks --role
  remote -c config.json\n* Start a local node inside the firewall: \n    \n        moesocks
  --role local -c config.json\n* Now you have a socks5 proxy running inside the firewall
  using port \n  `localPort`.\n\nFeatures\n--------\n* Socks5 proxy service, obviously\n*
  TCP port forwarding\n* UDP port forwarding, for example `-U 5300:8.8.8.8:53`\n*
  TCP per connection throttling (as a side effect of trying to find a bug in the\nremote)\n*
  Socks5 service on local can be turned off\n* Understand shadowsocks' configuration
  file\n\nNot working\n-----------\n* Remote is flaky, particularly when trying to
  send data through the Great\n  Firewall of China (GFW).\n* UDP over Socks5 is not
  implemented\n* More then 2 times slower then the original Python implementation
  (measured at\n  20M/s vs 43M/s on an Intel P8800, using the AES-256-CFB method)\n\nPlanning
  features\n------------------\n* None\n\nNotes\n------\n\nThere's a bug that prevents
  remote from working correctly with GFW.\nThanks, Prof Fang!\n\nYou should use the
  original Python implementation of [shadowsocks] on the remote\nserver if your primary
  goal is to bypass internet censorship in China.\n\nFrom the author's limited testing,
  [shadowsocks-go] also works reasonably\nwell, though it might not run as fast as
  the Python's version.\n\nThere is an earlier implementation of [shadowsocks-haskell]
  by rnons that\nmakes MoeSocks possible. \n\nThe original goal of MoeSocks is to
  provide extra configurability to standard\nshadowsocks, but it has been discarded
  since remote is too flaky. \n\n[shadowsocks]:https://github.com/shadowsocks/shadowsocks
  \n[shadowsocks-go]:https://github.com/shadowsocks/shadowsocks-go\n[shadowsocks-haskell]:https://github.com/rnons/shadowsocks-haskell\n\n\n\n"
license-name: Apache-2.0
