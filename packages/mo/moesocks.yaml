homepage: https://github.com/nfjinjing/moesocks
changelog-type: markdown
hash: ccea4cea7d025bf9558ff5b5b26c055ed8f47ddd1b629ac1e251894d14e9c189
test-bench-deps: {}
maintainer: Jinjing Wang <nfjinjing@gmail.com>
synopsis: A functional firewall killer
changelog: ! "0.1.0.22\n--------\n* Add the `-o` flag to turn on simple obfuscation
  (randomly flush socket to vary\n  packet length). There is about a 10-20% performance
  cost.\n\n0.1.0.21\n--------\n* Add in README that `GHC 7.10.2` is a must!\n\n0.1.0.20\n--------\n*
  Rewrite Encrypt module, cache password hash\n\n0.1.0.19\n--------\n* Fix a memory
  leak\n\n0.1.0.18\n--------\n* Add complete command line arguments\n\n0.1.0.17\n--------\n*
  Add `--disable-socks5` flag to switch off the socks5 service on local\n\n0.1.0.16\n--------\n*
  Add compatibility with shadowsocks for UDP port forwarding\n\n0.1.0.15\n--------\n*
  Add UDP port forwarding\n\n0.1.0.14\n--------\n* Add IPv6 support\n"
basic-deps:
  bytestring: -any
  unix: -any
  stm: -any
  base: ! '>4 && <=5'
  time: -any
  unordered-containers: -any
  text: -any
  strict: -any
  network: -any
  async: -any
  containers: -any
  lens: -any
  binary: -any
  hslogger: -any
  mtl: -any
  attoparsec: -any
  transformers: -any
  optparse-applicative: -any
  random: -any
  HsOpenSSL: -any
  aeson: -any
  safe: -any
  cryptohash: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.5'
- '0.1.0.6'
- '0.1.0.7'
- '0.1.0.8'
- '0.1.0.9'
- '0.1.0.10'
- '0.1.0.11'
- '0.1.0.12'
- '0.1.0.13'
- '0.1.0.14'
- '0.1.0.15'
- '0.1.0.16'
- '0.1.0.17'
- '0.1.0.18'
- '0.1.0.19'
- '0.1.0.20'
- '0.1.0.21'
- '0.1.0.22'
author: Jinjing Wang
latest: '0.1.0.22'
description-type: markdown
description: ! "MoeSocks\n========\n\nA socks5 proxy using the client / server architecture.\n\nMoeSocks
  is greatly inspired by [shadowsocks] and can be used in place of it.\n\nInstallation\n------------\n\n*
  Need `GHC 7.10.2` and `cabal-install`.\n      \n  Installing [haskell-platform](https://www.haskell.org/platform/)
  should be\n  sufficient. (Linux users should pick the *Generic* distribution, since\n
  \ it's the most up to date)\n\n* Repeat, you need `GHC 7.10.2` exactly, not `7.10.1`
  or anything else, since\n  remote only runs well in `7.10.2`.\n\n* Update packages\n\n
  \       cabal update\n\n* Install\n\n        cabal install moesocks\n\n* Add `~/.cabal/bin`
  to your `$PATH`, if you haven't already.\n\nUsage\n-----\n* Download a sample [config.json]
  to your current path\n\n* Edit `config.json` to fit your setup (at least the `remote`
  and `password`\n  fields)\n\n* Start a remote node outside the firewall: \n          \n
  \       moesocks --role remote -c config.json\n\n* Start a local node inside the
  firewall: \n    \n        moesocks --role local -c config.json\n\n* Now you have
  a socks5 proxy running inside the firewall using port \n  `localPort`.\n\n* Shadowsocks
  compatible obfuscation can be turned on with the `-o` flag to make\n  statistical
  analysis on packet length a bit more confusing.\n\n* See more options:\n\n        moesocks
  --help\n\n\nFeatures\n--------\n* Socks5 proxy service, obviously\n* TCP port forwarding\n*
  UDP port forwarding, for example `-U 5300:8.8.8.8:53`\n* TCP per connection throttling
  (as a side effect of trying to find a bug in the\nremote)\n* Socks5 service on local
  can be turned off\n* Understand shadowsocks' configuration file\n\nNot working\n-----------\n*
  UDP over Socks5 is not implemented\n* More then 2 times slower then the original
  Python implementation (measured at\n  20M/s vs 43M/s on an Intel P8800, using the
  AES-256-CFB method)\n\nPlanning features\n------------------\n* None\n\nCredits\n-------\n*
  [shadowsocks] greatly inspired MoeSocks.\n  Shadowsocks introduced a ground breaking
  design and implementation to bypass\n  Internet censorship in China. \n* [shadowsocks-haskell]
  by rnons, another implementation of shadowsocks in \n  Haskell, also greatly inspired
  MoeSocks. Much of the understanding of\n  the internal of shadowsocks was gained
  by reading rnons's implementation.\n\nLicense\n--------\nCopyright 2015 Jinjing
  Wang\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may
  not use this file except in compliance with the License.\nYou may obtain a copy
  of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required
  by applicable law or agreed to in writing, software\ndistributed under the License
  is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
  either express or implied.\nSee the License for the specific language governing
  permissions and\nlimitations under the License.\n\n[shadowsocks]:https://github.com/shadowsocks/shadowsocks
  \n[shadowsocks-go]:https://github.com/shadowsocks/shadowsocks-go\n[shadowsocks-haskell]:https://github.com/rnons/shadowsocks-haskell\n[config.json]:https://raw.githubusercontent.com/nfjinjing/moesocks/master/config.json\n\n\n"
license-name: Apache-2.0
