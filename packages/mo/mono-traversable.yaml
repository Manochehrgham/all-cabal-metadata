changelog-type: ''
hash: 9319e1a58fb20a0a67a4bf56d5fada80c97de6410f9491b729f59b93629b52a9
synopsis: Type classes for mapping, folding, and traversing monomorphic containers
changelog: ''
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.3.0.1'
- '0.3.0.2'
- '0.3.0.3'
- '0.3.1'
- '0.4.0'
- '0.4.0.1'
- '0.4.0.2'
- '0.4.0.3'
- '0.4.0.4'
- '0.5.0'
- '0.6.0'
- '0.6.0.1'
- '0.6.0.2'
- '0.6.0.3'
- '0.6.0.4'
- '0.6.1'
- '0.6.2'
- '0.6.3'
- '0.7.0'
- '0.8.0'
- '0.8.0.1'
- '0.9.0'
- '0.9.0.1'
- '0.9.0.2'
- '0.9.1'
latest: '0.9.1'
description-type: haddock
description: Monomorphic variants of the Functor, Foldable, and Traversable typeclasses.
  If you understand Haskell's basic typeclasses, you understand mono-traversable.
  In addition to what you are used to, it adds on an IsSequence typeclass and has
  code for marking data structures as non-empty.
