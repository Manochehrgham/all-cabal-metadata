changelog-type: ''
hash: 520473dd474ee84b22d966122e287fdb282371b24be78466090eae058bfa23dd
synopsis: An enhanced core prelude; a common foundation for alternate preludes.
changelog: ''
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.3.1.0'
- '0.3.2.0'
- '0.3.3.0'
- '0.3.4.0'
- '0.3.5.0'
- '0.3.6.0'
- '0.3.7'
- '0.3.8'
- '0.3.9'
- '0.3.10'
- '0.3.11'
- '0.3.11.1'
- '0.3.12'
- '0.3.13'
- '0.4.0'
latest: '0.4.0'
description-type: haddock
description: ! 'The premise of @basic-prelude@ is that there are a lot of very commonly
  desired features missing from the standard @Prelude@, such as commonly used operators
  (@\<$\>@ and @>=>@, for instance) and imports for common datatypes (e.g., @ByteString@
  and @Vector@). At the same time, there are lots of other components which are more
  debatable, such as providing polymorphic versions of common functions.


  So @basic-prelude@ is intended to give a common foundation for a number of alternate
  preludes. The package provides two modules: @CorePrelude@ provides the common ground
  for other preludes to build on top of, while @BasicPrelude@ exports @CorePrelude@
  together with commonly used list functions to provide a drop-in replacement for
  the standard @Prelude@.


  Users wishing to have an improved @Prelude@ can use @BasicPrelude@. Developers wishing
  to create a new prelude should use @CorePrelude@.'
