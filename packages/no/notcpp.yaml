changelog-type: ''
hash: ac4d9d9ec8de730c726f01cd5fff4dcb5431e042c0ff0eac58f0433a6edb54d0
synopsis: Avoiding the C preprocessor via cunning use of Template Haskell
changelog: ''
all-versions:
- '0.0.1'
- '0.1'
- '0.1.0.1'
- '0.2'
- '0.2.0.1'
- '0.2.0.2'
- '0.2.0.3'
latest: '0.2.0.3'
description-type: haddock
description: ! 'notcpp is a library that attempts to provide an alternative to

  using CPP as a mechanism for conditional compilation. It provides

  facilities for determining if specific names or class instances

  exist and responding accordingly.


  When a value or class instance appears between minor releases of a

  third-party package, a common way of dealing with the problem is to

  use CPP to conditionally use one block of code or another. The

  trouble with CPP is it''s hard to statically analyse: tools based on

  haskell-src-exts will outright refuse to parse it, for example. It

  turns out Template Haskell will do the same job in some cases.


  notcpp is largely a proof-of-concept, experimental package: you

  are welcome to use it if it suits you, but it may be liable to

  change suddenly.'
