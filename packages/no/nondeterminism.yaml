changelog-type: ''
hash: 6b25f91b74b3ca88a9fa1351d228509ea10aa504b15334fdd96c5deeb93b863f
test-bench-deps: {}
synopsis: A monad and monad transformer for nondeterministic computations.
changelog: ''
basic-deps:
  base: ! '>=3 && <5'
  containers: -any
  mtl: ! '>=2'
all-versions:
- '1.0'
latest: '1.0'
description-type: markdown
description: ! "# Nondeterminism\n\nThis provides nondeterministic computations in
  Haskell. It implements\nan `Amb` monad in which you can perform nondeterministic
  choices along\nwith a monad transformer version, `AmbT`.\n\n## Amb\n\nAn example
  which finds Pythagorean triplets up to a certain size, project Euler problem 9.\n\n
  \   import Control.Monad\n    import Control.Monad.Amb\n    pyTriple :: (Num t,
  Ord t) => t -> Amb r (t, t, t)\n    pyTriple n = do a <- anIntegerBetween 1 n\n
  \                   b <- anIntegerBetween (a + 1) n\n                    c <- anIntegerBetween
  (b + 1) n\n                    when (a*a + b*b /= c*c) fail'\n                    return
  (a,b,c)\n\n    length $ allValues $ pyTriple 10000\n\n## Future\n\n - Docs!\n"
