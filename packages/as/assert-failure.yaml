changelog-type: ''
hash: f5db9fb89cf9bb3931982b8ebc752fea485e400177acbf7e4ec4cee2e07e7899
test-bench-deps: {}
synopsis: Syntactic sugar improving 'assert' and 'error'
changelog: ''
basic-deps:
  base: ! '>=4 && <5'
  text: ! '>=0.11.2.3 && <2'
  pretty-show: ! '>=1.6 && <2'
all-versions:
- '0.1'
- '0.1.1.0'
latest: '0.1.1.0'
description-type: markdown
description: ! "assert-failure [![Build Status](https://secure.travis-ci.org/Mikolaj/assert-failure.png)](http://travis-ci.org/Mikolaj/assert-failure)[![Build
  Status](https://drone.io/github.com/Mikolaj/assert-failure/status.png)](https://drone.io/github.com/Mikolaj/assert-failure/latest)\n==============\n\nThis
  library contains syntactic sugar that improves\nthe usability of 'assert' and 'error'.\nThis
  is actually a bunch of hacks wrapping the original 'assert' function,\nwhich is,
  as of GHC 7.8, the only simple way of obtaining source positions.\nThe original
  'assert' function is here re-exported for convenience.\n\nSee also <http://hackage.haskell.org/package/loch>,\n<http://hackage.haskell.org/package/assert>\nand
  <https://ghc.haskell.org/trac/ghc/ticket/5273>.\n\nMake sure to enable assertions
  for your cabal package, e.g., by setting\n\n    ghc-options: -fno-ignore-asserts\n\nin
  your .cabal file. Otherwise, some of the functions will have\nno effect at all.\n\nThe
  library is available from [Hackage] [1] and it's homepage\nand issue tracker is
  on [github] [2]. The library emerged from the tons\nof assertions (augmented by
  comments and printouts) and 'error' calls\n(marked by unique strings to overcome
  their lack of source position)\nin the [LambdaHack] [3] game engine.\n\n[1]: http://hackage.haskell.org/package/assert-failure\n[2]:
  https://github.com/Mikolaj/assert-failure\n[3]: http://hackage.haskell.org/package/LambdaHack\n"
