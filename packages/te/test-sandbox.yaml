changelog-type: markdown
hash: 71cc40b7ea79dc932c3178cf5b1cd80654b1548b6ae6a6c9097121ba8057745e
test-bench-deps:
  unix: -any
  heredoc: -any
  base: -any
  hspec: -any
  text: -any
  process: -any
  hastache: -any
  containers: -any
  hspec-expectations-lifted: -any
  regex-posix: -any
  mtl: -any
  transformers: -any
  QuickCheck: -any
  test-sandbox: -any
  template-haskell: -any
  transformers-compat: -any
  directory: -any
synopsis: Sandbox for system tests
changelog: ! "## 0.1.4\n\n* Allow '.' and '-' for valid procsss name\n\n## 0.1.3.1\n\n*
  Replace nc with runhaskell\n\n## 0.1.3\n\n* Fix build failure with directory-1.2.2.0
  which exposes findExecutables\n\n## 0.1.2\n\n* Add MIN_VERSION_mtl(2,2,1) for Control.Monad.Except\n\n##
  0.1.1\n\n* Fix bugs of both isBindable and sendToPort : I was mistaken about PortNum.\n*
  Support for ghc 7.8.4\n\n## 0.1.0\n\n* Change \"return value\" of both getPort and
  setPort from PortNumber-type to Port(Int)-type \n* Add Capture*WithFile to data
  Capture\n\n## 0.0.1.13\n\n* Fix bug that throw error even if exit code is ExitSuccess\n"
basic-deps:
  cereal: -any
  bytestring: -any
  unix: -any
  base: ! '>=4 && <5'
  monad-loops: -any
  monad-control: -any
  filepath: -any
  process: -any
  network: -any
  lifted-base: -any
  data-default: -any
  random-shuffle: -any
  containers: -any
  regex-posix: -any
  mtl: -any
  transformers-base: -any
  transformers: ! '>=0.2 && <0.5'
  temporary: -any
  random: -any
  transformers-compat: ! '>=0.3 && <0.5'
  directory: -any
all-versions:
- '0.0.1'
- '0.0.1.1'
- '0.0.1.2'
- '0.0.1.3'
- '0.0.1.4'
- '0.0.1.5'
- '0.0.1.6'
- '0.0.1.7'
- '0.0.1.8'
- '0.0.1.9'
- '0.0.1.10'
- '0.0.1.11'
- '0.0.1.12'
- '0.0.1.13'
- '0.1.0'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.1.4'
latest: '0.1.4'
description-type: haddock
description: ! 'Allows starting and stopping previously registered programs in a sandboxed
  environment.


  This package provides functions to easily communicate with the aforementioned processes

  via TCP or standard input/output.


  Usage examples can be found on the github page:

  <http://gree.github.io/haskell-test-sandbox/>


  Extensive documentation is available in the source code itself.'
