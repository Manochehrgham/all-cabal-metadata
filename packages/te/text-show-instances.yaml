homepage: https://github.com/RyanGlScott/text-show-instances
changelog-type: markdown
hash: f7407e5c0227a4fae2090ae9a10d4f4b62b869c56432a9ecb8bc8daf453a6cf8
test-bench-deps:
  text-show-instances: ==2.1
  hoopl: ! '>=3.8.7 && <3.11'
  bytestring: ! '>=0.9 && <0.11'
  unix: ! '>=2 && <2.8'
  haskeline: ! '>=0.7 && <0.8'
  base: ! '>=4.3 && <5'
  time: ! '>=0.1 && <1.6'
  xhtml: ! '>=3000.2 && <3000.3'
  unordered-containers: ! '>=0.2 && <0.3'
  hspec: ! '>=2 && <3'
  th-orphans: ! '>=0.12 && <1'
  hpc: ! '>=0.5 && <0.7'
  text-show: ! '>=2 && <2.2'
  semigroups: ! '>=0.8.4 && <1'
  tagged: ! '>=0.4.4 && <1'
  containers: ! '>=0.1 && <0.6'
  quickcheck-instances: ! '>=0.1 && <0.4'
  base-compat: ! '>=0.8.1 && <1'
  bifunctors: ! '>=5 && <6'
  binary: ! '>=0.6 && <0.8'
  ghc-prim: -any
  old-time: ! '>=1 && <1.2'
  old-locale: ! '>=1 && <1.1'
  terminfo: ! '>=0.3.2 && <0.5'
  transformers: ! '>=0.2.1 && <0.6'
  random: ! '>=1.0.1 && <1.2'
  QuickCheck: ! '>=2.5 && <3'
  pretty: ! '>=1 && <1.2'
  template-haskell: ! '>=2.5 && <2.12'
  transformers-compat: ! '>=0.3 && <1'
  vector: ! '>=0.9 && <0.12'
  directory: ! '>=1 && <1.3'
maintainer: Ryan Scott <ryan.gl.scott@gmail.com>
synopsis: Additional instances for text-show
changelog: ! '## 2.1

  * Reexport the `TextShow` classes and module from `TextShow.Instances`. This helps
  Haddock readers discover what new instances are added with `text-show-instances`.

  * Make `Tagged` instances poly-kinded


  ## 2.0.1

  * Allow building with `vector-0.11` and above. Be aware that the `Show` instances
  for `Vector` types in `vector-0.11.0` are different from other versions of `vector`.


  # 2

  * Changed the top-level module name from `Text.Show.Text` to `TextShow`, since the
  former was extremely verbose without much benefit. As a result, this will break
  all existing code that depends on `text-show-instances`.


  # 1

  * Allow building with `text-show-1`. Also changed the monomorphic functions to match
  the naming conventions introduced in `text-show-1`.

  * Added instances for the `bifunctors` library

  * Removed `utf8-string` instance, since it wasn''t as useful as I had imagined

  * Revamped test suite


  # 0.4

  * Allow building with `text-show-0.8`

  * Modules which were previously exported only if using a recent-enough version of
  GHC/`base` (e.g., `Text.Show.Text.System.Win32`) are now always exposed. If the
  functionality that the module provides is not available on a given version of GHC/`base`,
  the module will not expose anything.

  * Change test-suite to use `hspec`, allowing for it to be built on GHC 7.0 and 7.2


  ### 0.3.0.1

  * Fixed tests on Windows


  # 0.3

  * Added `showbArgPrec` (and corresponding `Show` and `Show1` instances) to `Text.Show.Text.Data.Semigroup`

  * Added `Show1` instances for data types in `Text.Show.Text.Data.List.NonEmpty`
  and `Text.Show.Text.Data.Semigroup`

  * Added `showbDoc` (and corresponding `Show` instance) to `Text.Show.Text.Language.Haskell.TH`

  * Renamed `showbDoc` in `Text.Show.Text.Text.PrettyPrint` to `renderB`


  # 0.2

  * Exposed `showbKindPrec` and `showbPredPrec` with later versions of Template Haskell

  * Added `renderStyleB` to `Text.Show.Text.Text.PrettyPrint` (for `time-1.5` and
  later)

  * Added `showbTimeLocalePrec` to `Text.Show.Text.Data.Time`

  * Added instances for the `binary`, `haskeline`, `hoopl`, `terminfo`, and `utf8-string`
  libraries

  * Removed `transformers-four` flag


  # 0.1

  * Initial commit

'
basic-deps:
  hoopl: ! '>=3.8.7 && <3.11'
  bytestring: ! '>=0.9 && <0.11'
  unix: ! '>=2 && <2.8'
  haskeline: ! '>=0.7 && <0.8'
  base: ! '>=4.3 && <5'
  time: ! '>=0.1 && <1.6'
  xhtml: ! '>=3000.2 && <3000.3'
  unordered-containers: ! '>=0.2 && <0.3'
  text: ! '>=0.11.1 && <1.3'
  hpc: ! '>=0.5 && <0.7'
  text-show: ! '>=2 && <2.2'
  semigroups: ! '>=0.16.2 && <1'
  tagged: ! '>=0.4.4 && <1'
  containers: ! '>=0.1 && <0.6'
  base-compat: ! '>=0.8.1 && <1'
  bifunctors: ! '>=5 && <6'
  binary: ! '>=0.6 && <0.8'
  old-time: ! '>=1 && <1.2'
  old-locale: ! '>=1 && <1.1'
  terminfo: ! '>=0.3.2 && <0.5'
  transformers: ! '>=0.2.1 && <0.6'
  random: ! '>=1.0.1 && <1.2'
  pretty: ! '>=1 && <1.2'
  template-haskell: ! '>=2.5 && <2.12'
  transformers-compat: ! '>=0.3 && <1'
  vector: ! '>=0.9 && <0.12'
  directory: ! '>=1 && <1.3'
all-versions:
- '0.1'
- '0.1.0.1'
- '0.2'
- '0.3'
- '0.3.0.1'
- '0.4'
- '1'
- '2'
- '2.0.1'
- '2.1'
author: Ryan Scott
latest: '2.1'
description-type: markdown
description: ! "# `text-show-instances`\n[![Hackage](https://img.shields.io/hackage/v/text-show-instances.svg)][Hackage:
  text-show-instances]\n[![Hackage Dependencies](https://img.shields.io/hackage-deps/v/text-show-instances.svg)](http://packdeps.haskellers.com/reverse/text-show-instances)\n[![Haskell
  Programming Language](https://img.shields.io/badge/language-Haskell-blue.svg)][Haskell.org]\n[![BSD3
  License](http://img.shields.io/badge/license-BSD3-brightgreen.svg)][tl;dr Legal:
  BSD3]\n[![Build](https://img.shields.io/travis/RyanGlScott/text-show-instances.svg)](https://travis-ci.org/RyanGlScott/text-show-instances)\n\n[Hackage:
  text-show-instances]:\n  http://hackage.haskell.org/package/text-show-instances\n
  \ \"text-show-instances package on Hackage\"\n[Haskell.org]:\n  http://www.haskell.org\n
  \ \"The Haskell Programming Language\"\n[tl;dr Legal: BSD3]:\n  https://tldrlegal.com/license/bsd-3-clause-license-%28revised%29\n
  \ \"BSD 3-Clause License (Revised)\"\n\n`text-show-instances` is a supplemental
  library to [`text-show`](https://github.com/RyanGlScott/text-show) that provides
  additional `Show` instances for data types in common Haskell libraries and GHC dependencies
  that are not encompassed by `text-show`. Currently, `text-show-instances` covers
  these libraries:\n\n* [`bifunctors`](http://hackage.haskell.org/package/bifunctors)\n*
  [`binary`](http://hackage.haskell.org/package/binary)\n* [`containers`](http://hackage.haskell.org/package/containers)\n*
  [`directory`](http://hackage.haskell.org/package/directory)\n* [`haskeline`](http://hackage.haskell.org/package/haskeline)\n*
  [`hoopl`](http://hackage.haskell.org/package/hoopl)\n* [`hpc`](http://hackage.haskell.org/package/hpc)\n*
  [`old-locale`](http://hackage.haskell.org/package/old-locale)\n* [`old-time`](http://hackage.haskell.org/package/old-time)\n*
  [`pretty`](http://hackage.haskell.org/package/pretty)\n* [`random`](http://hackage.haskell.org/package/random)\n*
  [`semigroups`](http://hackage.haskell.org/package/semigroups)\n* [`tagged`](http://hackage.haskell.org/package/tagged)\n*
  [`template-haskell`](http://hackage.haskell.org/package/template-haskell)\n* [`terminfo`](http://hackage.haskell.org/package/terminfo)\n*
  [`time`](http://hackage.haskell.org/package/time)\n* [`transformers`](http://hackage.haskell.org/package/transformers)\n*
  [`unix`](http://hackage.haskell.org/package/unix)\n* [`unordered-containers`](http://hackage.haskell.org/package/unordered-containers)\n*
  [`vector`](http://hackage.haskell.org/package/vector)\n* [`Win32`](http://hackage.haskell.org/package/Win32)\n*
  [`xhtml`](http://hackage.haskell.org/package/xhtml)\n\nOne can use these instances
  by importing `TextShow.Instances`. Alternatively, there are monomorphic versions
  of the `showb` function available in the other submodules of `TextShow`.\n"
license-name: BSD3
