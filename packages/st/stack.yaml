homepage: http://haskellstack.org
changelog-type: markdown
hash: af269ebe5ac7a096cd4b44af570643c1e48444a4b9eb01dc8f97c8fb53eea55f
test-bench-deps:
  exceptions: ! '>=0.8.2.1 && <0.9'
  bytestring: ! '>=0.10.6.0 && <0.11'
  Cabal: ! '>=1.18.1.5 && <1.25'
  path: ! '>=0.5.7 && <0.6'
  base: ! '>=4.7 && <5'
  hspec: ! '>=2.2.3 && <2.3'
  text: ! '>=1.2.2.1 && <1.3'
  retry: ! '>=0.6 && <0.8'
  unix-compat: ! '>=0.4.1.4 && <0.5'
  filepath: ! '>=1.4.0.0 && <1.5'
  process: ! '>=1.2.0.0 && <1.5'
  async: ! '>=2.1.0 && <2.2'
  conduit: ! '>=1.2.6.6 && <1.3'
  conduit-extra: ! '>=1.1.13.1 && <1.2'
  containers: ! '>=0.5.5.1 && <0.6'
  monad-logger: ! '>=0.3.18 && <0.4'
  attoparsec: ! '>=0.13.0.2 && <0.14'
  transformers: ! '>=0.3.0.0 && <0.6'
  temporary: ! '>=1.2.0.4 && <1.3'
  QuickCheck: ! '>=2.8.1 && <2.10'
  http-conduit: ! '>=2.1.10.1 && <2.2'
  stack: ! '>=1.1.2 && <1.2'
  resourcet: ! '>=1.1.7.4 && <1.2'
  path-io: ! '>=1.1.0 && <2.0.0'
  directory: ! '>=1.2.2.0 && <1.3'
  cryptohash: ! '>=0.11.6 && <0.12'
maintainer: manny@fpcomplete.com
synopsis: The Haskell Tool Stack
changelog: ! "# Changelog\n\n## 1.1.2\n\nRelease notes:\n\n* Official FreeBSD binaries
  are\n  [now available](http://docs.haskellstack.org/en/stable/install_and_upgrade/#freebsd)\n
  \ [#1253](https://github.com/commercialhaskell/stack/issues/1253).\n\nMajor changes:\n\n*
  Extensible custom snapshots implemented. These allow you to define snapshots\nwhich
  extend other snapshots. See\n[#863](https://github.com/commercialhaskell/stack/issues/863).
  Local file custom\nsnapshots can now be safely updated without changing their name.
  \ Remote custom\nsnapshots should still be treated as immutable.\n\nBehavior changes:\n\n*
  `stack path --compiler` was added in the last release, to yield a path to the\n
  \ compiler. Unfortunately, `--compiler` is a global option that is useful to use\n
  \ with `stack path`. The same functionality is now provided by `stack path\n  --compiler-exe`.
  See\n  [#2123](https://github.com/commercialhaskell/stack/issues/2123)\n* For packages
  specified in terms of a git or hg repo, the hash used in the\n  location has changed.
  \ This means that existing downloads from older stack\n  versions won't be used.
  \ This is a side-effect of the fix to\n  [#2133](https://github.com/commercialhaskell/stack/issues/2133)\n*
  `stack upgrade` no longer pays attention to local stack.yaml files, just the\n  global
  config and CLI options.\n  [#1392](https://github.com/commercialhaskell/stack/issues/1392)\n*
  `stack ghci` now uses `:add` instead of `:load`, making it potentially work\n  better
  with user scripts. See\n  [#1888](https://github.com/commercialhaskell/stack/issues/1888)\n\nOther
  enhancements:\n\n* Grab Cabal files via Git SHA to avoid regressions from Hackage
  revisions\n  [#2070](https://github.com/commercialhaskell/stack/pull/2070)\n* Custom
  snapshots now support `ghc-options`.\n* Package git repos are now re-used rather
  than re-cloned. See\n  [#1620](https://github.com/commercialhaskell/stack/issues/1620)\n*
  `DESTDIR` is filtered from environment when installing GHC. See\n  [#1460](https://github.com/commercialhaskell/stack/issues/1460)\n*
  `stack haddock` now supports `--hadock-arguments`. See\n  [#2144](https://github.com/commercialhaskell/stack/issues/2144)\n*
  Signing: warn if GPG_TTY is not set as per `man gpg-agent`\n\nBug fixes:\n\n* Now
  ignore project config when doing `stack init` or `stack new`. See\n  [#2110](https://github.com/commercialhaskell/stack/issues/2110)\n*
  Packages specified by git repo can now have submodules. See\n  [#2133](https://github.com/commercialhaskell/stack/issues/2133)\n*
  Fix of hackage index fetch retry. See re-opening of\n  [#1418](https://github.com/commercialhaskell/stack/issues/1418#issuecomment-217633843)\n*
  HPack now picks up changes to filesystem other than package.yaml.  See\n  [#2051](https://github.com/commercialhaskell/stack/issues/2051)\n*
  \"stack solver\" no longer suggests --omit-packages. See\n  [#2031](https://github.com/commercialhaskell/stack/issues/2031)\n*
  Fixed an issue with building Cabal's Setup.hs. See\n  [#1356](https://github.com/commercialhaskell/stack/issues/1356)\n*
  Package dirtiness now pays attention to deleted files. See\n  [#1841](https://github.com/commercialhaskell/stack/issues/1841)\n*
  `stack ghci` now uses `extra-lib-dirs` and `extra-include-dirs`. See\n  [#1656](https://github.com/commercialhaskell/stack/issues/1656)\n*
  Relative paths outside of source dir added via `qAddDependentFile` are now\n  checked
  for dirtiness. See\n  [#1982](https://github.com/commercialhaskell/stack/issues/1982)\n*
  Signing: always use `--with-fingerprints`\n\n## 1.1.0\n\nRelease notes:\n\n* Added
  Ubuntu 16.04 LTS (xenial) Apt repo.\n* No longer uploading new versions to Fedora
  21 repo.\n\nBehavior changes:\n\n* Snapshot packages are no longer built with executable
  profiling. See\n  [#1179](https://github.com/commercialhaskell/stack/issues/1179).\n*
  `stack init` now ignores symlinks when searching for cabal files. It also now\n
  \ ignores any directory that begins with `.` (as well as `dist` dirs) - before\n
  \ it would only ignore `.git`, `.stack-work`, and `dist`.\n* The stack executable
  is no longer built with `-rtsopts`.  Before, when\n  `-rtsopts` was enabled, stack
  would process `+RTS` options even when intended\n  for some other program, such
  as when used with `stack exec -- prog +RTS`.\n  See [#2022](https://github.com/commercialhaskell/stack/issues/2022).\n*
  The `stack path --ghc-paths` option is deprecated and renamed to `--programs`.\n
  \ `--compiler` is added, which points directly at the compiler used in\n  the current
  project.  `--compiler-bin` points to the compiler's bin dir.\n* For consistency
  with the `$STACK_ROOT` environment variable, the\n  `stack path --global-stack-root`
  flag and the `global-stack-root` field\n  in the output of `stack path` are being
  deprecated and replaced with the\n  `stack-root` flag and output field.\n  Additionally,
  the stack root can now be specified via the\n  `--stack-root` command-line flag.
  See\n  [#1148](https://github.com/commercialhaskell/stack/issues/1148).\n* `stack
  sig` GPG-related sub-commands were removed (folded into `upload` and\n  `sdist`)\n*
  GPG signing of packages while uploading to Hackage is now the default. Use\n  `upload
  --no-signature` if you would rather not contribute your package\n  signature. If
  you don't yet have a GPG keyset, read this\n  [blog post on GPG keys](https://fpcomplete.com/blog/2016/05/stack-security-gnupg-keys).\n
  \ We can add a stack.yaml config setting to disable signing if some people\n  desire
  it. We hope that people will sign. Later we will be adding GPG\n  signature verification
  options.\n* `stack build pkg-1.2.3` will now build even if the snapshot has a different\n
  \ package version - it is treated as an extra-dep. `stack build local-pkg-1.2.3`\n
  \ is an error even if the version number matches the local package\n  [#2028](https://github.com/commercialhaskell/stack/issues/2028).\n*
  Having a `nix:` section no longer implies enabling nix build. This allows the\n
  \ user to globally configure whether nix is used (unless the project overrides\n
  \ the default explicitly). See\n  [#1924](https://github.com/commercialhaskell/stack/issues/1924).\n*
  Remove deprecated valid-wanted field.\n* Docker: mount home directory in container
  [#1949](https://github.com/commercialhaskell/stack/issues/1949).\n* Deprecate `--local-bin-path`
  instead `--local-bin`.\n* `stack image`: allow absolute source paths for `add`.\n\nOther
  enhancements:\n\n* `stack haddock --open [PACKAGE]` opens the local haddocks in
  the browser.\n* Fix too much rebuilding when enabling/disabling profiling flags.\n*
  `stack build pkg-1.0` will now build `pkg-1.0` even if the snapshot specifies\n
  \ a different version (it introduces a temporary extra-dep)\n* Experimental support
  for `--split-objs` added\n  [#1284](https://github.com/commercialhaskell/stack/issues/1284).\n*
  `git` packages with submodules are supported by passing the `--recursive`\n  flag
  to `git clone`.\n* When using [hpack](https://github.com/sol/hpack), only regenerate
  cabal files\n  when hpack files change.\n* hpack files can now be used in templates\n*
  `stack ghci` now runs ghci as a separate process\n  [#1306](https://github.com/commercialhaskell/stack/issues/1306)\n*
  Retry when downloading snapshots and package indices\n* Many build options are configurable
  now in `stack.yaml`:\n```\n  build:\n    library-profiling: true\n    executable-profiling:
  true\n    haddock: true\n    haddock-deps: true\n    copy-bins: true\n    prefetch:
  true\n    force-dirty: true\n    keep-going: true\n    test: true\n    test-arguments:\n
  \     rerun-tests: true\n      additional-args: ['-fprof']\n      coverage: true\n
  \     no-run-tests: true\n    bench: true\n    benchmark-opts:\n      benchmark-arguments:
  -O2\n      no-run-benchmarks: true\n    reconfigure: true\n    cabal-verbose: true\n```\n*
  A number of URLs are now configurable, useful for firewalls. See\n  [#1794](https://github.com/commercialhaskell/stack/issues/1884).\n*
  Suggest causes when executables are missing.\n* Allow `--omit-packages` even without
  `--solver`.\n* Improve the generated stack.yaml.\n* Improve ghci results after :load
  Main module collision with main file path.\n* Only load the hackage index if necessary\n
  \ [#1883](https://github.com/commercialhaskell/stack/issues/1883), [#1892](https://github.com/commercialhaskell/stack/issues/1892).\n*
  init: allow local packages to be deps of deps\n  [#1965](https://github.com/commercialhaskell/stack/issues/1965).\n*
  Always use full fingerprints from GPG\n  [#1952](https://github.com/commercialhaskell/stack/issues/1952).\n*
  Default to using `gpg2` and fall back to `gpg`\n  [#1976](https://github.com/commercialhaskell/stack/issues/1976).\n*
  Add a flag for --verbosity silent.\n* Add `haddock --open` flag [#1396](https://github.com/commercialhaskell/stack/issues/1396).\n\nBug
  fixes:\n\n* Package tarballs would fail to unpack.\n  [#1884](https://github.com/commercialhaskell/stack/issues/1884).\n*
  Fixed errant warnings about missing modules, after deleted and removed from\n  cabal
  file [#921](https://github.com/commercialhaskell/stack/issues/921)\n  [#1805](https://github.com/commercialhaskell/stack/issues/1805).\n*
  Now considers a package to dirty when the hpack file is changed\n  [#1819](https://github.com/commercialhaskell/stack/issues/1819).\n*
  Nix: cancelling a stack build now exits properly rather than dropping into a\n  nix-shell
  [#1778](https://github.com/commercialhaskell/stack/issues/1778).\n* `allow-newer:
  true` now causes `--exact-configuration` to be passed to Cabal.\n  See [#1579](https://github.com/commercialhaskell/stack/issues/1579).\n*
  `stack solver` no longer fails with `InvalidRelFile` for relative package\n  paths
  including `..`. See\n  [#1954](https://github.com/commercialhaskell/stack/issues/1954).\n*
  Ignore emacs lock files when finding .cabal\n  [#1897](https://github.com/commercialhaskell/stack/issues/1897).\n*
  Use lenient UTF-8 decode for build output\n  [#1945](https://github.com/commercialhaskell/stack/issues/1945).\n*
  Clear index cache whenever index updated\n  [#1962](https://github.com/commercialhaskell/stack/issues/1962).\n*
  Fix: Building a container image drops a .stack-work dir in the current working\n
  \ (sub)directory\n  [#1975](https://github.com/commercialhaskell/stack/issues/1975).\n*
  Fix: Rebuilding when disabling profiling\n  [#2023](https://github.com/commercialhaskell/stack/issues/2023).\n\n##
  1.0.4.3\n\nBug fixes:\n\n* Don't delete contents of ~/.ssh when using `stack clean
  --full` with Docker\n  enabled [#2000](https://github.com/commercialhaskell/stack/issues/2000)\n\n##
  1.0.4.2\n\nBuild with path-io-1.0.0. There are no changes in behaviour from 1.0.4,\nso
  no binaries are released for this version.\n\n## 1.0.4.1\n\nFixes build with aeson-0.11.0.0.
  There are no changes in behaviour from 1.0.4,\nso no binaries are released for this
  version.\n\n## 1.0.4\n\nMajor changes:\n\n* Some notable changes in `stack init`:\n
  \   * Overall it should now be able to initialize almost all existing cabal\n      packages
  out of the box as long as the package itself is consistently\n      defined.\n    *
  Choose the best possible snapshot and add extra dependencies on top\n      of a
  snapshot resolver rather than a compiler resolver -\n      [#1583](https://github.com/commercialhaskell/stack/pull/1583)\n
  \   * Automatically omit a package (`--omit-packages`) when it is compiler\n      incompatible
  or when there are packages with conflicting dependency\n      requirements - [#1674](https://github.com/commercialhaskell/stack/pull/1674).\n
  \   * Some more changes for a better user experience. Please refer to\n      the
  doc guide for details.\n* Add support for hpack, alternative package description
  format\n  [#1679](https://github.com/commercialhaskell/stack/issues/1679)\n\nOther
  enhancements:\n\n* Docker: pass ~/.ssh and SSH auth socket into container, so that
  git repos\n  work [#1358](https://github.com/commercialhaskell/stack/issues/1358).\n*
  Docker: strip suffix from docker --version.\n  [#1653](https://github.com/commercialhaskell/stack/issues/1653)\n*
  Docker: pass USER and PWD environment variables into container.\n* On each run,
  stack will test the stack root directory (~/.stack), and the\n  project and package
  work directories (.stack-work) for whether they are\n  owned by the current user
  and abort if they are not. This precaution can\n  be disabled with the `--allow-different-user`
  flag or `allow-different-user`\n  option in the global config (~/.stack/config.yaml).\n
  \ [#471](https://github.com/commercialhaskell/stack/issues/471)\n* Added `stack
  clean --full` option for full working dir cleanup.\n* YAML config: support Zip archives.\n*
  Redownload build plan if parsing fails\n  [#1702](https://github.com/commercialhaskell/stack/issues/1702).\n*
  Give mustache templates access to a 'year' tag\n  [#1716](https://github.com/commercialhaskell/stack/pull/1716).\n*
  Have \"stack ghci\" warn about module name aliasing.\n* Add \"stack ghci --load-local-deps\".\n*
  Build Setup.hs with -rtsopts\n  [#1687](https://github.com/commercialhaskell/stack/issues/1687).\n*
  `stack init` accepts a list of directories.\n* Add flag infos to DependencyPlanFailures
  (for better error output in case of\n  flags) [#713](https://github.com/commercialhaskell/stack/issues/713)\n*
  `stack new --bare` complains for overwrites, and add `--force` option\n  [#1597](https://github.com/commercialhaskell/stack/issues/1597).\n\nBug
  fixes:\n\n* Previously, `stack ghci` would fail with `cannot satisfy -package-id`
  when the\n  implicit build step changes the package key of some dependency.\n* Fix:
  Building with ghcjs: \"ghc-pkg: Prelude.chr: bad argument: 2980338\"\n  [#1665](https://github.com/commercialhaskell/stack/issues/1665).\n*
  Fix running test / bench with `--profile` / `--trace`.\n* Fix: build progress counter
  is no longer visible\n  [#1685](https://github.com/commercialhaskell/stack/issues/1685).\n*
  Use \"-RTS\" w/ profiling to allow extra args\n  [#1772](https://github.com/commercialhaskell/stack/issues/1772).\n*
  Fix withUnpackedTarball7z to find name of srcDir after unpacking\n  (fixes `stack
  setup` fails for ghcjs project on windows)\n  [#1774](https://github.com/commercialhaskell/stack/issues/1774).\n*
  Add space before auto-generated bench opts (makes profiling options work\n  uniformly
  for applications and benchmark suites)\n  [#1771](https://github.com/commercialhaskell/stack/issues/1771).\n*
  Don't try to find plugin if it resembles flag.\n* Setup.hs changes cause package
  dirtiness\n  [#1711](https://github.com/commercialhaskell/stack/issues/1711).\n*
  Send \"stack templates\" output to stdout\n  [#1792](https://github.com/commercialhaskell/stack/issues/1792).\n\n##
  1.0.2\n\nRelease notes:\n\n- Arch Linux: Stack has been adopted into the\n  [official
  community repository](https://www.archlinux.org/packages/community/x86_64/stack/),\n
  \ so we will no longer be updating the AUR with new versions. See the\n  [install/upgrade
  guide](http://docs.haskellstack.org/en/stable/install_and_upgrade/#arch-linux)\n
  \ for current download instructions.\n\nMajor changes:\n\n- `stack init` and `solver`
  overhaul\n  [#1583](https://github.com/commercialhaskell/stack/pull/1583)\n\nOther
  enhancements:\n\n- Disable locale/codepage hacks when GHC >=7.10.3\n  [#1552](https://github.com/commercialhaskell/stack/issues/1552)\n-
  Specify multiple images to build for `stack image container`\n  [docs](http://docs.haskellstack.org/en/stable/yaml_configuration/#image)\n-
  Specify which executables to include in images for `stack image container`\n  [docs](http://docs.haskellstack.org/en/stable/yaml_configuration/#image)\n-
  Docker: pass supplemantary groups and umask into container\n- If git fetch fails
  wipe the directory and try again from scratch\n  [#1418](https://github.com/commercialhaskell/stack/issues/1418)\n-
  Warn if newly installed executables won't be available on the PATH\n  [#1362](https://github.com/commercialhaskell/stack/issues/1362)\n-
  stack.yaml: for `stack image container`, specify multiple images to generate,\n
  \ and which executables should be added to those images\n- GHCI: add interactive
  Main selection\n  [#1068](https://github.com/commercialhaskell/stack/issues/1068)\n-
  Care less about the particular name of a GHCJS sdist folder\n  [#1622](https://github.com/commercialhaskell/stack/issues/1622)\n-
  Unified Enable/disable help messaging\n  [#1613](https://github.com/commercialhaskell/stack/issues/1613)\n\nBug
  fixes:\n\n- Don't share precompiled packages between GHC/platform variants and Docker\n
  \ [#1551](https://github.com/commercialhaskell/stack/issues/1551)\n- Properly redownload
  corrupted downloads with the correct file size.\n  [Mailing list discussion](https://groups.google.com/d/msg/haskell-stack/iVGDG5OHYxs/FjUrR5JsDQAJ)\n-
  Gracefully handle invalid paths in error/warning messages\n  [#1561](https://github.com/commercialhaskell/stack/issues/1561)\n-
  Nix: select the correct GHC version corresponding to the snapshot\n  even when an
  abstract resolver is passed via `--resolver` on the\n  command-line.\n  [#1641](https://github.com/commercialhaskell/stack/issues/1641)\n-
  Fix: Stack does not allow using an external package from ghci\n  [#1557](https://github.com/commercialhaskell/stack/issues/1557)\n-
  Disable ambiguous global '--resolver' option for 'stack init'\n  [#1531](https://github.com/commercialhaskell/stack/issues/1531)\n-
  Obey `--no-nix` flag\n- Fix: GHCJS Execute.hs: Non-exhaustive patterns in lambda\n
  \ [#1591](https://github.com/commercialhaskell/stack/issues/1591)\n- Send file-watch
  and sticky logger messages to stderr\n  [#1302](https://github.com/commercialhaskell/stack/issues/1302)\n
  \ [#1635](https://github.com/commercialhaskell/stack/issues/1635)\n- Use globaldb
  path for querying Cabal version\n  [#1647](https://github.com/commercialhaskell/stack/issues/1647)\n\n##
  1.0.0\n\nRelease notes:\n\n*  We're calling this version 1.0.0 in preparation for
  Stackage\n   LTS 4.  Note, however, that this does not mean the code's API\n   will
  be stable as this is primarily an end-user tool.\n\nEnhancements:\n\n* Added flag
  `--profile` flag: passed with `stack build`, it will\n  enable profiling, and for
  `--bench` and `--test` it will generate a\n  profiling report by passing `+RTS -p`
  to the executable(s). Great\n  for using like `stack build --bench --profile` (remember
  that\n  enabling profile will slow down your benchmarks by >4x). Run `stack\n  build
  --bench` again to disable the profiling and get proper speeds\n* Added flag `--trace`
  flag: just like `--profile`, it enables\n  profiling, but instead of generating
  a report for `--bench` and\n  `--test`, prints out a stack trace on exception. Great
  for using\n  like `stack build --test --trace`\n* Nix: all options can be overriden
  on command line\n  [#1483](https://github.com/commercialhaskell/stack/issues/1483)\n*
  Nix: build environments (shells) are now pure by default.\n* Make verbosity silent
  by default in script interpreter mode\n  [#1472](https://github.com/commercialhaskell/stack/issues/1472)\n*
  Show a message when resetting git commit fails\n  [#1453](https://github.com/commercialhaskell/stack/issues/1453)\n*
  Improve Unicode handling in project/package names\n  [#1337](https://github.com/commercialhaskell/stack/issues/1337)\n*
  Fix ambiguity between a stack command and a filename to execute (prefer\n  `stack`
  subcommands)\n  [#1471](https://github.com/commercialhaskell/stack/issues/1471)\n*
  Support multi line interpreter directive comments\n  [#1394](https://github.com/commercialhaskell/stack/issues/1394)\n*
  Handle space separated pids in ghc-pkg dump (for GHC HEAD)\n  [#1509](https://github.com/commercialhaskell/stack/issues/1509)\n*
  Add ghci --no-package-hiding option\n  [#1517](https://github.com/commercialhaskell/stack/issues/1517)\n*
  `stack new` can download templates from URL\n  [#1466](https://github.com/commercialhaskell/stack/issues/1466)\n\nBug
  fixes:\n\n* Nix: stack exec options are passed properly to the stack sub process\n
  \ [#1538](https://github.com/commercialhaskell/stack/issues/1538)\n* Nix: specifying
  a shell-file works in any current working directory\n  [#1547](https://github.com/commercialhaskell/stack/issues/1547)\n*
  Nix: use `--resolver` argument\n* Docker: fix missing image message and '--docker-auto-pull'\n*
  No HTML escaping for \"stack new\" template params\n  [#1475](https://github.com/commercialhaskell/stack/issues/1475)\n*
  Set permissions for generated .ghci script\n  [#1480](https://github.com/commercialhaskell/stack/issues/1480)\n*
  Restrict commands allowed in interpreter mode\n  [#1504](https://github.com/commercialhaskell/stack/issues/1504)\n*
  stack ghci doesn't see preprocessed files for executables\n  [#1347](https://github.com/commercialhaskell/stack/issues/1347)\n*
  All test suites run even when only one is requested\n  [#1550](https://github.com/commercialhaskell/stack/pull/1550)\n*
  Edge cases in broken templates give odd errors\n  [#1535](https://github.com/commercialhaskell/stack/issues/1535)\n*
  Fix test coverage bug on windows\n\n## 0.1.10.1\n\nBug fixes:\n\n* `stack image
  container` did not actually build an image\n  [#1473](https://github.com/commercialhaskell/stack/issues/1473)\n\n##
  0.1.10.0\n\nRelease notes:\n\n* The Stack home page is now at [haskellstack.org](http://haskellstack.org),\n
  \ which shows the documentation rendered by readthedocs.org. Note: this\n  has necessitated
  some changes to the links in the documentation's markdown\n  source code, so please
  check the links on the website before submitting a PR\n  to fix them.\n* The locations
  of the\n  [Ubuntu](http://docs.haskellstack.org/en/stable/install_and_upgrade/#ubuntu)\n
  \ and\n  [Debian](http://docs.haskellstack.org/en/stable/install_and_upgrade/#debian)\n
  \ package repositories have changed to have correct URL semantics according to\n
  \ Debian's guidelines\n  [#1378](https://github.com/commercialhaskell/stack/issues/1378).
  The old\n  locations will continue to work for some months, but we suggest that
  you\n  adjust your `/etc/apt/sources.list.d/fpco.list` to the new location to avoid\n
  \ future disruption.\n* [openSUSE and SUSE Linux Enterprise](http://docs.haskellstack.org/en/stable/install_and_upgrade/#suse)\n
  \ packages are now available, thanks to [@mimi1vx](https://github.com/mimi1vx).\n
  \ Note: there will be some lag before these pick up new versions, as they are\n
  \ based on Stackage LTS.\n\nMajor changes:\n\n* Support for building inside a Nix-shell
  providing system dependencies\n  [#1285](https://github.com/commercialhaskell/stack/pull/1285)\n*
  Add optional GPG signing on `stack upload --sign` or with\n  `stack sig sign ...`\n\nOther
  enhancements:\n\n* Print latest applicable version of packages on conflicts\n  [#508](https://github.com/commercialhaskell/stack/issues/508)\n*
  Support for packages located in Mercurial repositories\n  [#1397](https://github.com/commercialhaskell/stack/issues/1397)\n*
  Only run benchmarks specified as build targets\n  [#1412](https://github.com/commercialhaskell/stack/issues/1412)\n*
  Support git-style executable fall-through (`stack something` executes\n  `stack-something`
  if present)\n  [#1433](https://github.com/commercialhaskell/stack/issues/1433)\n*
  GHCi now loads intermediate dependencies\n  [#584](https://github.com/commercialhaskell/stack/issues/584)\n*
  `--work-dir` option for overriding `.stack-work`\n  [#1178](https://github.com/commercialhaskell/stack/issues/1178)\n*
  Support `detailed-0.9` tests\n  [#1429](https://github.com/commercialhaskell/stack/issues/1429)\n*
  Docker: improved POSIX signal proxying to containers\n  [#547](https://github.com/commercialhaskell/stack/issues/547)\n\nBug
  fixes:\n\n* Show absolute paths in error messages in multi-package builds\n  [#1348](https://github.com/commercialhaskell/stack/issues/1348)\n*
  Docker-built binaries and libraries in different path\n  [#911](https://github.com/commercialhaskell/stack/issues/911)\n
  \ [#1367](https://github.com/commercialhaskell/stack/issues/1367)\n* Docker: `--resolver`
  argument didn't effect selected image tag\n* GHCi: Spaces in filepaths caused module
  loading issues\n  [#1401](https://github.com/commercialhaskell/stack/issues/1401)\n*
  GHCi: cpp-options in cabal files weren't used\n  [#1419](https://github.com/commercialhaskell/stack/issues/1419)\n*
  Benchmarks couldn't be run independently of eachother\n  [#1412](https://github.com/commercialhaskell/stack/issues/1412)\n*
  Send output of building setup to stderr\n  [#1410](https://github.com/commercialhaskell/stack/issues/1410)\n\n##
  0.1.8.0\n\nMajor changes:\n\n* GHCJS can now be used with stackage snapshots via
  the new `compiler` field.\n* Windows installers are now available:\n  [download
  them here](http://docs.haskellstack.org/en/stable/install_and_upgrade/#windows)\n
  \ [#613](https://github.com/commercialhaskell/stack/issues/613)\n* Docker integration
  works with non-FPComplete generated images\n  [#531](https://github.com/commercialhaskell/stack/issues/531)\n\nOther
  enhancements:\n\n* Added an `allow-newer` config option\n  [#922](https://github.com/commercialhaskell/stack/issues/922)\n
  \ [#770](https://github.com/commercialhaskell/stack/issues/770)\n* When a Hackage
  revision invalidates a build plan in a snapshot, trust the\n  snapshot [#770](https://github.com/commercialhaskell/stack/issues/770)\n*
  Added a `stack config set resolver RESOLVER` command. Part of work on\n  [#115](https://github.com/commercialhaskell/stack/issues/115)\n*
  `stack setup` can now install GHCJS on windows. See\n  [#1145](https://github.com/commercialhaskell/stack/issues/1145)
  and\n  [#749](https://github.com/commercialhaskell/stack/issues/749)\n* `stack hpc
  report` command added, which generates reports for HPC tix files\n* `stack ghci`
  now accepts all the flags accepted by `stack build`. See\n  [#1186](https://github.com/commercialhaskell/stack/issues/1186)\n*
  `stack ghci` builds the project before launching GHCi. If the build fails,\n  optimistically
  launch GHCi anyway. Use `stack ghci --no-build` option to\n  disable [#1065](https://github.com/commercialhaskell/stack/issues/1065)\n*
  `stack ghci` now detects and warns about various circumstances where it is\n  liable
  to fail. See\n  [#1270](https://github.com/commercialhaskell/stack/issues/1270)\n*
  Added `require-docker-version` configuration option\n* Packages will now usually
  be built along with their tests and benchmarks. See\n  [#1166](https://github.com/commercialhaskell/stack/issues/1166)\n*
  Relative `local-bin-path` paths will be relative to the project's root\n  directory,
  not the current working directory.\n  [#1340](https://github.com/commercialhaskell/stack/issues/1340)\n*
  `stack clean` now takes an optional `[PACKAGE]` argument for use in\n  multi-package
  projects. See\n  [#583](https://github.com/commercialhaskell/stack/issues/583)\n*
  Ignore cabal_macros.h as a dependency\n  [#1195](https://github.com/commercialhaskell/stack/issues/1195)\n*
  Pad timestamps and show local time in --verbose output\n  [#1226](https://github.com/commercialhaskell/stack/issues/1226)\n*
  GHCi: Import all modules after loading them\n  [#995](https://github.com/commercialhaskell/stack/issues/995)\n*
  Add subcommand aliases: `repl` for `ghci`, and `runhaskell` for `runghc`\n  [#1241](https://github.com/commercialhaskell/stack/issues/1241)\n*
  Add typo recommendations for unknown package identifiers\n  [#158](https://github.com/commercialhaskell/stack/issues/158)\n*
  Add `stack path --local-hpc-root` option\n* Overhaul dependencies' haddocks copying\n
  \ [#1231](https://github.com/commercialhaskell/stack/issues/1231)\n* Support for
  extra-package-dbs in 'stack ghci'\n  [#1229](https://github.com/commercialhaskell/stack/pull/1229)\n*
  `stack new` disallows package names with \"words\" consisting solely of numbers\n
  \ [#1336](https://github.com/commercialhaskell/stack/issues/1336)\n* `stack build
  --fast` turns off optimizations\n* Show progress while downloading package index\n
  \ [#1223](https://github.com/commercialhaskell/stack/issues/1223).\n\nBug fixes:\n\n*
  Fix: Haddocks not copied for dependencies\n  [#1105](https://github.com/commercialhaskell/stack/issues/1105)\n*
  Fix: Global options did not work consistently after subcommand\n  [#519](https://github.com/commercialhaskell/stack/issues/519)\n*
  Fix: 'stack ghci' doesn't notice that a module got deleted\n  [#1180](https://github.com/commercialhaskell/stack/issues/1180)\n*
  Rebuild when cabal file is changed\n* Fix: Paths in GHC warnings not canonicalized,
  nor those for packages in\n  subdirectories or outside the project root\n  [#1259](https://github.com/commercialhaskell/stack/issues/1259)\n*
  Fix: unlisted files in tests and benchmarks trigger extraneous second build\n  [#838](https://github.com/commercialhaskell/stack/issues/838)\n\n##
  0.1.6.0\n\nMajor changes:\n\n* `stack setup` now supports building and booting GHCJS
  from source tarball.\n* On Windows, build directories no longer display \"pretty\"
  information\n  (like x86_64-windows/Cabal-1.22.4.0), but rather a hash of that\n
  \ content. The reason is to avoid the 260 character path limitation on\n  Windows.
  See\n  [#1027](https://github.com/commercialhaskell/stack/pull/1027)\n* Rename config
  files and clarify their purposes [#969](https://github.com/commercialhaskell/stack/issues/969)\n
  \   * `~/.stack/stack.yaml` --> `~/.stack/config.yaml`\n    * `~/.stack/global`
  --> `~/.stack/global-project`\n    * `/etc/stack/config` --> `/etc/stack/config.yaml`\n
  \   * Old locations still supported, with deprecation warnings\n* New command \"stack
  eval CODE\", which evaluates to \"stack exec ghc -- -e CODE\".\n\nOther enhancements:\n\n*
  No longer install `git` on Windows\n  [#1046](https://github.com/commercialhaskell/stack/issues/1046).
  You\n  can still get this behavior by running the following yourself:\n  `stack
  exec -- pacman -Sy --noconfirm git`.\n* Typing enter during --file-watch triggers
  a rebuild [#1023](https://github.com/commercialhaskell/stack/pull/1023)\n* Use Haddock's
  `--hyperlinked-source` (crosslinked source), if available [#1070](https://github.com/commercialhaskell/stack/pull/1070)\n*
  Use Stack-installed GHCs for `stack init --solver` [#1072](https://github.com/commercialhaskell/stack/issues/1072)\n*
  New experimental `stack query` command [#1087](https://github.com/commercialhaskell/stack/issues/1087)\n*
  By default, stack no longer rebuilds a package due to GHC options changes. This
  behavior can be tweaked with the `rebuild-ghc-options` setting. [#1089](https://github.com/commercialhaskell/stack/issues/1089)\n*
  By default, ghc-options are applied to all local packages, not just targets. This
  behavior can be tweaked with the `apply-ghc-options` setting. [#1089](https://github.com/commercialhaskell/stack/issues/1089)\n*
  Docker: download or override location of stack executable to re-run in container
  [#974](https://github.com/commercialhaskell/stack/issues/974)\n* Docker: when Docker
  Engine is remote, don't run containerized processes as host's UID/GID [#194](https://github.com/commercialhaskell/stack/issues/194)\n*
  Docker: `set-user` option to enable/disable running containerized processes as host's
  UID/GID [#194](https://github.com/commercialhaskell/stack/issues/194)\n* Custom
  Setup.hs files are now precompiled instead of interpreted. This should be a major
  performance win for certain edge cases (biggest example: [building Cabal itself](https://github.com/commercialhaskell/stack/issues/1041))
  while being either neutral or a minor slowdown for more common cases.\n* `stack
  test --coverage` now also generates a unified coverage report for multiple test-suites
  / packages.  In the unified report, test-suites can contribute to the coverage of
  other packages.\n\nBug fixes:\n\n* Ignore stack-built executables named `ghc`\n
  \ [#1052](https://github.com/commercialhaskell/stack/issues/1052)\n* Fix quoting
  of output failed command line arguments\n* Mark executable-only packages as installed
  when copied from cache [#1043](https://github.com/commercialhaskell/stack/pull/1043)\n*
  Canonicalize temporary directory paths [#1047](https://github.com/commercialhaskell/stack/pull/1047)\n*
  Put code page fix inside the build function itself [#1066](https://github.com/commercialhaskell/stack/issues/1066)\n*
  Add `explicit-setup-deps` option [#1110](https://github.com/commercialhaskell/stack/issues/1110),
  and change the default to the old behavior of using any package in the global and
  snapshot database [#1025](https://github.com/commercialhaskell/stack/issues/1025)\n*
  Precompiled cache checks full package IDs on Cabal < 1.22 [#1103](https://github.com/commercialhaskell/stack/issues/1103)\n*
  Pass -package-id to ghci [#867](https://github.com/commercialhaskell/stack/issues/867)\n*
  Ignore global packages when copying precompiled packages [#1146](https://github.com/commercialhaskell/stack/issues/1146)\n\n##
  0.1.5.0\n\nMajor changes:\n\n* On Windows, we now use a full MSYS2 installation
  in place of the previous PortableGit. This gives you access to the pacman package
  manager for more easily installing libraries.\n* Support for custom GHC binary distributions
  [#530](https://github.com/commercialhaskell/stack/issues/530)\n    * `ghc-variant`
  option in stack.yaml to specify the variant (also\n      `--ghc-variant` command-line
  option)\n    * `setup-info` in stack.yaml, to specify where to download custom binary\n
  \     distributions (also `--ghc-bindist` command-line option)\n    * Note: On systems
  with libgmp4 (aka `libgmp.so.3`), such as CentOS 6, you\n      may need to re-run
  `stack setup` due to the centos6 GHC bindist being\n      treated like a variant\n*
  A new `--pvp-bounds` flag to the sdist and upload commands allows automatic adding
  of PVP upper and/or lower bounds to your dependencies\n\nOther enhancements:\n\n*
  Adapt to upcoming Cabal installed package identifier format change [#851](https://github.com/commercialhaskell/stack/issues/851)\n*
  `stack setup` takes a `--stack-setup-yaml` argument\n* `--file-watch` is more discerning
  about which files to rebuild for [#912](https://github.com/commercialhaskell/stack/issues/912)\n*
  `stack path` now supports `--global-pkg-db` and `--ghc-package-path`\n* `--reconfigure`
  flag [#914](https://github.com/commercialhaskell/stack/issues/914) [#946](https://github.com/commercialhaskell/stack/issues/946)\n*
  Cached data is written with a checksum of its structure [#889](https://github.com/commercialhaskell/stack/issues/889)\n*
  Fully removed `--optimizations` flag\n* Added `--cabal-verbose` flag\n* Added `--file-watch-poll`
  flag for polling instead of using filesystem events (useful for running tests in
  a Docker container while modifying code in the host environment. When code is injected
  into the container via a volume, the container won't propagate filesystem events).\n*
  Give a preemptive error message when `-prof` is given as a GHC option [#1015](https://github.com/commercialhaskell/stack/issues/1015)\n*
  Locking is now optional, and will be turned on by setting the `STACK_LOCK` environment
  variable to `true` [#950](https://github.com/commercialhaskell/stack/issues/950)\n*
  Create default stack.yaml with documentation comments and commented out options
  [#226](https://github.com/commercialhaskell/stack/issues/226)\n* Out of memory warning
  if Cabal exits with -9 [#947](https://github.com/commercialhaskell/stack/issues/947)\n\nBug
  fixes:\n\n* Hacky workaround for optparse-applicative issue with `stack exec --help`
  [#806](https://github.com/commercialhaskell/stack/issues/806)\n* Build executables
  for local extra deps [#920](https://github.com/commercialhaskell/stack/issues/920)\n*
  copyFile can't handle directories [#942](https://github.com/commercialhaskell/stack/pull/942)\n*
  Support for spaces in Haddock interface files [fpco/minghc#85](https://github.com/fpco/minghc/issues/85)\n*
  Temporarily building against a \"shadowing\" local package? [#992](https://github.com/commercialhaskell/stack/issues/992)\n*
  Fix Setup.exe name for --upgrade-cabal on Windows [#1002](https://github.com/commercialhaskell/stack/issues/1002)\n*
  Unlisted dependencies no longer trigger extraneous second build [#838](https://github.com/commercialhaskell/stack/issues/838)\n\n##
  0.1.4.1\n\nFix stack's own Haddocks.  No changes to functionality (only comments
  updated).\n\n## 0.1.4.0\n\nMajor changes:\n\n* You now have more control over how
  GHC versions are matched, e.g. \"use exactly this version,\" \"use the specified
  minor version, but allow patches,\" or \"use the given minor version or any later
  minor in the given major release.\" The default has switched from allowing newer
  later minor versions to a specific minor version allowing patches. For more information,
  see [#736](https://github.com/commercialhaskell/stack/issues/736) and [#784](https://github.com/commercialhaskell/stack/pull/784).\n*
  Support added for compiling with GHCJS\n* stack can now reuse prebuilt binaries
  between snapshots. That means that, if you build package foo in LTS-3.1, that binary
  version can be reused in LTS-3.2, assuming it uses the same dependencies and flags.
  [#878](https://github.com/commercialhaskell/stack/issues/878)\n\nOther enhancements:\n\n*
  Added the `--docker-env` argument, to set environment variables in Docker container.\n*
  Set locale environment variables to UTF-8 encoding for builds to avoid \"commitBuffer:
  invalid argument\" errors from GHC [#793](https://github.com/commercialhaskell/stack/issues/793)\n*
  Enable translitation for encoding on stdout and stderr [#824](https://github.com/commercialhaskell/stack/issues/824)\n*
  By default, `stack upgrade` automatically installs GHC as necessary [#797](https://github.com/commercialhaskell/stack/issues/797)\n*
  Added the `ghc-options` field to stack.yaml [#796](https://github.com/commercialhaskell/stack/issues/796)\n*
  Added the `extra-path` field to stack.yaml\n* Code page changes on Windows only
  apply to the build command (and its synonyms), and can be controlled via a command
  line flag (still defaults to on) [#757](https://github.com/commercialhaskell/stack/issues/757)\n*
  Implicitly add packages to extra-deps when a flag for them is set [#807](https://github.com/commercialhaskell/stack/issues/807)\n*
  Use a precompiled Setup.hs for simple build types [#801](https://github.com/commercialhaskell/stack/issues/801)\n*
  Set --enable-tests and --enable-benchmarks optimistically [#805](https://github.com/commercialhaskell/stack/issues/805)\n*
  `--only-configure` option added [#820](https://github.com/commercialhaskell/stack/issues/820)\n*
  Check for duplicate local package names\n* Stop nagging people that call `stack
  test` [#845](https://github.com/commercialhaskell/stack/issues/845)\n* `--file-watch`
  will ignore files that are in your VCS boring/ignore files [#703](https://github.com/commercialhaskell/stack/issues/703)\n*
  Add `--numeric-version` option\n\nBug fixes:\n\n* `stack init --solver` fails if
  `GHC_PACKAGE_PATH` is present [#860](https://github.com/commercialhaskell/stack/issues/860)\n*
  `stack solver` and `stack init --solver` check for test suite and benchmark dependencies
  [#862](https://github.com/commercialhaskell/stack/issues/862)\n* More intelligent
  logic for setting UTF-8 locale environment variables [#856](https://github.com/commercialhaskell/stack/issues/856)\n*
  Create missing directories for `stack sdist`\n* Don't ignore .cabal files with extra
  periods [#895](https://github.com/commercialhaskell/stack/issues/895)\n* Deprecate
  unused `--optimizations` flag\n* Truncated output on slow terminals [#413](https://github.com/commercialhaskell/stack/issues/413)\n\n##
  0.1.3.1\n\nBug fixes:\n\n* Ignore disabled executables [#763](https://github.com/commercialhaskell/stack/issues/763)\n\n##
  0.1.3.0\n\nMajor changes:\n\n* Detect when a module is compiled but not listed in
  the cabal file ([#32](https://github.com/commercialhaskell/stack/issues/32))\n    *
  A warning is displayed for any modules that should be added to `other-modules` in
  the .cabal file\n    * These modules are taken into account when determining whether
  a package needs to be built\n* Respect TemplateHaskell addDependentFile dependency
  changes ([#105](https://github.com/commercialhaskell/stack/issues/105))\n    * TH
  dependent files are taken into account when determining whether a package needs
  to be built.\n* Overhauled target parsing, added `--test` and `--bench` options
  [#651](https://github.com/commercialhaskell/stack/issues/651)\n    * For details,
  see [Build commands documentation](http://docs.haskellstack.org/en/stable/build_command/)\n\nOther
  enhancements:\n\n* Set the `HASKELL_DIST_DIR` environment variable [#524](https://github.com/commercialhaskell/stack/pull/524)\n*
  Track build status of tests and benchmarks [#525](https://github.com/commercialhaskell/stack/issues/525)\n*
  `--no-run-tests` [#517](https://github.com/commercialhaskell/stack/pull/517)\n*
  Targets outside of root dir don't build [#366](https://github.com/commercialhaskell/stack/issues/366)\n*
  Upper limit on number of flag combinations to test [#543](https://github.com/commercialhaskell/stack/issues/543)\n*
  Fuzzy matching support to give better error messages for close version numbers [#504](https://github.com/commercialhaskell/stack/issues/504)\n*
  `--local-bin-path` global option. Use to change where binaries get placed on a `--copy-bins`
  [#342](https://github.com/commercialhaskell/stack/issues/342)\n* Custom snapshots
  [#111](https://github.com/commercialhaskell/stack/issues/111)\n* --force-dirty flag:
  Force treating all local packages as having dirty files (useful for cases where
  stack can't detect a file change)\n* GHC error messages: display file paths as absolute
  instead of relative for better editor integration\n* Add the `--copy-bins` option
  [#569](https://github.com/commercialhaskell/stack/issues/569)\n* Give warnings on
  unexpected config keys [#48](https://github.com/commercialhaskell/stack/issues/48)\n*
  Remove Docker `pass-host` option\n* Don't require cabal-install to upload [#313](https://github.com/commercialhaskell/stack/issues/313)\n*
  Generate indexes for all deps and all installed snapshot packages [#143](https://github.com/commercialhaskell/stack/issues/143)\n*
  Provide `--resolver global` option [#645](https://github.com/commercialhaskell/stack/issues/645)\n
  \   * Also supports `--resolver nightly`, `--resolver lts`, and `--resolver lts-X`\n*
  Make `stack build --flag` error when flag or package is unknown [#617](https://github.com/commercialhaskell/stack/issues/617)\n*
  Preserve file permissions when unpacking sources [#666](https://github.com/commercialhaskell/stack/pull/666)\n*
  `stack build` etc work outside of a project\n* `list-dependencies` command [#638](https://github.com/commercialhaskell/stack/issues/638)\n*
  `--upgrade-cabal` option to `stack setup` [#174](https://github.com/commercialhaskell/stack/issues/174)\n*
  `--exec` option [#651](https://github.com/commercialhaskell/stack/issues/651)\n*
  `--only-dependencies` implemented correctly [#387](https://github.com/commercialhaskell/stack/issues/387)\n\nBug
  fixes:\n\n* Extensions from the `other-extensions` field no longer enabled by default
  [#449](https://github.com/commercialhaskell/stack/issues/449)\n* Fix: haddock forces
  rebuild of empty packages [#452](https://github.com/commercialhaskell/stack/issues/452)\n*
  Don't copy over executables excluded by component selection [#605](https://github.com/commercialhaskell/stack/issues/605)\n*
  Fix: stack fails on Windows with git package in stack.yaml and no git binary on
  path [#712](https://github.com/commercialhaskell/stack/issues/712)\n* Fixed GHCi
  issue: Specifying explicit package versions (#678)\n* Fixed GHCi issue: Specifying
  -odir and -hidir as .stack-work/odir (#529)\n* Fixed GHCi issue: Specifying A instead
  of A.ext for modules (#498)\n\n## 0.1.2.0\n\n* Add `--prune` flag to `stack dot`
  [#487](https://github.com/commercialhaskell/stack/issues/487)\n* Add `--[no-]external`,`--[no-]include-base`
  flags to `stack dot` [#437](https://github.com/commercialhaskell/stack/issues/437)\n*
  Add `--ignore-subdirs` flag to init command [#435](https://github.com/commercialhaskell/stack/pull/435)\n*
  Handle attempt to use non-existing resolver [#436](https://github.com/commercialhaskell/stack/pull/436)\n*
  Add `--force` flag to `init` command\n* exec style commands accept the `--package`
  option (see [Reddit discussion](http://www.reddit.com/r/haskell/comments/3bd66h/stack_runghc_turtle_as_haskell_script_solution/))\n*
  `stack upload` without arguments doesn't do anything [#439](https://github.com/commercialhaskell/stack/issues/439)\n*
  Print latest version of packages on conflicts [#450](https://github.com/commercialhaskell/stack/issues/450)\n*
  Flag to avoid rerunning tests that haven't changed [#451](https://github.com/commercialhaskell/stack/issues/451)\n*
  stack can act as a script interpreter (see [Script interpreter] (https://github.com/commercialhaskell/stack/wiki/Script-interpreter)
  and [Reddit discussion](http://www.reddit.com/r/haskell/comments/3bd66h/stack_runghc_turtle_as_haskell_script_solution/))\n*
  Add the __`--file-watch`__ flag to auto-rebuild on file changes [#113](https://github.com/commercialhaskell/stack/issues/113)\n*
  Rename `stack docker exec` to `stack exec --plain`\n* Add the `--skip-msys` flag
  [#377](https://github.com/commercialhaskell/stack/issues/377)\n* `--keep-going`,
  turned on by default for tests and benchmarks [#478](https://github.com/commercialhaskell/stack/issues/478)\n*
  `concurrent-tests: BOOL` [#492](https://github.com/commercialhaskell/stack/issues/492)\n*
  Use hashes to check file dirtiness [#502](https://github.com/commercialhaskell/stack/issues/502)\n*
  Install correct GHC build on systems with libgmp.so.3 [#465](https://github.com/commercialhaskell/stack/issues/465)\n*
  `stack upgrade` checks version before upgrading [#447](https://github.com/commercialhaskell/stack/issues/447)\n\n##
  0.1.1.0\n\n* Remove GHC uncompressed tar file after installation [#376](https://github.com/commercialhaskell/stack/issues/376)\n*
  Put stackage snapshots JSON on S3 [#380](https://github.com/commercialhaskell/stack/issues/380)\n*
  Specifying flags for multiple packages [#335](https://github.com/commercialhaskell/stack/issues/335)\n*
  single test suite failure should show entire log [#388](https://github.com/commercialhaskell/stack/issues/388)\n*
  valid-wanted is a confusing option name [#386](https://github.com/commercialhaskell/stack/issues/386)\n*
  stack init in multi-package project should use local packages for dependency checking
  [#384](https://github.com/commercialhaskell/stack/issues/384)\n* Display information
  on why a snapshot was rejected [#381](https://github.com/commercialhaskell/stack/issues/381)\n*
  Give a reason for unregistering packages [#389](https://github.com/commercialhaskell/stack/issues/389)\n*
  `stack exec` accepts the `--no-ghc-package-path` parameter\n* Don't require build
  plan to upload [#400](https://github.com/commercialhaskell/stack/issues/400)\n*
  Specifying test components only builds/runs those tests [#398](https://github.com/commercialhaskell/stack/issues/398)\n*
  `STACK_EXE` environment variable\n* Add the `stack dot` command\n* `stack upgrade`
  added [#237](https://github.com/commercialhaskell/stack/issues/237)\n* `--stack-yaml`
  command line flag [#378](https://github.com/commercialhaskell/stack/issues/378)\n*
  `--skip-ghc-check` command line flag [#423](https://github.com/commercialhaskell/stack/issues/423)\n\nBug
  fixes:\n\n* Haddock links to global packages no longer broken on Windows [#375](https://github.com/commercialhaskell/stack/issues/375)\n*
  Make flags case-insensitive [#397](https://github.com/commercialhaskell/stack/issues/397)\n*
  Mark packages uninstalled before rebuilding [#365](https://github.com/commercialhaskell/stack/issues/365)\n\n##
  0.1.0.0\n\n* Fall back to cabal dependency solver when a snapshot can't be found\n*
  Basic implementation of `stack new` [#137](https://github.com/commercialhaskell/stack/issues/137)\n*
  `stack solver` command [#364](https://github.com/commercialhaskell/stack/issues/364)\n*
  `stack path` command [#95](https://github.com/commercialhaskell/stack/issues/95)\n*
  Haddocks [#143](https://github.com/commercialhaskell/stack/issues/143):\n    * Build
  for dependencies\n    * Use relative links\n    * Generate module contents and index
  for all packages in project\n\n## 0.0.3\n\n* `--prefetch` [#297](https://github.com/commercialhaskell/stack/issues/297)\n*
  `upload` command ported from stackage-upload [#225](https://github.com/commercialhaskell/stack/issues/225)\n*
  `--only-snapshot` [#310](https://github.com/commercialhaskell/stack/issues/310)\n*
  `--resolver` [#224](https://github.com/commercialhaskell/stack/issues/224)\n* `stack
  init` [#253](https://github.com/commercialhaskell/stack/issues/253)\n* `--extra-include-dirs`
  and `--extra-lib-dirs` [#333](https://github.com/commercialhaskell/stack/issues/333)\n*
  Specify intra-package target [#201](https://github.com/commercialhaskell/stack/issues/201)\n\n##
  0.0.2\n\n* Fix some Windows specific bugs [#216](https://github.com/commercialhaskell/stack/issues/216)\n*
  Improve output for package index updates [#227](https://github.com/commercialhaskell/stack/issues/227)\n*
  Automatically update indices as necessary [#227](https://github.com/commercialhaskell/stack/issues/227)\n*
  --verbose flag [#217](https://github.com/commercialhaskell/stack/issues/217)\n*
  Remove packages (HTTPS and Git) [#199](https://github.com/commercialhaskell/stack/issues/199)\n*
  Config values for system-ghc and install-ghc\n* Merge `stack deps` functionality
  into `stack build`\n* `install` command [#153](https://github.com/commercialhaskell/stack/issues/153)
  and [#272](https://github.com/commercialhaskell/stack/issues/272)\n* overriding
  architecture value (useful to force 64-bit GHC on Windows, for example)\n* Overhauled
  test running (allows cycles, avoids unnecessary recompilation, etc)\n\n## 0.0.1\n\n*
  First public release, beta quality\n"
basic-deps:
  http-client: ! '>=0.4.28 && <0.5'
  exceptions: ! '>=0.8.0.2 && <0.9'
  zip-archive: ! '>=0.2.3.7 && <0.4'
  streaming-commons: ! '>=0.1.10.0 && <0.2'
  either: ! '>=4.4.1.1 && <4.5'
  bytestring: ! '>=0.10.6.0 && <0.11'
  text-binary: ! '>=0.2.1 && <0.3'
  extra: ! '>=1.4.6 && <1.5'
  unix: ! '>=2.7.0.1 && <2.8'
  edit-distance: ==0.2.*
  split: ! '>=0.2.3.1 && <0.3'
  stm: ! '>=2.4.4 && <2.5'
  Cabal: ! '>=1.18.1.5 && <1.25'
  path: ! '>=0.5.7 && <0.6'
  base: ! '>=4.7 && <5'
  time: ! '>=1.4.2 && <1.7'
  hit: ! '>=0.6.3 && <0.7'
  open-browser: ! '>=0.2.1 && <0.3'
  base64-bytestring: ! '>=1.0.0.1 && <1.1'
  persistent: ! '>=2.1.2 && <2.7'
  unordered-containers: ! '>=0.2.5.1 && <0.3'
  text: ! '>=1.2.0.4 && <1.3'
  project-template: ==0.2.*
  retry: ! '>=0.6 && <0.8'
  persistent-template: ! '>=2.1.1 && <2.6'
  enclosed-exceptions: ! '>=1.0.1.1 && <1.1'
  generic-deriving: ! '>=1.9.0 && <1.11'
  hpc: ! '>=0.6.0.2 && <0.7'
  monad-control: ! '>=1.0.1.0 && <1.1'
  tls: ! '>=1.3.8 && <1.4'
  unix-compat: ! '>=0.4.1.4 && <0.5'
  filepath: ! '>=1.4.0.0 && <1.5'
  gitrev: ! '>=1.1 && <1.3'
  process: ! '>=1.2.0.0 && <1.5'
  async: ! '>=2.0.2 && <2.2'
  lifted-base: ! '>=0.2.3.6 && <0.3'
  binary-tagged: ! '>=0.1.1 && <0.2'
  conduit: ! '>=1.2.4 && <1.3'
  semigroups: ! '>=0.5 && <0.19'
  conduit-extra: ! '>=1.1.7.1 && <1.2'
  fast-logger: ! '>=2.3.1 && <2.5'
  hastache: ! '>=0.6.1 && <0.7'
  containers: ! '>=0.5.5.1 && <0.6'
  vector-binary-instances: ! '>=0.2.3.2 && <0.3'
  blaze-builder: ! '>=0.4.0.2 && <0.5'
  ansi-terminal: ! '>=0.6.2.3 && <0.7'
  base-compat: ! '>=0.6 && <0.10'
  tar: ! '>=0.4.1.0 && <0.6'
  binary: ! '>=0.7 && <0.9'
  http-client-tls: ! '>=0.2.2 && <0.3'
  cryptohash-conduit: ! '>=0.1.1 && <0.2'
  zlib: ! '>=0.5.4.2 && <0.7'
  mtl: ! '>=2.1.3.1 && <2.3'
  optparse-simple: ! '>=0.0.3 && <0.1'
  filelock: ! '>=0.1.0.1 && <0.2'
  hashable: ! '>=1.2.3.2 && <1.3'
  transformers-base: ! '>=0.4.4 && <0.5'
  regex-applicative-text: ! '>=0.1.0.1 && <0.2'
  byteable: ! '>=0.1.1 && <0.2'
  monad-unlift: ! '>=0.1.2.0 && <0.3'
  monad-logger: ! '>=0.3.13.1 && <0.4'
  base16-bytestring: ! '>=0.1.1.6 && <0.2'
  attoparsec: ! '>=0.12.1.5 && <0.14'
  transformers: ! '>=0.3.0.0 && <0.6'
  temporary: ! '>=1.2.0.3 && <1.3'
  optparse-applicative: ! '>=0.11.0.2 && <0.13'
  errors: ! '>=2.1.2 && <2.2'
  deepseq: ==1.4.*
  http-conduit: ! '>=2.1.7 && <2.2'
  stack: ! '>=1.1.2 && <1.2'
  fsnotify: ! '>=0.2.1 && <0.3'
  resourcet: ! '>=1.1.4.1 && <1.2'
  http-types: ! '>=0.8.6 && <0.10'
  pretty: ! '>=1.1.1.1 && <1.2'
  microlens: ! '>=0.3.0.0 && <0.5'
  persistent-sqlite: (>=2.1.4 && <2.5.0.1) || (>2.5.0.1 && <2.7)
  aeson: ! '>=0.8.0.2 && <0.10 || ==0.11.*'
  path-io: ! '>=1.1.0 && <2.0.0'
  template-haskell: ! '>=2.9.0.0 && <2.12'
  safe: ==0.3.*
  yaml: ! '>=0.8.10.1 && <0.9'
  vector: ! '>=0.10.12.3 && <0.12'
  hpack: ! '>=0.14.0 && <0.15'
  directory: ! '>=1.2.2.0 && <1.3'
  cryptohash: ! '>=0.11.6 && <0.12'
all-versions:
- '0.0.0'
- '0.0.1'
- '0.0.2'
- '0.0.2.1'
- '0.0.3'
- '0.1.0.0'
- '0.1.1.0'
- '0.1.2.0'
- '0.1.3.0'
- '0.1.3.1'
- '0.1.4.0'
- '0.1.4.1'
- '0.1.5.0'
- '0.1.6.0'
- '0.1.8.0'
- '0.1.10.0'
- '0.1.10.1'
- '1.0.0'
- '1.0.2'
- '1.0.4'
- '1.0.4.1'
- '1.0.4.2'
- '1.0.4.3'
- '1.1.0'
- '1.1.2'
author: Commercial Haskell SIG
latest: '1.1.2'
description-type: markdown
description: ! '## The Haskell Tool Stack


  [![Build Status](https://travis-ci.org/commercialhaskell/stack.svg?branch=master)](https://travis-ci.org/commercialhaskell/stack)

  [![Windows build status](https://ci.appveyor.com/api/projects/status/c1c7uvmw6x1dupcl?svg=true)](https://ci.appveyor.com/project/snoyberg/stack)

  [![Release](https://img.shields.io/github/release/commercialhaskell/stack.svg)](https://github.com/commercialhaskell/stack/releases)


  Stack is a cross-platform program for developing Haskell projects. It is intended
  for Haskellers both new and experienced.


  See [haskellstack.org](http://haskellstack.org) or the `doc` directory for more

  information.

'
license-name: BSD3
