homepage: https://github.com/commercialhaskell/stack
changelog-type: markdown
hash: b80f60d2ab054c34e47a18c2f219ed418d3fb4f1c9779586e470f25d11099f36
test-bench-deps:
  exceptions: -any
  bytestring: -any
  Cabal: -any
  path: -any
  base: ! '>=4.7 && <5'
  hspec: -any
  text: -any
  unix-compat: -any
  filepath: -any
  process: -any
  async: -any
  conduit: -any
  conduit-extra: -any
  containers: -any
  monad-logger: -any
  transformers: -any
  temporary: -any
  http-conduit: -any
  stack: -any
  resourcet: -any
  directory: -any
  cryptohash: -any
maintainer: chrisdone@fpcomplete.com
synopsis: The Haskell Tool Stack
changelog: ! "## 0.1.0.0\n\n* Fall back to cabal dependency solver when a snapshot
  can't be found\n* Basic implementation of `stack new` [#137](https://github.com/commercialhaskell/stack/issues/137)\n*
  `stack solver` command [#364](https://github.com/commercialhaskell/stack/issues/364)\n*
  `stack path` command [#95](https://github.com/commercialhaskell/stack/issues/95)\n*
  Haddocks [#143](https://github.com/commercialhaskell/stack/issues/143):\n    * Build
  for dependencies\n    * Use relative links\n    * Generate module contents and index
  for all packages in project\n\n## 0.0.3\n\n* `--prefetch` [#297](https://github.com/commercialhaskell/stack/issues/297)\n*
  `upload` command ported from stackage-upload [#225](https://github.com/commercialhaskell/stack/issues/225)\n*
  `--only-snapshot` [#310](https://github.com/commercialhaskell/stack/issues/310)\n*
  `--resolver` [#224](https://github.com/commercialhaskell/stack/issues/224)\n* `stack
  init` [#253](https://github.com/commercialhaskell/stack/issues/253)\n* `--extra-include-dirs`
  and `--extra-lib-dirs` [#333](https://github.com/commercialhaskell/stack/issues/333)\n*
  Specify intra-package target [#201](https://github.com/commercialhaskell/stack/issues/201)\n\n##
  0.0.2\n\n* Fix some Windows specific bugs [#216](https://github.com/commercialhaskell/stack/issues/216)\n*
  Improve output for package index updates [#227](https://github.com/commercialhaskell/stack/issues/227)\n*
  Automatically update indices as necessary [#227](https://github.com/commercialhaskell/stack/issues/227)\n*
  --verbose flag [#217](https://github.com/commercialhaskell/stack/issues/217)\n*
  Remove packages (HTTPS and Git) [#199](https://github.com/commercialhaskell/stack/issues/199)\n*
  Config values for system-ghc and install-ghc\n* Merge `stack deps` functionality
  into `stack build`\n* `install` command [#153](https://github.com/commercialhaskell/stack/issues/153)
  and [#272](https://github.com/commercialhaskell/stack/issues/272)\n* overriding
  architecture value (useful to force 64-bit GHC on Windows, for example)\n* Overhauled
  test running (allows cycles, avoids unnecessary recompilation, etc)\n\n## 0.0.1\n\n*
  First public release, beta quality\n"
basic-deps:
  http-client: ! '>=0.4.9'
  conduit-combinators: ! '>=0.3.1'
  exceptions: ! '>=0.8.0.2'
  void: ! '>=0.7'
  streaming-commons: ! '>=0.1.10.0'
  either: -any
  bytestring: ! '>=0.10.4.0'
  unix: ! '>=2.7.0.1'
  split: -any
  stm: ! '>=2.4.4'
  Cabal: ! '>=1.18.1.5'
  path: ! '>=0.5.1'
  base: ! '>=4.7 && <5'
  time: ! '>=1.4.2'
  base64-bytestring: -any
  persistent: ! '>=2.1.2'
  unordered-containers: ! '>=0.2.5.1'
  text: ! '>=1.2.0.4'
  persistent-template: ! '>=2.1.1'
  enclosed-exceptions: -any
  monad-loops: ! '>=0.4.2.1'
  monad-control: -any
  filepath: ! '>=1.3.0.2'
  process: ! '>=1.2.0.0'
  async: ! '>=2.0.2'
  word8: -any
  lifted-base: -any
  conduit: ! '>=1.2.4'
  conduit-extra: ! '>=1.1.7.1'
  fast-logger: ! '>=2.3.1'
  containers: ! '>=0.5.5.1'
  vector-binary-instances: -any
  tar: ! '>=0.4.1.0'
  bifunctors: ! '>=4.2.1'
  binary: ! '>=0.7'
  old-locale: ! '>=1.0.0.6'
  http-client-tls: ! '>=0.2.2'
  cryptohash-conduit: -any
  zlib: ! '>=0.5.4.2'
  mtl: ! '>=2.1.3.1'
  optparse-simple: ! '>=0.0.3'
  hashable: ! '>=1.2.3.2'
  transformers-base: ! '>=0.4.4'
  monad-logger: ! '>=0.3.13.1'
  base16-bytestring: -any
  file-embed: -any
  attoparsec: ! '>=0.12.1.5'
  transformers: ! '>=0.3.0.0'
  temporary: ! '>=1.2.0.3'
  optparse-applicative: ! '>=0.11.0.2'
  deepseq: -any
  http-conduit: ! '>=2.1.5'
  stack: -any
  resourcet: ! '>=1.1.4.1'
  http-types: ! '>=0.8.6'
  pretty: -any
  persistent-sqlite: ! '>=2.1.4'
  aeson: ! '>=0.8.0.2'
  template-haskell: -any
  safe: ! '>=0.3'
  yaml: ! '>=0.8.10.1'
  vector: ! '>=0.10.12.3'
  directory: ! '>=1.2.1.0'
  cryptohash: ! '>=0.11.6'
all-versions:
- '0.0.0'
- '0.0.1'
- '0.0.2'
- '0.0.2.1'
- '0.0.3'
- '0.1.0.0'
author: Chris Done
latest: '0.1.0.0'
description-type: markdown
description: ! "## The Haskell Tool Stack\n\n[![Build Status](https://travis-ci.org/commercialhaskell/stack.svg?branch=master)](https://travis-ci.org/commercialhaskell/stack)\n\n`stack`
  is a cross-platform program for developing Haskell\nprojects. It is aimed at Haskellers
  both new and experienced.\n\n<img src=\"http://i.imgur.com/WW69oTj.gif\" width=\"50%\"
  align=\"right\">\n\nIt features:\n\n* Installing GHC automatically.\n* Installing
  packages needed for your project.\n* Building your project.\n* Testing your project.\n*
  Benchmarking your project.\n\n#### How to install\n\nDownloads are available by
  operating system:\n\n* [Windows](https://github.com/commercialhaskell/stack/wiki/Downloads#windows)\n*
  [OS X](https://github.com/commercialhaskell/stack/wiki/Downloads#os-x)\n* [Ubuntu](https://github.com/commercialhaskell/stack/wiki/Downloads#ubuntu)\n*
  [Arch Linux](https://github.com/commercialhaskell/stack/wiki/Downloads#arch-linux)\n*
  [Linux (general)](https://github.com/commercialhaskell/stack/wiki/Downloads#linux)\n\n####
  How to use\n\nGo into a Haskell project directory and run `stack build`. If everything
  is\nalready configured, this will:\n\n* Download the package index.\n* Download
  and install all necessary dependencies for the project.\n* Build and install the
  project.\n\nYou may be prompted to run some of the following along the way:\n\n*
  `stack new` to create a brand new project.\n* `stack init` to create a stack configuration
  file for an existing project.\n  stack will figure out what Stackage release (LTS
  or nightly) is appropriate\n  for the dependencies.\n* `stack setup` to download
  and install the correct GHC version. (For\n  information on installation paths,
  please use the `stack path` command.)\n\nRun `stack` for a complete list of commands.\n\n####
  Architecture\n\nA full description of the architecture\n[is available here](https://github.com/commercialhaskell/stack/wiki/Architecture).\n\n####
  Questions, Feedback, Discussion\n\n* For frequently asked questions about detailed
  or specific use-cases,\n  please see\n  [the FAQ](https://github.com/commercialhaskell/stack/wiki/FAQ).\n*
  For general questions, comments, feedback and support please write\n  to [the stack
  mailing list](https://groups.google.com/d/forum/haskell-stack).\n* For bugs, issues,
  or requests please\n  [open an issue](https://github.com/commercialhaskell/stack/issues/new).\n\n####
  Why stack?\n\nstack is a project of the [Commercial Haskell](http://commercialhaskell.com/)\ngroup,
  spearheaded by [FP Complete](https://www.fpcomplete.com/). It is\ndesigned to answer
  the needs of commercial Haskell users, hobbyist Haskellers,\nand individuals and
  companies thinking about starting to use Haskell. It is\nintended to be easy to
  use for newcomers, while providing the customizability\nand power experienced developers
  need.\n\nWhile stack itself has been around since June of 2015, it is based on codebases\nused
  by FP Complete for its corporate customers and internally for years prior.\nstack
  is a refresh of that codebase combined with other open source efforts\nlike [stackage-cli](https://github.com/fpco/stackage-cli)
  to meet the needs of\nusers everywhere.\n\nA large impetus for the work on stack
  was a [large survey of people interested\nin\nHaskell](https://www.fpcomplete.com/blog/2015/05/thousand-user-haskell-survey),\nwhich
  rated build issues as a major concern. The stack team hopes that stack\ncan address
  these concerns.\n"
license-name: BSD3
