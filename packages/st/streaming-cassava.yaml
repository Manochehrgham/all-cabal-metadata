homepage: ''
changelog-type: markdown
hash: 43f538a979fc185a7987532d5ce9476770520545df0d51ab821490dc6aa29a2a
test-bench-deps:
  streaming: -any
  base: -any
  streaming-cassava: -any
  hspec: ==2.4.*
  text: -any
  quickcheck-instances: -any
  mtl: ! '>=2.2.1 && <2.3'
  QuickCheck: ==2.*
  vector: ! '>=0.3'
maintainer: Ivan.Miljenovic@gmail.com
synopsis: Cassava support for the streaming ecosystem
changelog: ! '# Revision history for streaming-cassava


  ## 0.1.0.0  -- 2017-06-30


  * First version.

'
basic-deps:
  streaming: ! '>=0.1.1.0 && <0.2'
  bytestring: -any
  base: ! '>=4.8 && <5'
  cassava: ==0.5.*
  mtl: -any
  transformers: -any
  streaming-bytestring: <0.2
all-versions:
- '0.1.0.0'
author: Ivan Lazar Miljenovic
latest: '0.1.0.0'
description-type: markdown
description: ! 'streaming-cassava

  =================


  [![Hackage](https://img.shields.io/hackage/v/streaming-cassava.svg)](https://hackage.haskell.org/package/streaming-cassava)
  [![Build Status](https://travis-ci.org/ivan-m/streaming-cassava.svg)](https://travis-ci.org/ivan-m/streaming-cassava)


  > [cassava] support for the [streaming] ecosystem


  [cassava]: http://hackage.haskell.org/package/cassava

  [streaming]: http://hackage.haskell.org/package/streaming


  This library allows you to easily stream CSV data in and out.  You can

  do so using both "plain" record-based (with optional header support)

  or name-based (header required to determine ordering)

  encoding/decoding.


  All encoding/decoding options are supported, it''s possible to

  automatically add on default headers and you can even choose whether

  to fail on the first parse error or handle errors on a row-by-row

  basis.

'
license-name: MIT
