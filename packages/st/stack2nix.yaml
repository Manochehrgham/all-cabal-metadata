homepage: ''
changelog-type: ''
hash: 710167e50f89d4f5fd034b510dad6cda6d3d897c52dc9c6c2cef8810be9f9a90
test-bench-deps: {}
maintainer: jacob.mitchell@iohk.io
synopsis: Convert stack.yaml files into Nix build instructions.
changelog: ''
basic-deps:
  bytestring: ! '>=0.10.8.1 && <0.11'
  data-fix: ==0.0.4
  Cabal: ! '>=1.24.2 && <1.25'
  base: ==4.9.*
  text: ! '>=1.2.2.1 && <1.3'
  SafeSemaphore: ! '>=0.10.1 && <0.11'
  filepath: ! '>=1.4.1.1 && <1.5'
  process: ! '>=1.4.3 && <1.5'
  async: ! '>=2.1.1.1 && <2.2'
  containers: ! '>=0.5.7.1 && <0.6'
  hnix: ! '>=0.3.4 && <0.4'
  monad-parallel: ! '>=0.7.2.2 && <0.8'
  temporary: ! '>=1.2.0.4 && <1.3'
  optparse-applicative: ! '>=0.13.2 && <0.14'
  stack2nix: -any
  Glob: ! '>=0.7.14 && <0.8'
  yaml: ! '>=0.8.22.1 && <0.9'
  directory: ! '>=1.3 && <1.4'
all-versions:
- '0.1.1.0'
- '0.1.2.0'
- '0.1.3.0'
author: Jacob Mitchell
latest: '0.1.3.0'
description-type: markdown
description: ! "# stack2nix\n\n[![Build Status](https://travis-ci.org/input-output-hk/stack2nix.svg)](https://travis-ci.org/input-output-hk/stack2nix)\n\n##
  About\n\n`stack2nix` automates conversion from [Stack](https://docs.haskellstack.org/en/stable/README/)
  configuration file to [Nix](http://nixos.org/nix/) expressions.\n\n`stack2nix` high-level
  workflow:\n\n- invoke `stack list-dependencies` to determine complete fixed version
  list of packages based on resolver\n- apply any additional configuration (local
  packages, extra dependencies, etc) from `stack.yaml`\n- generate complete list of
  dependencies to Nix expressions, replacing upstream `hackage-packages.nix`\n\n##
  Installation\n\nThere are two options. The first is to install stack2nix and its
  dependencies on your machine directly, and the second is to use the supported virtual
  machine configuration.\n\nIf there are difficulties please file an issue. Generally
  the virtual machine approach should be more reliable.\n\n### Native Environment\n\n1.
  Install [nix](https://nixos.org/nix/).\n2. Clone this repo.\n3. Run `stack install`
  to install.\n4. Ensure `cabal2nix` v2.2.1 or higher and `stack2nix` are in your
  `$PATH`.\n\n### Virtual Machine\n\n1. Install [VirtualBox](https://www.virtualbox.org/wiki/VirtualBox)
  and [Vagrant](https://www.vagrantup.com/).\n2. Clone this repo.\n3. Run `./scripts/vagrant.sh`
  and take a coffee break.\n4. If there are no errors, log into the VM: `vagrant ssh`.\n\n##
  Usage\n\nNix expressions generated by stack2nix depend on a somewhat recent upstream
  change to nixpkgs. If `nix-env` or `nix-build` fails with an error mentioning `initialPackages`,
  try setting the `NIX_PATH` environment variable: `NIX_PATH=nixpkgs=https://github.com/NixOS/nixpkgs/archive/21a8239452adae3a4717772f4e490575586b2755.tar.gz`.\n\n###
  Remote Packages\n\nStack2nix can generate a nix expressions for Haskell packages
  hosted in git repositories.\n\n```\n    $ stack2nix --revision 242e2a064f6a32b22e1599bbfe72e64d7b6203b8
  https://github.com/jgm/pandoc.git > demo.nix\n    $ nix-build -A pandoc demo.nix\n```\n\n###
  Local Packages\n\nSometimes it's convenient to build local Haskell packages. Assuming
  the current directory is a locally maintained fork of Pandoc:\n\n```\n    $ stack2nix
  . > default.nix\n    $ nix-build -A pandoc\n```\n\n## Testing\n\nRun `./scripts/travis.sh`
  to build and test.\n"
license-name: MIT
