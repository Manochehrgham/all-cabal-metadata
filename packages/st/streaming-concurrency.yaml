homepage: ''
changelog-type: markdown
hash: 2df8fa3499dc3c7e1d101a5d47b0a0b0c1519ac8b4fbd52363124b27bffd88a8
test-bench-deps:
  streaming: -any
  streaming-concurrency: -any
  bytestring: -any
  base: -any
  hspec: ==2.4.*
  quickcheck-instances: -any
  QuickCheck: ==2.*
  streaming-bytestring: -any
maintainer: Ivan.Miljenovic@gmail.com
synopsis: Concurrency support for the streaming ecosystem
changelog: ! '# Revision history for streaming-concurrency


  ## 0.1.0.0  -- 2017-07-04


  * First version.

'
basic-deps:
  streaming: ! '>=0.1.4.0 && <0.2'
  exceptions: ! '>=0.6 && <0.9'
  bytestring: -any
  stm: ! '>=2.4 && <3'
  base: ==4.*
  streaming-with: ==0.1.*
  monad-control: ==1.*
  lifted-async: ! '>=0.9.1 && <0.10'
  transformers-base: -any
  streaming-bytestring: ! '>=0.1.4.5 && <0.2'
all-versions:
- '0.1.0.0'
author: Ivan Lazar Miljenovic
latest: '0.1.0.0'
description-type: markdown
description: ! 'streaming-concurrency

  ==============


  [![Hackage](https://img.shields.io/hackage/v/streaming-concurrency.svg)](https://hackage.haskell.org/package/streaming-concurrency)
  [![Build Status](https://travis-ci.org/ivan-m/streaming-concurrency.svg)](https://travis-ci.org/ivan-m/streaming-concurrency)


  > Concurrency for the [streaming] ecosystem


  The primary purpose for this library is to be able to merge multiple

  `Stream`s together.  However, it is possible to build higher

  abstractions on top of this to be able to also feed multiple streams.


  [streaming]: http://hackage.haskell.org/package/streaming


  Thanks and recognition

  ----------------------


  The code here is heavily based upon -- and borrows the underlying

  `Buffer` code from -- Gabriel Gonzalez''s [pipes-concurrency].  It

  differs from it primarily in being more bracket-oriented rather than

  providing a `spawn` primitive, thus not requiring explicit garbage

  collection.


  [pipes-concurrency]: http://hackage.haskell.org/package/pipes-concurrency

'
license-name: MIT
