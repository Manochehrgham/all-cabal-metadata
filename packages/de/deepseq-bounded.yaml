changelog-type: ''
hash: bd6c96e28b9e32ccb4718c1ea990abe21a011c03c3666e9e44355c53a3d79167
synopsis: Bounded deepseq, including support for generic deriving
changelog: ''
all-versions:
- '0.5.0'
- '0.5.1'
- '0.5.2'
- '0.5.3'
- '0.5.4'
- '0.5.5'
- '0.6.0.0'
- '0.6.0.1'
- '0.6.0.2'
- '0.6.0.3'
- '0.6.1.0'
- '0.6.2.0'
- '0.7.0.0'
- '0.7.0.1'
- '0.7.0.2'
- '0.8.0.0'
latest: '0.8.0.0'
description-type: haddock
description: ! 'This package provides methods for partially (or fully) evaluating
  data

  structures (\"bounded deep evaluation\").


  More information is available on the project <http://www.fremissant.net/deepseq-bounded
  homepage>.

  There may be activity on this <http://www.reddit.com/r/haskell/comments/2pscxh/ann_deepseqbounded_seqaid_leaky/
  reddit> discussion, where your comments are invited.


  Quoting from the

  <http://hackage.haskell.org/package/deepseq deepseq> package:


  \"/Artificial forcing is often used for adding strictness to a program, e.g. in
  order to force pending exceptions, remove space leaks, or force lazy IO to happen.
  It is also useful in parallel programs, to ensure work does not migrate to the wrong
  thread./\"


  Sometimes we don''t want to, or cannot, force all the way, for instance

  when dealing with potentially infinite values of coinductive types.

  Also, bounded forcing bridges the theoretical axis between shallow seq

  and full deepseq.


  We provide two new classes <http://hackage.haskell.org/package/deepseq-bounded-0.8.0.0/docs/Control-DeepSeq-Bounded-NFDataN.html#t:NFDataN
  NFDataN> and <http://hackage.haskell.org/package/deepseq-bounded-0.8.0.0/docs/Control-DeepSeq-Bounded-NFDataP.html#t:NFDataP
  NFDataP>.

  Instances of these provide bounded deep evaluation for arbitrary polytypic terms:


  * <http://hackage.haskell.org/package/deepseq-bounded-0.8.0.0/docs/Control-DeepSeq-Bounded-NFDataN.html#t:NFDataN
  rnfn> bounds the forced evaluation by depth of recursion.


  * <http://hackage.haskell.org/package/deepseq-bounded-0.8.0.0/docs/Control-DeepSeq-Bounded-NFDataP.html#t:NFDataP
  rnfp> forces based on patterns (static or dynamic).


  Instances of <http://hackage.haskell.org/package/deepseq-bounded-0.8.0.0/docs/Control-DeepSeq-Bounded-NFDataN.html
  NFDataN> and <http://hackage.haskell.org/package/deepseq-bounded-0.8.0.0/docs/Control-DeepSeq-Bounded-NFDataP.html
  NFDataP> can be automatically derived via <http://hackage.haskell.org/package/generics-sop/docs/Generics-SOP.html
  Generics.SOP>, backed by the <http://hackage.haskell.org/package/deepseq-bounded-0.8.0.0/docs/Control-DeepSeq-Bounded-Generic-GNFDataN.html
  GNFDataN> and <http://hackage.haskell.org/package/deepseq-bounded-0.8.0.0/docs/Control-DeepSeq-Bounded-Generic-GNFDataP.html
  GNFDataP> modules.

  <http://hackage.haskell.org/package/deepseq-bounded-0.8.0.0/docs/Control-DeepSeq-Bounded-NFDataN.html
  NFDataN> can optionally be derived by the standard <http://downloads.haskell.org/~ghc/7.8.3/docs/html/libraries/base-4.7.0.1/GHC-Generics.html
  GHC.Generics> facility (but not so for <http://hackage.haskell.org/package/deepseq-bounded-0.8.0.0/docs/Control-DeepSeq-Bounded-NFDataP.html
  NFDataP>).


  Another approach is <http://hackage.haskell.org/package/deepseq-bounded-0.8.0.0/docs/Control-DeepSeq-Bounded-Seqable.html
  Seqable>, which is similar to <http://hackage.haskell.org/package/deepseq-bounded-0.8.0.0/docs/Control-DeepSeq-Bounded-NFDataN.html
  NFDataN>,

  but optimised for use as a dynamically-reconfigurable forcing harness

  in the <http://hackage.haskell.org/package/seqaid seqaid> auto-instrumentation tool.


  Recent developments supporting parallelisation control (in <http://hackage.haskell.org/package/deepseq-bounded-0.8.0.0/docs/Control-DeepSeq-Bounded-Pattern.html
  Pattern>

  and <http://hackage.haskell.org/package/deepseq-bounded-0.8.0.0/docs/Control-DeepSeq-Bounded-Seqable.html
  Seqable> modules) may justify renaming this library to

  something which encompasses both strictness and parallelism aspects.


  / NOTE: Versions >=0.6 are substantially different from the original (now deprecated)
  0.5.* releases, particularly as regards NFDataP. /'
