changelog-type: text
hash: 3f52867fe9267876504d8ce20c77dcfb2ac6613af8c915017859b6022d3cc9fd
test-bench-deps:
  test-framework-hunit: -any
  test-framework: -any
  base: -any
  HUnit: -any
  deepseq-generics: -any
  ghc-prim: -any
  deepseq: -any
synopsis: GHC.Generics-based Control.DeepSeq.rnf implementation
changelog: ! "-*-change-log-*-\n\n0.1.1.2 Herbert Valerio Riedel  <hvr@gnu.org>  November
  2013\n\n\t* Add support for GHC 7.10 and `deepseq-1.4.0.0`\n\n0.1.1.1 Herbert Valerio
  Riedel  <hvr@gnu.org>  November 2013\n\n\t* Add support for GHC 7.8\n\n0.1.1.0 Herbert
  Valerio Riedel  <hvr@gnu.org>  September 2013\n\n\t* Control/DeepSeq/Generics.hs
  (genericRnfV1): New Function\n\n0.1.0.0 Herbert Valerio Riedel  <hvr@gnu.org>  September
  2012\n\n\t* Initial Release\n"
basic-deps:
  base: ! '>=4.5 && <4.9'
  ghc-prim: ! '>=0.2 && <0.5'
  deepseq: ! '>=1.2.0.1 && <1.5'
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.1.1.1'
- '0.1.1.2'
latest: '0.1.1.2'
description-type: haddock
description: ! 'This package provides a "GHC.Generics"-based

  ''Control.DeepSeq.Generics.genericRnf'' function which can be used

  for providing a ''rnf'' implementation. See the documentation for

  the ''genericRnf'' function in the "Control.DeepSeq.Generics" module

  to get started.


  The original idea was pioneered in the @generic-deepseq@ package

  (see <http://www.haskell.org/pipermail/haskell-cafe/2012-February/099551.html>

  for more information).


  This package differs from the @generic-deepseq@ package by working

  in combination with the existing @deepseq@ package as opposed to

  defining a conflicting drop-in replacement for @deepseq@''s

  @Control.Deepseq@ module.


  Note: The ability to auto-derive via "GHC.Generics" has been

  merged into @deepseq-1.4.0.0@. This package is now still useful

  for writing code that''s also compatible with older @deepseq@

  versions not yet providing "GHC.Generics"-support.'
