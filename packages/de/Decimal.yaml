changelog-type: ''
hash: 6200c4e04e4be482107f2075ea56cf4e0fcf132db7050eade816db97c06cca29
test-bench-deps:
  test-framework-hunit: -any
  test-framework: ! '>=0.4.1'
  base: ! '>=4 && <5'
  test-framework-quickcheck2: -any
  HUnit: ! '>=1.2 && <2'
  deepseq: -any
  QuickCheck: ! '>=2.4'
synopsis: Decimal numbers with variable precision
changelog: ''
basic-deps:
  base: ! '>=4 && <5'
  deepseq: -any
all-versions:
- '0.1.0'
- '0.2.0'
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.3.1'
- '0.4.1'
- '0.4.2'
latest: '0.4.2'
description-type: text
description: ! "Variable Precision Decimal Numbers\n==================================\n\nThe
  \"Decimal\" type is mainly intended for doing financial arithmetic\nwhere the number
  of decimal places may not be known at compile time\n(e.g. for a program that handles
  both Yen and Dollars) and the\napplication must not drop pennies on the floor.  For
  instance if you\nhave to divide $10 between three people then one of them has to
  get\n$3.34.\n\nThe number of decimal places in a value is represented as a Word8,\nallowing
  for up to 255 decimal places.  Functions preserve precision.\nBinary operators return
  a result with the precision of the most\nprecise argument, so 2.3 + 5.678 = 7.978.\n\nIf
  you need fixed precision decimal arithmetic where the precision is\nknown at compile
  time then Data.Number.Fixed from Lennart Augustsson's\n\"numbers\" package is more
  likely to be what you want.\n\nQuickCheck Specification\n------------------------\n\nData.Decimal
  includes a set of QuickCheck properties which act as both\ntests and a formal specification.
  To run the tests do:\n\n   cabal configure --enable-tests\n   cabal build\n   cabal
  test\n\nVersion 0.2.1\n-------------\n\nFixed \"base\" dependency.\nPut test suite
  under \"cabal test\"\n\nVersion 0.2.2\n-------------\n\nMinor fixes to allow compilation
  under other versions of GHC.\n\nVersion 0.2.3\n-------------\n\nAdded instance of
  NFData from Control.DeepSeq, and hence a dependency\non the deepseq package, thanks
  to Jeff Shaw (shawjef3 at msu.edu).\n\nVersion 0.3.1\n-------------\n\nAdded Typeable,
  Fractional and RealFrac instances.\nMultiplication now returns an exact result,
  increasing precision if necessary.\n\nThese changes alter the API. Hence the increment
  to the major version number.\n\nThanks to Alexey Uimanov (s9gf4ult at gmail.com).\n\nVersion
  0.4.1\n-------------\n\nImproved \"Read\" instance. Now handles \"1.2e3\" and \"reads\"
  only returns a \n   single parse.\nCorrected documentation.\nAdded \"Enum\" instance.\n\"decimalConvert\"
  now returns a Maybe value. The old version has been renamed\n   to \"unsafeDecimalConvert.\n\nVersion
  0.4.2\n-------------\n\nRemoved spurious \"Integer\" type context.\n\n   \n"
