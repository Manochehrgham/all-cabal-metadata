changelog-type: ''
hash: 0bd51663168fa8c3bbbdb42525f2bf83daba987a47a7337620ae45539a2b82c0
synopsis: Utility to generate Haskell code from Mustache templates
changelog: ''
all-versions:
- '0.1'
- '0.1.1'
- '0.2'
- '0.2.1'
- '0.2.1.1'
- '0.2.2'
- '0.3'
latest: '0.3'
description-type: haddock
description: ! 'This utility takes in Haskell records (single data constructor only)

  and a list of mustache template and record name pairs, and generates

  Haskell code for functions that take an escape function and one of

  the records, and returns a ''Data.Text.Lazy.Builder.Builder''.


  This allows most records to be used as context for rendering a

  template, and gives GHC the ability to typecheck the template''s use of

  record fields at compile time.  It also means your application does

  not need to be reading template files off disk in production.


  Usage example:


  > mustache2hs -m Records.hs main.mustache SomeRec sub.mustache OtherRec


  A full example is in the git repository.'
