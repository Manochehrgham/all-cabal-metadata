homepage: ''
changelog-type: ''
hash: d98e66a99bd6f6e9e6aa845498ccbb3ebdb663d41926e8bbee980a46d05c98cb
test-bench-deps:
  base-unicode-symbols: -any
  base: ! '>=4.7 && <5'
  unordered-containers: -any
  hspec: -any
  text: -any
  filepath: -any
  process: -any
  mustache: -any
  temporary: -any
  aeson: -any
  yaml: -any
  directory: -any
maintainer: dev@justus.science
synopsis: A mustache template parser library.
changelog: ''
basic-deps:
  ja-base-extra: ! '>=0.2.1'
  either: -any
  base-unicode-symbols: -any
  bytestring: -any
  base: ! '>=4.7 && <5'
  unordered-containers: -any
  hspec: -any
  text: ==1.2.*
  filepath: -any
  uniplate: -any
  parsec: ! '>=3.1 && <3.2'
  mtl: ! '>=2.2 && <2.3'
  cmdargs: -any
  conversion-text: -any
  mustache: -any
  conversion: ! '>=1.2'
  scientific: -any
  tagsoup: -any
  aeson: -any
  yaml: -any
  vector: -any
  directory: -any
all-versions:
- '0.1.0.0'
- '0.2.0.0'
author: Justus Adam
latest: '0.2.0.0'
description-type: markdown
description: ! "# mustache [![Travis Status](https://travis-ci.org/JustusAdam/mustache.svg?branch=master)](https://travis-ci.org/JustusAdam/mustache)
  [![Hackage](https://img.shields.io/hackage/v/mustache.svg)](https://hackage.haskell.org/package/mustache)
  [![Join the chat at https://gitter.im/JustusAdam/mustache](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/JustusAdam/mustache?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nHaskell
  implementation of [mustache templates][mustache-homepage].\n\n[mustache-homepage]:
  https://mustache.github.io\n\n## Motivation\n\nThe old Haskell implementation of
  mustache templates [hastache][] seemed pretty abandoned to me. This implementation
  aims to be much easier to use and (fingers crossed) better maintained.\n\n[hastache]:
  https://hackage.haskell.org/package/hastache\n\nSince it is so easy to use and requires
  but a few files of code, I've also written a small executable that compiles and
  renders mustache templates with data input from json or yaml files.\n\n## Usage\n\n###
  Library\n\n... Soonâ„¢\n\n### Executable `haskell-mustache`\n\n    $ haskell-mustache
  --help\n    Simple mustache template substitution\n\n    arguments [OPTIONS] TEMPLATE
  [DATA-FILES]\n\n    Common flags:\n      -t --templatedirs[=DIRECTORY]  The directory
  in which to search for the\n                                     templates\n      -?
  --help                      Display help message\n      -V --version                   Print
  version information\n\nCurrenty substitutes the `TEMPLATE` once with each `DATA-FILE`\n\n##
  Roadmap\n\n- [x] String parser for mustache templates\n- [x] Template substitution\n-
  [x] Standalone executable\n- [x] Support for 'set delimiter'\n- [x] More efficiency
  using `Text` rather than `String`\n- [x] More efficient Text parsing\n- [x] Test
  coverage by the official [specs](https://github.com/mustache/spec)\n- [x] Haddock
  documentation\n- [ ] More instances for `ToMustache` typeclass\n"
license-name: BSD3
