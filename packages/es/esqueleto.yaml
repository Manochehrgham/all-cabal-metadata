changelog-type: ''
hash: b8ff0a198d27211cb71845b6e07f1dc4a93ee35c8678e7ed54b67557e7bf9f89
synopsis: Type-safe EDSL for SQL queries on persistent backends.
changelog: ''
all-versions:
- '0.1'
- '0.2'
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '0.2.4'
- '0.2.5'
- '0.2.6'
- '0.2.7'
- '0.2.8'
- '0.2.9'
- '1.0'
- '1.0.1'
- '1.0.2'
- '1.0.3'
- '1.0.5'
- '1.0.6'
- '1.0.7'
- '1.0.8'
- '1.2'
- '1.2.1'
- '1.2.2'
- '1.2.2.1'
- '1.2.3'
- '1.2.4'
- '1.3'
- '1.3.1'
- '1.3.2'
- '1.3.3'
- '1.3.4'
- '1.3.4.2'
- '1.3.4.3'
- '1.3.4.4'
- '1.3.4.5'
- '1.3.4.6'
- '1.3.5'
- '1.3.6'
- '1.3.7'
- '1.3.8'
- '1.3.9'
- '1.3.10'
- '1.3.11'
- '1.3.12'
- '1.4'
- '1.4.1'
- '1.4.1.1'
- '1.4.1.2'
- '1.4.1.3'
- '1.4.2'
- '1.4.3'
- '1.4.4'
- '2.0.0'
- '2.0.1'
- '2.0.2'
- '2.0.3'
- '2.1.0'
- '2.1.1'
- '2.1.2'
- '2.1.2.1'
- '2.1.2.2'
- '2.1.2.3'
- '2.1.3'
- '2.2'
latest: '2.2'
description-type: haddock
description: ! 'This version is a beta release that works with the persistent-2.0
  beta.


  @esqueleto@ is a bare bones, type-safe EDSL for SQL queries

  that works with unmodified @persistent@ SQL backends.  Its

  language closely resembles SQL, so you don''t have to learn

  new concepts, just new syntax, and it''s fairly easy to

  predict the generated SQL and optimize it for your backend.

  Most kinds of errors committed when writing SQL are caught as

  compile-time errors---although it is possible to write

  type-checked @esqueleto@ queries that fail at runtime.


  @persistent@ is a library for type-safe data serialization.  It

  has many kinds of backends, such as SQL backends

  (@persistent-mysql@, @persistent-postgresql@,

  @persistent-sqlite@) and NoSQL backends (@persistent-mongoDB@).

  While @persistent@ is a nice library for storing and retrieving

  records, including with filters, it does not try to support

  some of the features that are specific to SQL backends.  In

  particular, @esqueleto@ is the recommended library for

  type-safe @JOIN@s on @persistent@ SQL backends.  (The

  alternative is using raw SQL, but that''s error prone and does

  not offer any composability.)


  Currently, @SELECT@s, @UPDATE@s, @INSERT@s and @DELETE@s are supported.

  Not all SQL features are available, but most of them can be easily added

  (especially functions), so please open an issue or send a pull request if

  you need anything that is not covered by @esqueleto@ on

  <https://github.com/prowdsponsor/esqueleto/>.


  The name of this library means \"skeleton\" in Portuguese and

  contains all three SQL letters in the correct order =).  It was

  inspired by Scala''s Squeryl but created from scratch.'
