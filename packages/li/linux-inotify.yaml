changelog-type: ''
hash: 66a33ebd531e738a7add9cb63e360cd7eaef7b9bcd5d81138e6c78e2e9d10035
synopsis: Thinner binding to the Linux Kernel's inotify interface
changelog: ''
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.2.0.0'
- '0.2.0.1'
latest: '0.2.0.1'
description-type: haddock
description: ! 'This is a binding for GHC 7 to the Linux Kernel''s inotify interface,

  which provides notifications to applications regarding file system

  events,  such as file creation,  modification, deletion,  etc.


  Some of the advantages over hinotify are:


  1.  linux-inotify provides a plain getEvent operator that blocks,

  instead of implementing a callback API.


  2.  linux-inotify avoids most of GHC''s standard IO handling code,

  relying on plain system calls with minimal overhead in Haskell-land.

  (However, it still does make good use of GHC''s IO manager via

  nonblocking inotify sockets and threadWaitRead,  so getEvent is

  still efficient.)


  3.  linux-inotify does not call forkIO, which means less context

  switching and scheduling overhead, especially in contexts where

  hinotify''s particular event router isn''t a very good fit for

  your application;  e.g. you are implementing a following log file

  processor.


  Some of the disadvantages compared to hinotify are:


  1.   Due to the use of `inotify_init1`,  `linux-inotify` currently

  requires linux 2.6.27 or later,  even though `inotify` support

  debuted in linux 2.6.13.   You can check which version of linux is

  on a machine via `uname` `-a`.   I would like to fix this at some point,

  but it isn''t a personal priority.


  2.   `linux-inotify` requires GHC 7.0.2 or later,  whereas `hinotify`

  works with many versions of GHC 6.   I have no plans to fix this.'
