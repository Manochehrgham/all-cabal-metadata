homepage: https://github.com/leftaroundabout/linearmap-family
changelog-type: ''
hash: c917ace1221a02587e65c9224c1b39fd6999b9c6f712138312def89981bcd3d4
test-bench-deps: {}
maintainer: (@) sagemueller $ geo.uni-koeln.de
synopsis: Native, matrix-free linear algebra.
changelog: ''
basic-deps:
  free-vector-spaces: ! '>=0.1.1 && <0.2'
  base: ! '>=4.8 && <4.9'
  vector-space: ! '>=0.10 && <0.11'
  semigroups: -any
  containers: -any
  lens: -any
  ieee754: ! '>=0.7 && <0.9'
  linear: -any
  constrained-categories: ! '>=0.3 && <0.4'
  vector: -any
all-versions:
- '0.1.0.0'
- '0.1.0.1'
author: Justus Sagemüller
latest: '0.1.0.1'
description-type: haddock
description: ! 'The term /numerical linear algebra/ is often used almost

  synonymous with /matrix modifications/. However, what''s interesting

  for most applications are really just /points in some vector space/

  and linear mappings between them, not matrices (which represent

  points or mappings, but inherently depend on a particular choice

  of basis / coordinate system).


  This library implements the crucial LA operations like solving

  linear equations and eigenvalue problems, without requiring

  that the vectors are represented in some particular basis. Apart

  from conceptual elegance (only operations that are actually

  geometrically sensible will typecheck – this is far stronger than

  just confirming that the dimensions match, as some other libraries

  do), this also opens up good optimisation possibilities: the

  vectors can be unboxed, use dedicated sparse compression, possibly

  carry out the computations on accelerated hardware (GPU etc.).

  The spaces can even be infinite-dimensional (e.g. function spaces).


  The linear algebra algorithms in this package only require the

  vectors to support fundamental operations like addition, scalar

  products, double-dual-space coercion and tensor products; none of

  this requires a basis representation.'
license-name: GPL-3
