changelog-type: ''
hash: e293a054fca3d6ab68f3e08f643f61d43d095431481d65c759292885f7e04141
synopsis: ! 'Tries and Patricia tries: finite sets and maps for list keys'
changelog: ''
all-versions:
- '0.0'
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.4.1'
- '0.4.2'
- '0.4.3'
- '0.5'
- '0.5.1'
- '0.5.2'
- '0.6.0'
- '0.6.1'
latest: '0.6.1'
description-type: haddock
description: ! 'This library provides implementations of finite sets and maps for
  list keys

  using tries, both simple and of the Patricia kind. In most (or all? sorry,

  haven''t benchmarked yet) cases, the Patricia tries will have better

  performance, so use them unless you have reasons not to.


  The data types are parametrized over the map type they use internally to

  store the child nodes: this allows extending them to support different kinds

  of key types or increasing efficiency. Child maps are required to be

  instances of the Map class in Data.ListTrie.Base.Map. Some operations

  additionally require an OrdMap instance.


  The Eq, Ord, and Enum modules contain ready structures for key types which

  are instances of those classes, using lists of pairs, Data.Map, and

  Data.IntMap respectively.'
