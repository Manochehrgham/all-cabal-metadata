homepage: http://github.com/lysxia/generic-random
changelog-type: markdown
hash: e5f542a26ea2ee522bb33db6b9a9cd6f8e02b97696a795af7e4ea12b92f34f40
test-bench-deps: {}
maintainer: lysxia@gmail.com
synopsis: Generic random generators
changelog: ! "# 0.5.0.0\n\n- Turn off dependency on boltzmann-samplers by default\n-
  Add genericArbitraryU, genericArbitraryU0 and genericArbitraryU1\n- Compatible with
  GHC 7.8.4 and GHC 7.10.3\n\n# 0.4.1.0\n\n- Move Boltzmann sampler modules to another
  package: boltzmann-samplers\n\n# 0.4.0.0\n\n- Check well-formedness of constructor
  distributions at compile time.\n- No longer support GHC 7.10.3 (the above feature
  relies on Generic\n  information which does not exist before GHC 8)\n\n# 0.3.0.0\n\n-
  Support GHC 7.10.3\n- Replace TypeApplications with ad-hoc data types in\n  genericArbitraryFrequency'/genericArbitrary'\n"
basic-deps:
  base: ! '>=4.7 && <4.11'
  QuickCheck: -any
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.4.0.0'
- '0.4.1.0'
- '0.5.0.0'
author: Li-yao Xia
latest: '0.5.0.0'
description-type: markdown
description: ! "Generic random generators [![Hackage](https://img.shields.io/hackage/v/generic-random.svg)](https://hackage.haskell.org/package/generic-random)
  [![Build Status](https://travis-ci.org/Lysxia/generic-random.svg)](https://travis-ci.org/Lysxia/generic-random)\n=========================\n\nSay
  goodbye to `Constructor <$> arbitrary <*> arbitrary <*> arbitrary`-boilerplate.\n\n```haskell\n
  \   {-# LANGUAGE DeriveGeneric #-}\n\n    import GHC.Generics ( Generic )\n    import
  Test.QuickCheck\n    import Generic.Random.Generic\n\n    data Tree a = Leaf | Node
  (Tree a) a (Tree a)\n      deriving (Show, Generic)\n\n    instance Arbitrary a
  => Arbitrary (Tree a) where\n      arbitrary = genericArbitrary' Z uniform\n\n    --
  Equivalent to\n    -- > arbitrary =\n    -- >   sized $ \\n ->\n    -- >     if
  n == 0 then\n    -- >       return Leaf\n    -- >     else\n    -- >       oneof\n
  \   -- >         [ return Leaf\n    -- >         , Node <$> arbitrary <*> arbitrary
  <*> arbitrary\n    -- >         ]\n\n    main = sample (arbitrary :: Gen (Tree ()))\n```\n\n-
  User-specified distribution of constructors, with a compile-time check that\n  weights
  have been specified for all constructors.\n- A simple (optional) strategy to ensure
  termination: `Test.QuickCheck.Gen`'s\n  size parameter decreases at every recursive
  `genericArbitrary'` call; when it\n  reaches zero, sample directly from a finite
  set of finite values.\n"
license-name: MIT
