changelog-type: ''
hash: 50182e9a8ac712ada04b926240cf85c39b6d5b20ad45cd2d1d810109b916571d
synopsis: A generic version of Data.Maybe
changelog: ''
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.1.0'
- '0.2.0.0'
- '0.2.1.0'
- '0.3.0.0'
- '0.3.0.1'
- '0.3.0.2'
- '0.3.0.3'
- '0.3.0.4'
latest: '0.3.0.4'
description-type: haddock
description: ! 'This module is a drop in replacement for ''Data.Maybe''. It generalizes

  the functions to any types that share the same \"sum of products\" view

  of ''Maybe''.


  To use the module for your type, enable GHC''s DeriveGeneric extension and

  derive a Generic instance for your type.


  > import GHC.Generics

  >

  > data Result a = Success a | Fail

  >    deriving (Show, Generic)


  After which you can use the functions, like your type was ''Data.Maybe.Maybe''


  >> fromMaybe ''a'' Fail

  >''a''


  >> fromMaybe ''a'' $ Success ''b''

  >''b'''
