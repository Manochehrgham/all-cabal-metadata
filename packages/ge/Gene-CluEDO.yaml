homepage: https://github.com/choener/Gene-CluEDO
changelog-type: markdown
hash: 5f1e752c643d7548343e297e36b7c18b7651562d35dccf899b7a793bc3dca99f
test-bench-deps:
  tasty-th: ! '>=0.1'
  base: -any
  Gene-CluEDO: -any
  tasty-quickcheck: ! '>=0.8'
  tasty: ! '>=0.11'
  QuickCheck: -any
  vector: -any
maintainer: choener@bioinf.uni-leipzig.de
synopsis: Hox gene clustering
changelog: ! "0.0.0.1\n-------\n\n- originally named 'HoxCluster' for the earlier
  papers, now renamed to\n  Gene-CluEDO during the work on the expansion of gene clusters
  problem (see\n  README)\n- initial checkin\n- travis-ci integration\n"
basic-deps:
  base: ! '>=4.7 && <5.0'
  ShortestPathProblems: ==0.0.0.*
  ADPfusion: ==0.5.2.*
  text: ! '>=1.0'
  Gene-CluEDO: -any
  PrimitiveArray: ==0.8.0.*
  PrimitiveArray-Pretty: ==0.0.0.*
  filepath: -any
  log-domain: ! '>=0.10'
  containers: -any
  ADPfusionSet: ==0.0.0.*
  FormalGrammars: ==0.3.1.*
  cmdargs: ! '>=0.10'
  vector: ! '>=0.11'
all-versions:
- '0.0.0.1'
author: Christian Hoener zu Siederdissen, 2017
latest: '0.0.0.1'
description-type: markdown
description: ! "[![Build Status](https://travis-ci.org/choener/Gene-CluEDO.svg?branch=master)](https://travis-ci.org/choener/Gene-CluEDO)\n\n[*generalized
  Algebraic Dynamic Programming Homepage*](http://www.bioinf.uni-leipzig.de/Software/gADP/)\n\n#
  Gene-CluEDO: Gene Cluster Evolution Determined Order\n\n1.  Hoener zu Siederdissen,
  Christian and Prohaska, Sonja J. and Stadler, Peter F.  \n    *Dynamic Programming
  for Set Data Types*  \n    2014, Lecture Notes in Bioinformatics, 8826,  \n    preprint:
  http://www.bioinf.uni-leipzig.de/~choener/pdfs/hoe-pro-2014.pdf  \n\n1.  Hoener
  zu Siederdissen, Christian and Prohaska, Sonja J. and Stadler, Peter F.  \n    *Algebraic
  Dynamic Programming over General Data Structures*  \n    2015, BMC Bioinformatics
  \ \n    oa: https://doi.org/10.1186/1471-2105-16-S19-S2  \n\n1.  Prohaska, Sonja
  J. and Berkemer, Sarah and Externbrink, Fabian and Gatter, Thomas  \n    and Retzlaff,
  Nancy and The Students of the Graphs and Biological Networks Lab 2017  \n    and
  H\\\"oner zu Siederdissen, Christian and Stadler, Peter F.  \n    *Expansion of
  Gene Clusters and the Shortest Hamiltonian Path Problem*  \n    2017  \n    preprint:
  http://www.bioinf.uni-leipzig.de/~choener/pdfs/pro-ber-2017.pdf  \n\nThis program
  accepts a matrix with distances between nodes (see below for an\nexample). It then
  proceeds to calculate the Hamiltonian path with the shortest\ndistance between each
  pair of nodes, where the path has to travel from the\nstart, then to all other nodes,
  finally stopping at the last node.\n\nWe further calculate all neighbour probabilities
  via Inside/Outside. This means\nthat for any two nodes we calculate the weight of
  the edge between these two\nnodes. The weight is between ``[0, ... ,1]`` where ``0``
  denotes the the nodes\nare almost surely not direct neighbours on a weighted-randomly
  drawn path,\nwhile ``1`` denotes that they almost surely are.\n\nFinally, we calculate
  the probability that a node is one of the terminal nodes\nin the Hamiltonian path,
  i.e. either the first or the last node.\n\n## The Biological Problem We Solve\n\n[Wikipedia
  on Hox clusters.](https://en.wikipedia.org/wiki/Hox_cluster)\n\nHox clusters are
  a set of genes that are linearly ordered. The genes are\n(assumed) to have a single
  originating gene, and repeated duplication has led\nto the cluster with unknown
  duplication tree.\n\nThe long time scales involved make it hard to produce a tree
  that can be\ntrusted. This program therefore produces summary information in the
  form of\nedge path probabilities.\n\n## Example matrix:\n\nIn this artificial distance
  matrix, we have prime numbers as distances between\nnodes. Store the matrix in a
  file, say ``mat.dat``.\n\n```\n#   A   B   C   D   E\nA   0   2   3   5   7\nB   2
  \  0  11  13  17\nC   3  11   0  19  23\nD   5  13  19   0  27\nE   7  17  23  27
  \  0\n```\n\nNow, run the algorithm ``./GeneCluEDO -o output.run ./mat.dat``. After
  the\nprogram has run, ``output.run`` contains the a wealth of information about
  the\ninput. The maximum likelihood path, the edge weights, end probabilities, and\nmaximum
  expected accuracy path are calculated. Two additional files, here\n``output.boundary.svg``,
  and ``output.edge.svg`` are produced. The boundary\nplot provides graphical output
  of the probability that a node (or gene) is the\nstart or end node. The edge probability
  plot provides probabilities for each\nedge (i,j) between nodes. This shows the most
  likely neighbors, and therefore\ngenetic relationship, over all possible gene orders.\n\n\n\n####
  Contact\n\nChristian Hoener zu Siederdissen  \nLeipzig University, Leipzig, Germany
  \ \nchoener@bioinf.uni-leipzig.de  \nhttp://www.bioinf.uni-leipzig.de/~choener/
  \ \n\n"
license-name: GPL-3
