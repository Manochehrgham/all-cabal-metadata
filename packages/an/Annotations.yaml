homepage: ''
changelog-type: ''
hash: ff585ad5a8ac099e51aeda6503f7a3b30a4254a8575afc09109804ad0ea86230
test-bench-deps:
  Annotations: -any
  base: ! '>=3.0 && <5'
  parsec: ! '>=3.0 && <3.2'
  mtl: ! '>=1.1 && <2.3'
  multirec: ! '>=0.4 && <0.8'
maintainer: martijn@van.steenbergen.nl
synopsis: Constructing, analyzing and destructing annotated trees
changelog: ''
basic-deps:
  base: <5
  parsec: ! '>=3.0 && <3.2'
  mtl: ! '>=1.1 && <2.3'
  multirec: ! '>=0.4 && <0.8'
all-versions:
- '0.1'
- '0.1.1'
- '0.1.2'
- '0.1.3'
- '0.2'
- '0.2.1'
author: Martijn van Steenbergen
latest: '0.2.1'
description-type: haddock
description: ! '@Annotations@ provides utility functions to make working with annotated
  trees easier. There are two implementations: one for working with open datatypes
  that explicitly make their child positions accessible through a type argument, and
  one for working with MultiRec datatypes.


  Parser combinators make it easy to construct trees annotated with position information.
  For the MultiRec implementation, there is the @Yield@ monad that allows construction
  of trees in postorder.


  Error algebras allow destruction of trees using catamorphisms. The algebra is allowed
  to indicate failure in which case the error is automatically coupled with the annotation
  at the position at which the error occurred.'
license-name: BSD3
