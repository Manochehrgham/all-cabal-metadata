changelog-type: text
hash: 6dfdd9f4c959b6a8b5d605d143e0439e42dc685b331e7e60ad5256b5619d3165
test-bench-deps: {}
synopsis: Anonymous sum types
changelog: ! "Version 0.4.0.0\n\n* Added Exception instances (requires major version
  bump)\n\n* Added S0\n\n* Removed Generics instances; including them makes compatibility\n
  \ with GHC 7.4 more difficult.  (requires major version bump)\n\nVersion 0.2.2.0\n\n*
  added S1.  Still debating whether and how to add S0.\n"
basic-deps:
  base: ! '>=4.5.0.0 && <5'
all-versions:
- '0.2.0.0'
- '0.2.2.0'
- '0.4.0.0'
latest: '0.4.0.0'
description-type: markdown
description: ! 'anonymous-sums

  --------------


  Provides anonymous sum types for Haskell.  Kind of like `Either`,

  but for multiple types rather than just two.


  This is boring and tedious but sometimes I find it handy so I

  shuffled it off to this library so I wouldn''t have to reimplement it

  each time.  I''m sure it could be done better with Template Haskell

  or Scrap Your Boilerplate or some such thing...but this works, so

  here it is.


  The module Data.Sums is generated by another program (I generate it

  manually and ship that; it''s not generated at compile time.)  You

  will find the source for that in generate-sums.hs.


  I generated a maximum of 15 types because the Prelude includes

  15-tuples, so that seemed as good a place to stop as any.  In

  practice I have never needed more than four types.


  Github homepage:


  http://www.github.com/massysett/anonymous-sums

'
