homepage: https://github.com/seagreen/hjsonschema
changelog-type: text
hash: 474aa5f88c12a2e2f6c13c36de6eef6a3acc89c62a6b97bc16c019e0bb70d3bf
test-bench-deps:
  warp: -any
  test-framework-hunit: ==0.3.*
  bytestring: -any
  test-framework: ==0.8.*
  base: -any
  text: -any
  filepath: ! '>=1.3 && <1.5'
  async: -any
  HUnit: ! '>=1.2 && <1.4'
  wai-app-static: -any
  aeson: -any
  hjsonschema: -any
  vector: -any
  directory: ==1.2.*
maintainer: ian@housejeffries.com
synopsis: JSON Schema library
changelog: ! "# 0.8\n\n+ Improve scope updating and resolving.\n+ Rename RawSchema's
  _rsObject field to _rsData.\n+ Make RawSchema's _rsURI field a Maybe. This way schemas
  without a starting\nURI can say so explicitly with Nothing instead of with \"\".\n+
  Rename Graph to SchemaGraph. Declare it with data instead of type. Give it a\nfield
  referencing the starting schema. This field is used to find the curent\nschema if
  no URI is in scope and a self-referencing $ref is found (e.g. \"#\").\n+ Change
  the order of the last two arguments to fetchReferencedSchemas.\n\n# 0.7.1\n\n+ Support
  GHC 7.8 again.\n\n# 0.7\n\nChange error type from Text to ValidationFailure.\n\nRevert
  the 0.6 changes to validate. Also switch from Vector\nto list. Validate is now:\n
  \ Schema err -> Value -> [ValidationFailure err]\n\nAdd fetchReferencedSchemas',
  which lets the user provide their\nown MonadIO function to be used when fetching
  schemas. This lets\nthem do things like only fetch schemas from particular domains.\n\n#
  0.6\n\nBreak the API so the library doesn't induce boolean blindness.\n\nChange
  validate\n  was: Schema -> Value -> Vector ValErr\n  now: Schema -> Value -> Either
  (Vector ValErr) Value\n\nChange Schema\n  was: type Schema = Vector Validator\n
  \ now: newtype Schema = Schema { _unSchema :: [Validator] }\n\n# 0.5.3\n\n+ Switch
  from http-conduit to http-client.\n\n# 0.5.2\n\n+ Add convenience function for validating
  and compiling draft 4 schemas\nsimultaneously.\n\n# 0.5.1\n\n+ Switch from wreq
  to http-conduit; drop lens dependency.\n\n# 0.5\n\n+ Start changelog.\n+ Rename
  Utils.hs to Helpers.hs.\n+ Move all non-ValidatorGen functions in Validators.hs
  to Helpers.hs.\n+ Various touchups.\n"
basic-deps:
  http-client: ! '>=0.4.9 && <0.5'
  bytestring: ! '>=0.10 && <0.11'
  base: ! '>=4.7 && <4.9'
  unordered-containers: ==0.2.*
  text: ==1.2.*
  containers: ! '>=0.5 && <0.6'
  regexpr: ! '>=0.5 && <0.6'
  mtl: ! '>=2.2.1 && <2.3'
  hashable: ! '>=1.2 && <1.3'
  file-embed: ! '>=0.0.8 && <0.0.10'
  transformers: ! '>=0.4.2 && <0.5'
  scientific: ! '>=0.3 && <0.4'
  hjsonpointer: ! '>=0.2 && <0.3'
  http-types: ! '>=0.8 && <0.10'
  aeson: ! '>=0.7 && <0.11'
  hjsonschema: -any
  vector: ! '>=0.10 && <0.12'
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.4.0.0'
- '0.5.0.0'
- '0.5.1.0'
- '0.5.1.1'
- '0.5.1.2'
- '0.5.1.3'
- '0.5.2.0'
- '0.5.2.1'
- '0.5.2.2'
- '0.5.3.0'
- '0.5.3.1'
- '0.5.3.2'
- '0.6.0.0'
- '0.6.0.1'
- '0.6.0.2'
- '0.7.0.0'
- '0.7.1.0'
- '0.8.0.0'
author: Ian Grant Jeffries
latest: '0.8.0.0'
description-type: markdown
description: ! '![hjsonschema logo](./logo.jpg)


  A Haskell implementation of the current [JSON Schema](http://json-schema.org/) specification
  (Draft 4).


  [Hackage](https://hackage.haskell.org/package/hjsonschema) / [GitHub](https://github.com/seagreen/hjsonschema)
  / [Travis CI](https://travis-ci.org/seagreen/hjsonschema)


  # Example


  See [Example.hs on GitHub](https://github.com/seagreen/hjsonschema/blob/master/Example.hs).


  # Tests


  ## Install


  `git submodule update --init`


  ## Run


  Will run self-contained:


  `cabal test local`


  Will start an HTTP server temporarily on port 1234:


  `cabal test remote`


  # Details


  ## Goals


  + Be a correct and fast implementation of the spec.


  + Be a useful reference for implementers in other languages. Haskell''s high level
  nature, expressive type system and referential transparency suit this purpose well.


  ## Good Parts


  + Passes all the tests in the [language agnostic test suite](https://github.com/json-schema/JSON-Schema-Test-Suite).


  + Very modular, which should make it easy to support future versions of the specification.


  ## Bad Parts


  + Uses the [regexpr](https://hackage.haskell.org/package/regexpr-0.5.4) regular
  expression library for the "pattern" validator. It should use a library based on
  the ECMA 262 regex dialect, which the [spec](http://json-schema.org/latest/json-schema-validation.html#anchor33)
  requires.


  ## Notes


  + `draft4.json` is from commit # cc8ec81ce0abe2385ebd6c2a6f2d6deb646f874a [here](https://github.com/json-schema/json-schema).


  ## Credits


  [TJ Weigel](http://tjweigel.com/) created the logo.


  [Tim Baumann](https://github.com/timjb) wrote [aeson-schema](https://hackage.haskell.org/package/aeson-schema),
  on which hjsonschema''s test code and its implementation of `SchemaGraph` were based.


  [Julian Berman](https://github.com/Julian) maintains the fantastic [language agnostic
  test suite](https://github.com/json-schema/JSON-Schema-Test-Suite).

'
license-name: MIT
