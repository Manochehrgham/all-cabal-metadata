homepage: https://github.com/seagreen/hjsonschema
changelog-type: text
hash: 68a4b18245cd2c357c72fcbf8de9afde77c995f6f1f130d8413e1c2752075283
test-bench-deps:
  warp: -any
  test-framework-hunit: ==0.3.*
  bytestring: -any
  test-framework: ==0.8.*
  base: -any
  unordered-containers: -any
  text: -any
  filepath: ==1.3.*
  async: -any
  HUnit: ==1.2.*
  wai-app-static: -any
  aeson: -any
  hjsonschema: -any
  vector: -any
  directory: ==1.2.*
maintainer: ian@housejeffries.com
synopsis: JSON Schema library
changelog: ! "# 0.7\n\nChange error type from Text to ValidationFailure.\n\nRevert
  the 0.6 changes to validate. Also switch from Vector\nto list. Validate is now:\n
  \ Schema err -> Value -> [ValidationFailure err]\n\nAdd fetchReferencedSchemas',
  which lets the user provide their\nown MonadIO function to be used when fetching
  schemas. This lets\nthem do things like only fetch schemas from particular domains.\n\n#
  0.6\n\nBreak the API so the library doesn't induce boolean blindness.\n\nChange
  validate\n  was: Schema -> Value -> Vector ValErr\n  now: Schema -> Value -> Either
  (Vector ValErr) Value\n\nChange Schema\n  was: type Schema = Vector Validator\n
  \ now: newtype Schema = Schema { _unSchema :: [Validator] }\n\n# 0.5.3\n\n+ Switch
  from http-conduit to http-client.\n\n# 0.5.2\n\n+ Add convenience function for validating
  and compiling draft 4 schemas\nsimultaneously.\n\n# 0.5.1\n\n+ Switch from wreq
  to http-conduit; drop lens dependency.\n\n# 0.5\n\n+ Start changelog.\n+ Rename
  Utils.hs to Helpers.hs.\n+ Move all non-ValidatorGen functions in Validators.hs
  to Helpers.hs.\n+ Various touchups.\n"
basic-deps:
  http-client: ! '>=0.4.9 && <0.5'
  bytestring: ! '>=0.10 && <0.11'
  base: ! '>=4.6 && <4.9'
  unordered-containers: ==0.2.*
  text: ==1.2.*
  containers: ! '>=0.5 && <0.6'
  regexpr: ! '>=0.5 && <0.6'
  mtl: ! '>=2.2.1 && <2.3'
  hashable: ! '>=1.2 && <1.3'
  file-embed: ! '>=0.0.8 && <0.0.10'
  transformers: ! '>=0.4.2 && <0.5'
  scientific: ! '>=0.3 && <0.4'
  hjsonpointer: ! '>=0.2 && <0.3'
  http-types: ! '>=0.8 && <0.9'
  aeson: ! '>=0.7 && <0.10'
  hjsonschema: -any
  vector: ! '>=0.10 && <0.12'
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.2.0.0'
- '0.3.0.0'
- '0.4.0.0'
- '0.5.0.0'
- '0.5.1.0'
- '0.5.1.1'
- '0.5.1.2'
- '0.5.1.3'
- '0.5.2.0'
- '0.5.2.1'
- '0.5.2.2'
- '0.5.3.0'
- '0.5.3.1'
- '0.5.3.2'
- '0.6.0.0'
- '0.6.0.1'
- '0.6.0.2'
- '0.7.0.0'
author: Ian Grant Jeffries
latest: '0.7.0.0'
description-type: markdown
description: ! "# Intro\n\nAn implementation of [JSON Schema](http://json-schema.org/)
  Draft 4 in haskell.\n\n# Status\n\nStill in development. Lacks solid code to handle
  changing resolution scope.\n\nAlso note that hjsonschema uses the [regexpr](https://hackage.haskell.org/package/regexpr-0.5.4)
  regular expression library for the \"pattern\" validator. This isn't compatible
  with the ECMA 262 regex dialect, which the [spec](http://json-schema.org/latest/json-schema-validation.html#anchor33)
  requires.\n\n# Example\n\nSee [Example.hs](./Example.hs).\n\n# Install Tests\n\n
  \   git submodule update --init\n\n# Notes\n\n+ `draft4.json` is from commit # cc8ec81ce0abe2385ebd6c2a6f2d6deb646f874a
  [here](https://github.com/json-schema/json-schema).\n\n# Credits\n\nThanks to [Julian
  Berman](https://github.com/Julian) for the fantastic test suite.\n\nAlso thanks
  to Tim Baumann for his [aeson-schema](https://hackage.haskell.org/package/aeson-schema)
  library. Hjsonschema's test code and its implementation of `Graph` both originally
  came from there.\n"
license-name: MIT
