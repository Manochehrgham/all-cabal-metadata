homepage: http://taylor.fausak.me/flow/
changelog-type: markdown
hash: 89e6af94c98384ad79949f9df8cb4dcb55e247abbd1cafccdb693e4eb8a648a8
test-bench-deps:
  flow: -any
  base: -any
  criterion: ==1.*
  doctest: ! '>=0.9 && <0.11'
  QuickCheck: ==2.*
  template-haskell: ==2.*
maintainer: Taylor Fausak <taylor@fausak.me>
synopsis: Write more understandable Haskell.
changelog: ! '# Change log


  Flow uses [Semantic Versioning][].


  ## v1.0.2 (2015-10-04)


  -   Updated documentation.


  ## v1.0.1 (2015-06-04)


  -   Updated documentation.

  -   Supported doctest 0.10.


  ## v1.0.0 (2015-04-01)


  -   Initially released.


  ## v0.0.0 (2015-04-01)


  -   Initially created.


  [semantic versioning]: http://semver.org/spec/v2.0.0.html

'
basic-deps:
  base: <5
all-versions:
- '1.0.0'
- '1.0.1'
- '1.0.2'
author: Taylor Fausak <taylor@fausak.me>
latest: '1.0.2'
description-type: markdown
description: ! "# [Flow][]\n\nWrite more understandable Haskell.\n\n[![Version][]](https://hackage.haskell.org/package/flow)\n[![Build][]](https://travis-ci.org/tfausak/flow)\n[![Dependencies][]](http://packdeps.haskellers.com/feed?needle=flow)\n\n---\n\nFlow
  is a package that provides functions and operators for writing more\nunderstandable
  Haskell. It is an alternative to some common idioms like\n[`($)`][] for function
  application and [`(.)`][] for function composition.\n\n-   [Requirements](#requirements)\n-
  \  [Installation](#installation)\n-   [Usage](#usage)\n    -   [Cheat sheet](#cheat-sheet)\n\n##
  Requirements\n\nFlow requires a Haskell compiler. It is tested with recent versions
  of GHC, but\nolder or different compilers should be acceptable. For installation
  with Cabal,\nFlow requires at least Cabal 1.8.\n\n## Installation\n\nTo add Flow
  as a dependency to your package, add it to your Cabal file.\n\n```\nbuild-depends:
  flow ==1.0.*\n```\n\nSee [the change log][] for a detailed list of changes.\n\n##
  Usage\n\nFlow is designed to be imported unqualified. It does not export anything
  that\nconflicts with [the base package][].\n\n``` hs\nimport Flow\n```\n\n### Cheat
  sheet\n\nFlow            | Base\n--------------- | -------------\n`x |> f`        |
  `x & f`\n`f <| x`        | `f $ x`\n`apply x f`     | `f x`\n`f .> g`        | `f
  >>> g`\n`g <. f`        | `g . f`\n`compose f g x` | `g (f x)`\n`x !> f`        |
  -\n`f <! x`        | `f $! x`\n`apply' x f`    | `seq x (f x)`\n\nFor more information
  about Flow, please read [the Haddock documentation][].\n\n[flow]: http://taylor.fausak.me/flow/\n[version]:
  https://img.shields.io/hackage/v/flow.svg?label=version\n[build]: https://img.shields.io/travis/tfausak/flow/master.svg?label=build\n[dependencies]:
  https://img.shields.io/hackage-deps/v/flow.svg?label=dependencies\n[`($)`]: http://hackage.haskell.org/package/base-4.8.0.0/docs/Prelude.html#v:-36-\n[`(.)`]:
  http://hackage.haskell.org/package/base-4.8.0.0/docs/Prelude.html#v:.\n[the change
  log]: CHANGELOG.md\n[the base package]: http://hackage.haskell.org/package/base\n[the
  haddock documentation]: https://hackage.haskell.org/package/flow/docs/Flow.html\n"
license-name: MIT
