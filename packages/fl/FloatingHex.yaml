homepage: ''
changelog-type: markdown
hash: 7d720113d7b04a36d83173262ed9927efa73006af1c1715462e6e484ac4d64af
test-bench-deps: {}
maintainer: erkokl@gmail.com
synopsis: Read and write hexadecimal floating point numbers
changelog: ! "* Hackage: <http://hackage.haskell.org/package/FloatingHex>\n* GitHub:
  \ <http://github.com/LeventErkok/FloatingHex/>\n\n* Latest Hackage released version:
  0.1, 2017-01-14\n\n### Version 0.1, 2017-01-14\n\n  * First implementation. The
  quasiquoter and the pretty-printer are implemented.\n\n  * NB. The pretty-printer
  is currently not 100% compatible with the %a modifier\n    of C printf function.
  While it will print correct values, it will not always\n    print the same string
  as C does. (Note that string representations are not\n    unique for hexadecimal
  floats, similar to the scientific notation.)\n"
basic-deps:
  base: ! '>=4 && <5'
  template-haskell: -any
all-versions:
- '0.1'
author: Levent Erkok
latest: '0.1'
description-type: markdown
description: ! "## FloatingHex: Read/Write Hexadecimal floats\n\n[![Hackage version](http://img.shields.io/hackage/v/FloatingHex.svg?label=Hackage)](http://hackage.haskell.org/package/FloatingHex)\n[![Build
  Status](http://img.shields.io/travis/LeventErkok/FloatingHex.svg?label=Build)](http://travis-ci.org/LeventErkok/FloatingHex)\n\n###
  Hexadecimal Floats\n\nFor syntax reference, see: <http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf>,
  pages 57-58.\nWe slightly diverge from the standard and do not allow for the \"floating-suffix,\"\nas
  the type inference of Haskell makes this unnecessary. Some examples are:\n\n```\n
  \ 0x1p+1\n  0x1p+8\n  0x1.b7p-1\n  0x1.fffffffffffffp+1023\n  0X1.921FB4D12D84AP-1\n```\n\nThis
  format allows for concise and precise string representation for floating point numbers.\n\n##
  Example\n\n```haskell\n{-# LANGUAGE QuasiQuotes #-}\nimport Data.Numbers.FloatingHex\n\n--
  expressions\nf :: Double\nf = [hf|0x1.f44abd5aa7ca4p+25|]\n\n-- patterns\ng :: Float
  -> String\ng [hf|0x1p1|]  = \"two!\"\ng [hf|0x1p-1|] = \"half!\"\ng d            =
  \"something else: \" ++ show d\n\n-- showing hexadecimal floats\ntest = showHFloat
  [hf|0x1.f44abd5aa7ca4p+25|] \"\"\n```\n\n(Note that while the quasiquoter allows
  for floating-point patterns, it is usually not a good idea to have floating-point
  literals used in pattern matching.)\n"
license-name: BSD3
