changelog-type: ''
hash: 6d3a1904408ca5b4445db716674b5a6b77f384788cd05224b3c0113204c63e7c
synopsis: IEEE754r floating point conformance tests
changelog: ''
all-versions:
- '0.2.1.0'
- '0.2.2.0'
latest: '0.2.2.0'
description-type: haddock
description: ! 'A series of floating point conformance tests for Haskell.

  Currently implemented are:

  QTrial, the floating point benchmark described in / IEEE Standard 754 for Binary
  Floating-Point

  Arithmetic / by Prof. W. Kahan <http://www.eecs.berkeley.edu/~wkahan/ieee754status/IEEE754.PDF>

  This can be run with a simple @cabal run qtrial@.

  FPTest runs a sequence of floating point test vectors generated by IBM''s

  <https://www.research.ibm.com/haifa/projects/verification/fpgen/ FPGen Floating-Point
  Test Generator>.

  This is done either by interpreting the tests or by translating the tests

  into a Haskell HUnit test suite script that can just be executed using

  @runhaskell@.

  The IBM test vectors are available from

  <https://www.research.ibm.com/haifa/projects/verification/fpgen/ here>.

  You will, most likely, want the binary tests unless you have a decimal machine.

  Only 32-bit float tests are provided (not 64-bit double ones) although FPTest supports
  Doubles.

  The syntax of the test vectors can be found

  <https://www.research.ibm.com/haifa/projects/verification/fpgen/syntax.txt here>
  or in Chapter 4

  <https://www.research.ibm.com/haifa/projects/verification/fpgen/papers/ieee-test-suite-v2.pdfs

  Floating-Point Test-Suite for IEEE here>'
