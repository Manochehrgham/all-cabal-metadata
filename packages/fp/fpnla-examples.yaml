changelog-type: ''
hash: bbf6c303fe4120d0e7e57c893b6318127c23344d072c23359da26525ddbb0bae
synopsis: Example implementations for FPNLA library
changelog: ''
all-versions:
- '0.1'
- '0.1.1'
latest: '0.1.1'
description-type: haddock
description: ! '

  This package provides many example implementations of the operations defined in
  package @fpnla@ (<http://hackage.haskell.org/package/fpnla>) using various data
  structures and algorithms.


  IMPORTANT: Many algorithms are only partially implemented


  The structures currently used are:


  - @hmatrix@ <http://hackage.haskell.org/package/hmatrix>


  - @vector@ <http://hackage.haskell.org/package/vector>


  - @array@ <http://hackage.haskell.org/package/array>


  - @repa arrays@ <http://hackage.haskell.org/package/repa>


  - @accelerate arrays@ <http://hackage.haskell.org/package/accelerate>


  - @array@ <http://hackage.haskell.org/package/array>


  - Haskell lists <http://hackage.haskell.org/package/base-4.6.0.1/docs/Data-List.html>


  Operations are parallelized using the @parallel@ framework (<http://hackage.haskell.org/package/parallel>),
  @Monad-Par@ (<http://hackage.haskell.org/package/monad-par>), @Repa@ (<http://hackage.haskell.org/package/repa>)
  and @Accelerate@ (<http://hackage.haskell.org/package/accelerate>).


  Details about the package may be found in the paper: Towards a functional run-time
  for dense NLA domain. In Proceedings of the 2Nd ACM SIGPLAN Workshop on

  Functional High-performance Computing. New York, NY, USA. ACM, pages 85-96 (<http://www.fing.edu.uy/~mviera/papers/fhpc13.pdf>).

'
