homepage: https://github.com/xenog/json-rpc
changelog-type: ''
hash: f7af9769f0fae2847ecd4ae834cc799e52799d8b457e7c757a34750bda33b22b
test-bench-deps:
  bytestring: ! '>=0.10 && <0.11'
  test-framework: ! '>=0.8 && <0.9'
  stm: ! '>=2.4 && <2.5'
  base: ! '>=4.6 && <5'
  unordered-containers: ! '>=0.2 && <0.3'
  text: ! '>=0.11 && <1.3'
  test-framework-quickcheck2: ! '>=0.3 && <0.4'
  conduit: ! '>=1.2 && <1.3'
  stm-conduit: ! '>=2.5 && <2.7'
  json-rpc: -any
  mtl: ! '>=2.1 && <2.3'
  lifted-async: ! '>=0.7 && <0.8'
  monad-logger: ! '>=0.3 && <0.4'
  transformers: ! '>=0.3'
  QuickCheck: ! '>=2.6 && <2.9'
  aeson: ! '>=0.7 && <0.10'
maintainer: root@haskoin.com
synopsis: Fully-featured JSON-RPC 2.0 library
changelog: ''
basic-deps:
  bytestring: ! '>=0.10 && <0.11'
  stm: ! '>=2.4 && <2.5'
  base: ! '>=4.6 && <5'
  unordered-containers: ! '>=0.2 && <0.3'
  text: ! '>=0.11 && <1.3'
  monad-control: ! '>=0.3 && <1.1'
  conduit: ! '>=1.2 && <1.3'
  stm-conduit: ! '>=2.5 && <2.7'
  conduit-extra: ! '>=1.1 && <1.2'
  mtl: ! '>=2.1 && <2.3'
  lifted-async: ! '>=0.7 && <0.8'
  hashable: ! '>=1.1 && <1.3'
  monad-logger: ! '>=0.3 && <0.4'
  attoparsec: ! '>=0.11'
  transformers: ! '>=0.3'
  deepseq: ! '>=1.3 && <1.5'
  QuickCheck: ! '>=2.6 && <2.9'
  aeson: ! '>=0.7 && <0.10'
  vector: ! '>=0.10 && <0.11'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.5'
- '0.2.0.0'
- '0.2.0.1'
- '0.2.0.2'
- '0.2.1.0'
- '0.2.1.1'
- '0.2.1.2'
- '0.2.1.4'
- '0.2.1.5'
- '0.2.1.6'
- '0.3.0.0'
- '0.3.0.1'
- '0.3.0.2'
- '0.4.0.0'
- '0.5.0.0'
- '0.6.0.0'
- '0.6.1.0'
- '0.6.2.0'
- '0.6.2.1'
- '0.7.0.0'
- '0.7.0.1'
author: Jean-Pierre Rupp
latest: '0.7.0.1'
description-type: markdown
description: ! 'json-rpc

  ========


  Fully-featured JSON-RPC 2.0 library for Haskell programs.


  This JSON-RPC library is fully-compatible with JSON-RPC 2.0 and 1.0. It

  provides an interface that combines a JSON-RPC client and server. It can

  set and keep track of request ids to parse responses.  There is support

  for sending and receiving notifications. You may use any underlying

  transport.  Basic TCP client and server provided.


  A JSON-RPC application using this interface is considered to be

  peer-to-peer, as it can send and receive all types of JSON-RPC message

  independent of whether it originated the connection.


  [Documentation](http://hackage.haskell.org/package/json-rpc)


  [Examples](http://github.com/xenog/json-rpc/examples)

'
license-name: PublicDomain
