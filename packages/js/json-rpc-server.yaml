changelog-type: ''
hash: 5fdf393483386ac6214b504cdd6fc44f0974fd4f76a265d17f79864be29bac6f
test-bench-deps:
  json-rpc-server: -any
  test-framework-hunit: ! '>=0.3 && <0.4'
  bytestring: ! '>=0.9 && <0.11'
  test-framework: ! '>=0.7 && <0.9'
  base: ! '>=4.3 && <4.9'
  unordered-containers: ! '>=0.1 && <0.3'
  text: ! '>=0.11 && <1.3'
  HUnit: ! '>=1.2 && <1.3'
  mtl: ! '>=1.1.1 && <2.3'
  aeson: ! '>=0.6 && <0.9'
  vector: ! '>=0.7.1 && <0.11'
synopsis: JSON-RPC 2.0 on the server side.
changelog: ''
basic-deps:
  json-rpc-server: -any
  bytestring: ! '>=0.9 && <0.11'
  base: ! '>=4.3 && <4.9'
  unordered-containers: ! '>=0.1 && <0.3'
  text: ! '>=0.11 && <1.3'
  mtl: ! '>=1.1.1 && <2.3'
  deepseq: ! '>=1.1 && <1.5'
  aeson: ! '>=0.6 && <0.9'
  vector: ! '>=0.7.1 && <0.11'
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.1.2.0'
- '0.1.3.0'
- '0.1.4.0'
- '0.1.5.0'
latest: '0.1.5.0'
description-type: markdown
description: ! 'json-rpc-server

  ===============

  [![Hackage](https://img.shields.io/hackage/v/json-rpc-server.svg?style=flat)](https://hackage.haskell.org/package/json-rpc-server)
  [![Build Status](https://travis-ci.org/grayjay/json-rpc-server.svg?branch=master)](https://travis-ci.org/grayjay/json-rpc-server)


  An implementation of the server side of JSON-RPC 2.0. See <http://www.jsonrpc.org/specification>.  json-rpc-server
  uses ByteString for input and output, leaving the choice of transport up to the
  user.  It can be used with [json-rpc-client](http://hackage.haskell.org/package/json-rpc-client)
  to create a client and server that communicate with the same methods.'
