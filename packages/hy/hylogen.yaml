homepage: https://hylogen.com
changelog-type: ''
hash: 4ebacdb7b87b346dcda060127bcc1cd4918e97ff64257048625f15e66e68e641
test-bench-deps: {}
maintainer: freshdried@gmail.com
synopsis: an EDSL for live-coding fragment shaders
changelog: ''
basic-deps:
  warp: ! '>=3.2 && <3.3'
  bytestring: -any
  wai: ! '>=3.2 && <3.3'
  base: ==4.8.*
  text: -any
  vector-space: -any
  filepath: -any
  process: -any
  websockets: -any
  fsnotify: -any
  http-types: ! '>=0.9 && <0.10'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.5'
- '0.1.0.6'
- '0.1.0.8'
- '0.1.0.10'
author: Sean Lee
latest: '0.1.0.10'
description-type: markdown
description: ! "# [*H Y L O G E N*](https://hylogen.com)\n\nHylogen is a language
  [embedded in Haskell](https://wiki.haskell.org/Embedded_domain_specific_language)
  for live-coding fragment shaders.\n\n## Setup\n```\ncabal update\ncabal install
  hylogen\n```\n\n## Usage\n\n```haskell\n-- ./Main.hs\nmodule Main where\nimport
  Hylogen\n\ncolor = vec4 (a, a, a, 1)\n  where\n    a = cos(X uvN * sin(time/ 10)
  * 10 + X mouse)\n      + sin(Y uvN * sin(time / 10) * 10 + Y mouse)\n\nmain = putStrLn
  $ toGLSL $ color\n```\n\n#### 1. run hylogen server\n\n```\nhylogen Main.hs\n```\n\n####
  2. play!\nVisit [localhost:5678](http://localhost:5678) in your browser.\n\nChanges
  in `Main.hs` will now be propagated in realtime to your WebGL rendering context!\n\n##
  inspiration\n- [The_Force](https://github.com/shawnlawson/The_Force)\n\n## resources\n[hackage](https://hackage.haskell.org/package/hylogen)\n\n[examples](https://github.com/sleexyz/hylogen-yay)\n"
license-name: MIT
