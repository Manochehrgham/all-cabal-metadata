homepage: https://hylogen.com
changelog-type: ''
hash: 7eb5693b173e988a8bbcffe2b08b9e755cce63b868a9c0123a7111bf031ead15
test-bench-deps: {}
maintainer: freshdried@gmail.com
synopsis: an EDSL for live-coding fragment shaders
changelog: ''
basic-deps:
  warp: ! '>=3.2 && <3.3'
  data-reify: -any
  bytestring: -any
  wai: ! '>=3.2 && <3.3'
  base: ==4.8.*
  text: -any
  vector-space: -any
  filepath: -any
  process: -any
  websockets: -any
  fsnotify: -any
  http-types: ! '>=0.9 && <0.10'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.5'
- '0.1.0.6'
- '0.1.0.8'
- '0.1.0.10'
- '0.1.0.11'
- '0.1.0.12'
- '0.1.1.0'
author: Sean Lee
latest: '0.1.1.0'
description-type: markdown
description: ! "# [*H Y L O G E N*](https://hylogen.com)\n\nHylogen is a purely functional
  language [embedded in Haskell](https://wiki.haskell.org/Embedded_domain_specific_language)
  for live-coding fragment shaders, featuring:\n\n- a simple and pure syntax\n- standard
  operators (`+`, `*`, [`*^`,  `<.>`](https://hackage.haskell.org/package/vector-space))\n-
  compat. w/ your fav haskell goodies (higher-order functions, ADTS, swanky polymorphism).\n\n<br/>\n\nIt
  comes with `hyde`, an accompanying rendering environment featuring:\n- *hot-reloading*\n-
  audio-reactive primitives\n- texture backbuffering\n\n<br/>\n\n\n## Install\n```\ncabal
  update\ncabal install hylogen\n```\n\nThis will install the hylogen package and
  `hyde`, the rendering environment.\n\n<br/>\n\n## Usage\n\n```haskell\n-- ./Main.hs\nmodule
  Main where\nimport Hylogen.WithHyde\n\ncolor = vec4 (a, a, a, 1)\n  where\n    a
  = cos(X uvN * sin(time/ 10) * 10 + X mouse)\n      + sin(Y uvN * sin(time / 10)
  * 10 + Y mouse)\n\nmain = putStrLn . toGLSL $ color\n```\n\n#### 1. run hyde...\n\n```\nhyde
  Main.hs\n```\n\n#### 2. ... live-code!\nGo to [localhost:5678](http://localhost:5678)
  in your browser.\n\nYou will now see your changes to `Main.hs` propagate to your
  WebGL rendering environment!\n\n<br/>\n\n## References\n- [The_Force](https://github.com/shawnlawson/The_Force)
  by Shawn Lawson. Live-coding audio-reactive shaders!\n- [Type-Safe Observable Sharing](https://pdfs.semanticscholar.org/4838/bd0a91b3058b467fa31ad9e0810121b46388.pdf)
  by Andy Gill. [`data-reify`](https://hackage.haskell.org/package/data-reify) made
  compile times combinatorially faster!\n\n## Resources\n- [hackage](https://hackage.haskell.org/package/hylogen)\n\n-
  [examples](https://github.com/sleexyz/hylogen-yay)\n"
license-name: MIT
