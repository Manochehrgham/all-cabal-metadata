changelog-type: ''
hash: 6e6d984e9a189b64bbb0e1fd58381110144525ed7dce2579f499a6e2d06e5eff
synopsis: like eruby, ehaskell is embedded haskell.
changelog: ''
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- '0.6'
- '0.7'
latest: '0.7'
description-type: haddock
description: ! 'You can embed haskell in Text file.

  You can use in html, haskell source, and so on.


  > <%%   ... %%> : <%% import Some.Module %%> <%% h = "hello" %%>

  > <%    ...  %> : <% ln <- getLine %>

  > <%    ... -%> ... <%- ... -%> ... <%- ... %>: <% if b then -%>Yes<%- else -%>No<%-%>

  > <%=   ...  %> : <%= "hello" %>

  > <%==  ...  %> : <%== getLine %>

  > <%=$  ...  %> : <%=$ 123 %>

  > <%==$ ...  %> : <%==$ getClockTime %>


  You can put code at top level by \<%% ... %%\>.


  You can put code in do-notation by \<% ... %\>.


  You can get args by \<% ... -%\> ... \<%- ... -%\> ... \<%- ... %\>.


  If you write \<% func -%\>abc\<%- def -%\>ghi\<% jkl %\>mno\<%- pqr %\>,


  translate in "func (putStr "abc") def (putStr "ghi") jkl (putStr "mno") pqr"

  and execute.


  You can put dinamic String by \<%== .. %\>.


  And rests (\<%= ... %\>, \<%==$ ... %\>, \<%=$ ... %\>) are just syntax sugar.


  \<%= some %\>   == \<%== return some %\>


  \<%==$ some %\> == \<%== some \>\>= return . show %\>


  \<%=$ some %\>  == \<%== return $ show some %\>'
