changelog-type: ''
hash: e759dae2fc42a24c8667f10689c58db03eac2e5999e7e39f48d8681da0c964bf
synopsis: Haskell compiler that produce binary through C language
changelog: ''
all-versions:
- '0.8.0.1'
- '0.8.0.3'
- '0.8.0.4'
- '0.8.0.5'
- '0.8.0.6'
- '0.8.0.7'
- '0.8.0.8'
- '0.8.0.9'
- '0.8.0.10'
latest: '0.8.0.10'
description-type: haddock
description: ! 'Ajhc is a fork of jhc.

  The jhc is a haskell compiler which aims to produce the most efficient

  programs possible via whole program analysis and other optimizations.


  The jhc is very minimalist in that it does not have a precompiled run time

  system, but rather generates what is needed as part of the compilation

  process. However, back ends do have specific run-time representations of

  data, which can be affected by things like the choice of garbage collector.


  Perhaps you can get internal overview with following compile flow image:



  <<https://raw.github.com/ajhc/ajhc/arafura/docs/jhc_compile_flow.png>>'
