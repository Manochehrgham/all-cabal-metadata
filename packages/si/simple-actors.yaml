changelog-type: ''
hash: 6265ace7082fcd69d7f80a3e4fef62bec476ac888a329d4d4754d9633b184d6e
synopsis: ! 'A library for more structured concurrent programming, based

  on the Actor Model'
changelog: ''
all-versions:
- '0.0.1'
- '0.1.0'
- '0.2.0'
- '0.2.1'
- '0.3.0'
- '0.4.0'
latest: '0.4.0'
description-type: haddock
description: ! 'simple-actors is an EDSL-style library for writing

  more structured concurrent programs, based on the Actor

  Model. Computations are structured as "Behaviors" which take a

  single input value, perform some ''Action''s, and return the

  Behavior to process the next input message it receives.


  We also extend the strict actor model in various elegant ways.

  See source for this type of discussion.


  /CHANGES/: 0.3.0 - 0.4


  - extend ''Control.Concurrent.Actors.spawn'' to transparently support "joined

  mailboxes", i.e. join-patterns, supporting synchronization between actors.

  ''Control.Concurrent.Actors.spawn'' becomes polymorphic in new ''Control.Concurrent.Actors.Sources''
  class


  - old @spawn_@ subsumed by polymorphic @spawn@, with @()@


  - @send@ and other send-like functions restricted to Mailboxes, use ''out'' to convert
  arbitrary chans to Mailboxes


  - productMb, faninMb, and fanoutMb renamed ''Control.Concurrent.Actors.contraProduct'',
  ''Control.Concurrent.Actors.contraFanin'', and ''Control.Concurrent.Actors.contraFanout'',
  and given more general types


  - old @spawnReading@ removed

'
