changelog-type: markdown
hash: 9718a6019a94798c19d95488ea71f29c9c4422d34dc2efc643f47f8981d9af5b
test-bench-deps:
  base: -any
  generic-deriving: -any
  filepath: -any
  doctest: ! '>=0.9.1'
  semigroups: ! '>=0.9'
  simple-reflect: ! '>=0.3.1'
  directory: ! '>=1.0'
synopsis: Compensated floating-point arithmetic
changelog: ! '0.6

  ---

  * Updated for `lens` 4.

  * Bug fix in `(/=)`


  0.4.1

  -----

  * Marked this package `Trustworthy`.


  0.4

  ---

  * Added `NFData` and `Serial` instances


  0.3

  ---

  * Major version bump due to large semantics change in `log-domain`.


  0.2.0.1

  -------

  * Wider `generic-deriving` version bounds for GHC HEAD compatibility.


  0.2

  ---

  * Added a `Hashable` instance.


  0.1.1.1

  -------

  * Wider `binary` version bounds.


  0.1.1

  -----

  * Fixed a bug in the `Setup.lhs` `postHaddock` hook.

  * Reformatted haddocks


  0.1

  ---

  * Split from [analytics](https://github.com/analytics/analytics)

'
basic-deps:
  semigroupoids: ! '>=4 && <5'
  cereal: ! '>=0.3.5 && <0.5'
  base: ! '>=4.3 && <5'
  comonad: ! '>=4 && <5'
  distributive: ! '>=0.3 && <1'
  generic-deriving: ! '>=1.4 && <1.7'
  semigroups: ! '>=0.8.4 && <1'
  log-domain: ! '>=0.9 && <1'
  lens: ! '>=4 && <5'
  safecopy: ! '>=0.8.1 && <0.9'
  bifunctors: ! '>=4 && <5'
  binary: ! '>=0.5 && <0.8'
  hashable: ! '>=1.1.2.3 && <1.3'
  deepseq: ! '>=1.3 && <1.4'
  vector: ! '>=0.9 && <0.11'
  bytes: ! '>=0.7 && <1'
all-versions:
- '0.1'
- '0.1.1'
- '0.1.1.1'
- '0.2'
- '0.2.0.1'
- '0.3'
- '0.4.1'
- '0.5'
- '0.6'
- '0.6.1'
latest: '0.6.1'
description-type: markdown
description: ! 'compensated

  ===========


  [![Build Status](https://secure.travis-ci.org/analytics/compensated.png)](http://travis-ci.org/analytics/compensated)


  This package provides a form of compensated arithmetic that lets you perform many
  operations on chains of doubles at higher precision.


  In particular addition, multiplication, etc. on a `Compensated Double` is done with
  twice as many bits of `significand` as on a raw `Double`.


  This construction is designed so that it can be iterated.


  This was forked from the [analytics](http://github.com/analytics/analytics.git)
  repository after repeated requests.


  Work still needs to be done to properly support most `Floating` operations, but
  everything below that level of the numeric hierarchy should work.


  Contact Information

  -------------------


  Contributions and bug reports are welcome!


  Please feel free to contact me through github or on the #haskell IRC channel on
  irc.freenode.net.


  -Edward Kmett

'
