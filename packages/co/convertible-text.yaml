changelog-type: ''
hash: a756470f4fdd72c2ce6724b853e9d46d3d4e44156ae1f942716917376950024a
synopsis: Typeclasses and instances for converting between types (deprecated)
changelog: ''
all-versions:
- '0.0.0'
- '0.2.0'
- '0.2.0.1'
- '0.2.0.2'
- '0.2.0.3'
- '0.2.0.4'
- '0.2.0.5'
- '0.3.0'
- '0.3.0.1'
- '0.3.0.2'
- '0.3.0.3'
- '0.3.0.4'
- '0.3.0.5'
- '0.3.0.6'
- '0.3.0.7'
- '0.3.0.8'
- '0.3.0.9'
- '0.3.0.10'
- '0.4.0'
- '0.4.0.1'
- '0.4.0.2'
latest: '0.4.0.2'
description-type: haddock
description: ! 'This is a port of John Goerzen''s convertible package, intended to
  distinguish between conversions which are guaranteed to succeed and those which
  might fail.  It uses the attempt package, which in turn uses the failure package,
  so that this package is fully compatible with the failure framework.


  This package currently contains all of the typeclasses and instances for convertible.  However,
  as these features are ported to the convertible package, this package will be left
  with only the instances for converting to and from text types (String, ByteString
  (lazy and strict) and Text (lazy and strict).


  Be aware that conversions to and from bytestrings assume UTF-8 encoding. If a different
  encoding is desired, you can use a newtype wrapper and declare an instance of @ConvertAttempt@
  or @ConvertSuccess@ on it.


  The main module to import is "Data.Convertible.Text".'
