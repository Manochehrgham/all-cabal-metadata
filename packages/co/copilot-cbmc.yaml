homepage: ''
changelog-type: ''
hash: bb9541bd38a140ea65d55fe740c4a01a5105fbd5d4889e81d771609b1524a455
test-bench-deps: {}
maintainer: leepike@galois.com
synopsis: Copilot interface to a C model-checker.
changelog: ''
basic-deps:
  bytestring: ! '>=0.9'
  base: ! '>=4.0 && <5.0'
  process: ! '>=1.0'
  copilot-c99: ! '>=0.2.4'
  copilot-core: ! '>=0.2.4'
  copilot-sbv: ! '>=0.6'
  pretty: ! '>=1.0.1'
  directory: ! '>=1.1'
all-versions:
- '0.1'
- '0.2'
- '0.11'
- '0.22'
- '0.23'
- '2.1.1'
- '2.1.2'
author: ! 'Lee Pike

  , Sebastian Niller

  , Nis Nordby Wegmann'
latest: '2.1.2'
description-type: markdown
description: ! "Overview\n========\n[copilot-cbmc](http://hackage.haskell.org/package/copilot-cbmc)
  A tool to\ngenerate a driver using CBMC, a third-party tool (see Dependencies below)
  that\nproves that the code generated by different C back-ends is equivalent.\nCurrently,
  this includes the C99 back-end and the SBV back-end.\n\nCopilot is a stream (i.e.,
  infinite lists) domain-specific language (DSL) in\nHaskell that compiles into embedded
  C.  Copilot is similar in spirit to\nlanguages like Lustre.  Copilot contains an
  interpreter, multiple back-end\ncompilers, and other verification tools.\n\nExamples\n=========\nPlease
  see the files under the Examples directory in the\n[Copilot](http://hackage.haskell.org/package/copilot)
  for a number of examples\nshowing the syntax, use of libraries, and use of the interpreter
  and back-ends.\nThe examples is the best way to start.\n\nInstallation\n============\nThe
  Copilot library is cabalized. Assuming you have cabal and the GHC compiler\ninstalled
  (the [Haskell Platform](http://hackage.haskell.org/platform/) is the\neasiest way
  to obtain these), it should merely be a matter of running \n     \n         cabal
  install copilot-cbmc\n\nHowever, we strongly recommend you install Copilot, which
  installs copilot-c99\nand other packages automatically.  Execute\n\n         cabal
  install copilot\n\nDependencies\n=============\ncopilot-cbmc depends on the C model-checker,
  CBMC.\n[CBMC](http://www.cprover.org/cbmc/) is a bounded model-checker for C code.
  \ We\nuse CBMC to prove that two back-ends generating C generate semantically\nequivalent
  C, to help detect bugs in C back-ends.\n\nResources\n=========\n[copilot-cbmc](http://hackage.haskell.org/package/copilot-cbmc)
  is available on\nHackage.\n\n**Sources** for each package are available on Github
  as well.  Just go to\n[Github](github.com) and search for the package of interest.
  \ Feel free to fork!\n\nCopyright, License\n==================\nCopilot is distributed
  with the BSD3 license. The license file contains the\n[BSD3](http://en.wikipedia.org/wiki/BSD_licenses)
  verbiage.\n\nThanks\n======\nWe are grateful for NASA Contract NNL08AD13T to [Galois,\nInc](http://corp.galois.com/)
  and the [National Institute of\nAerospace](http://www.nianet.org/), which partially
  supported this work.\n"
license-name: BSD3
