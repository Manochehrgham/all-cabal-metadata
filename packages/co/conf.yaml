changelog-type: ''
hash: 1e8cd65e6317156519ee1de1432da21bfa0f5c22f6e1245d6e65bfa78bc9965a
synopsis: Parser for Haskell-based configuration files.
changelog: ''
all-versions:
- '0.1.0.0'
latest: '0.1.0.0'
description-type: haddock
description: ! 'This package is designed to allow you to create configuration files

  with declarative Haskell and parse the values back into Haskell code.

  The benefit here is to have a configuration file in Haskell that does

  not have to be recompiled - it is interpreted/parsed at runtime in a

  type-safe manner.


  Example usage:


  > -- /path/to/my-config.hs

  > foo = ["bar", "baz"]

  > spam = Eggs

  >

  > -- Application source

  > import Data.Conf

  > import Data.Maybe

  >

  > data Spam = Eggs | Parrot | SomethingEntirelyDifferent

  >     deriving (Show, Read)

  >

  > getSpam :: Conf -> Spam

  > getSpam = fromMaybe SomethingEntirelyDifferent . getConf "spam"

  >

  > getFoo :: Conf -> Maybe Foo

  > getFoo = getConf "foo"

  >

  > main = do

  >     conf <- readConf "my-config.hs"

  >     let spam = getSpam conf

  >     print spam

  >     let foo = getFoo conf

  >     print foo'
