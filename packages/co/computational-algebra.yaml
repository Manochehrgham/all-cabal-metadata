homepage: https://github.com/konn/computational-algebra
changelog-type: ''
hash: a3a471f92d02e4ecd7eeead2203e84b5f8c15c2efc78172f05fcad8f09fff797
test-bench-deps:
  test-framework-hunit: ! '>=0.3.0.2 && <0.4'
  reflection: ! '>=2.1.2 && <2.2'
  test-framework: ! '>=0.8.1.1 && <0.9'
  MonadRandom: ! '>=0.1 && <0.5'
  base: ! '>=4 && <4.10'
  hspec: ! '>=2.2.4 && <2.3'
  text: ! '>=1.2.2.1 && <1.3'
  equational-reasoning: ! '>=0.2 && <0.5'
  computational-algebra: ! '>=0.4.0.0 && <0.5'
  criterion: ! '>=0.8.1.0 && <1.2'
  process: ! '>=1.1 && <1.5'
  matrix: ! '>=0.3.5.0 && <0.4'
  constraints: ! '>=0.3 && <0.9'
  HUnit: ! '>=1.3.1.2 && <1.4'
  smallcheck: ! '>=1.1.1 && <1.2'
  sized: ! '>=0.2.1.0 && <0.3'
  monomorphic: ! '>=0.0.3 && <0.1'
  tagged: ! '>=0.8.5 && <0.9'
  containers: ==0.5.*
  singletons: ==2.2.*
  type-natural: ! '>=0.7.1.2 && <0.8'
  lens: ==4.14.*
  quickcheck-instances: ! '>=0.3.12 && <0.4'
  lazysmallcheck: ==0.6.*
  convertible: ! '>=1.1.1.0 && <1.2'
  transformers: ! '>=0.3 && <0.6'
  random: ! '>=1.0 && <1.2'
  parallel: ==3.2.*
  deepseq: ! '>=1.3 && <1.5'
  QuickCheck: ! '>=2.6 && <2.9'
  algebra: ==4.3.*
  vector: ! '>=0.10 && <0.12'
maintainer: konn.jinro_at_gmail.com
synopsis: Well-kinded computational algebra library, currently supporting Groebner
  basis.
changelog: ''
basic-deps:
  heaps: ==0.3.*
  reflection: ! '>=2.1.2 && <2.2'
  control-monad-loop: ==0.1.*
  MonadRandom: ! '>=0.1 && <0.5'
  unamb: ==0.2.*
  base: ! '>=4.9.0.0 && <4.10'
  unordered-containers: ==0.2.*
  text: ! '>=0.11 && <1.3'
  primes: ! '>=0.2.1 && <0.3'
  equational-reasoning: ! '>=0.4.1.1 && <0.5'
  computational-algebra: ! '>=0.4.0.0 && <0.5'
  monad-loops: ==0.4.*
  entropy: ! '>=0.3.7 && <0.4'
  criterion: ! '>=0.8.1.0 && <1.2'
  matrix: ==0.3.*
  algebraic-prelude: ! '>=0.1.0.1 && <0.2'
  constraints: ! '>=0.3 && <0.9'
  dlist: ! '>=0.8.0.2 && <0.9'
  semigroups: ! '>=0.15.2 && <0.19'
  sized: ! '>=0.2.1.0 && <0.3'
  monomorphic: ! '>=0.0.3 && <0.1'
  tagged: ! '>=0.7 && <0.9'
  containers: ==0.5.*
  singletons: ==2.2.*
  type-natural: ! '>=0.7.1.2 && <0.8'
  lens: ! '>=4.13 && <4.15'
  arithmoi: ! '>=0.4.3.0 && <0.5'
  mtl: ! '>=2.1 && <2.3'
  convertible: ==1.1.*
  hashable: ! '>=1.1 && <1.3'
  random: ! '>=1.0 && <1.2'
  parallel: ==3.2.*
  deepseq: ! '>=1.4.2.0 && <1.5'
  hybrid-vectors: ! '>=0.1 && <0.3'
  hmatrix: ! '>=0.17.0.2 && <0.18'
  algebra: ==4.3.*
  template-haskell: ! '>=2.11.0.0 && <2.12'
  mono-traversable: ! '>=0.10 && <1.1'
  vector: ! '>=0.10 && <0.12'
all-versions:
- '0.0.1.0'
- '0.0.1.1'
- '0.0.2.0'
- '0.0.3.0'
- '0.0.3.1'
- '0.0.3.2'
- '0.1.0.0'
- '0.1.0.1'
- '0.1.1.0'
- '0.1.2.0'
- '0.1.3.0'
- '0.1.3.1'
- '0.1.3.5'
- '0.1.3.6'
- '0.2.0.0'
- '0.3.0.0'
- '0.4.0.0'
author: Hiromi ISHII
latest: '0.4.0.0'
description-type: markdown
description: ! "Computational Algebra Library\n==============================\n[![Build
  Status](https://travis-ci.org/konn/computational-algebra.png?branch=master)](https://travis-ci.org/konn/computational-algebra)\n\n**For
  more detail, please read [Official Project Site](http://konn.github.io/computational-algebra/)**.\n\nOverview\n--------\nThe
  `computational-algebra` is the computational algebra system, implemented as a Embedded
  Domain Specific Language (*EDSL*) in [Haskell](https://www.haskell.org).\nThis library
  provides many functionality for computational algebra, especially ideal computation
  such as Groebner basis calculation.\n\nThanks to Haskell's powerful language features,
  this library achieves the following goals:\n\nType-Safety\n:   Haskell's static
  type system enforces **static correctness** and prevents you from violating invariants.
  \n\nFlexibility\n:   With the powerful type-system of Haskell,\n    we can write
  **highly abstract program** resulted in **easy-to-extend** system.\n\nEfficiency\n:
  \  Haskell comes with many **aggressive optimization mechanism** and **parallel
  computation features**,\n    which enables us to write efficient program.\n\nThis
  package currently provides the following functionalities:\n\n* Groebner basis calculation
  w.r.t. arbitrary monomial ordering\n    * Currently using Buchberger's algorithm
  with some optimization\n    * Faugere's F_4 algorithms is experimentally implemented,\n\t
  \ but currently not as fast as Buchberger's algorithm \n* Computation in the (multivariate)
  polynomial ring over arbitarary field and its quotient ring\n    * Ideal membership
  problem\n    * Ideal operations such as intersection, saturation and so on.\n    *
  Zero-dimensional ideal operation and conversion via FGLM algorithm\n    * Variable
  elimination\n* Find numeric solutions for polynomial system with real coefficient\n\nRequirements
  and Installation\n------------------------------\nOld version of this package is
  uploaded on [Hackage](http://hackage.haskell.org/package/computational-algebra),
  but it's rather outdated.\nMost recent version of `computational-algebra` is developed
  on GitHub.\n\nIt uses the most agressive language features recently implemented
  in [Glasgow Haskell Compiler](https://www.haskell.org/ghc/), so it requires at least
  GHC 8.0.1 and\nalso it depends on many packages currently not available on Hackage,
  but you can install it fairly easily with help of [The Haskell Tool Stack](https://docs.haskellstack.org/en/stable/README/).\n\n```zsh\n$
  curl -sSL https://get.haskellstack.org/ | sh\n  # if you haven't install Stack yet\n$
  git clone https://github.com/konn/computational-algebra\n$ cd computational-algebra\n$
  stack build\n```\n\nIn addition, you may need to install GSL and LAPACK (for matrix
  computation) beforehand.\nYou can install them via Homebrew (OS X), `apt-get`, or
  other major package management systems.\n\n### [Read More in Official Project Site](http://konn.github.io/computational-algebra/)\n"
license-name: BSD3
