homepage: https://github.com/konn/computational-algebra
changelog-type: ''
hash: 0eeaf0664676297791042a071ea18d1c0294c6fad42fecf6892601368a070dbc
test-bench-deps: {}
maintainer: konn.jinro_at_gmail.com
synopsis: Well-kinded computational algebra library, currently supporting Groebner
  basis.
changelog: ''
basic-deps:
  peggy: ==0.3.*
  heaps: ==0.2.*
  base: ! '>=2.0 && <5'
  sized-vector: ==0.0.*
  equational-reasoning: ==0.0.*
  monad-loops: ! '>=0.3 && <0.5'
  monomorphic: ==0.0.*
  tagged: ! '>=0.4 && <1'
  containers: ! '>=0.4 && <0.6'
  singletons: ! '>=0.8'
  type-natural: ==0.0.3.*
  lens: ==3.*
  algebra: ==3.*
all-versions:
- '0.0.1.0'
- '0.0.1.1'
- '0.0.2.0'
- '0.0.3.0'
- '0.0.3.1'
- '0.0.3.2'
- '0.1.0.0'
- '0.1.0.1'
- '0.1.1.0'
- '0.1.2.0'
- '0.1.3.0'
- '0.1.3.1'
- '0.1.3.5'
- '0.1.3.6'
- '0.2.0.0'
- '0.3.0.0'
author: Hiromi ISHII
latest: '0.3.0.0'
description-type: markdown
description: ! "Computational Algebra Library\n==============================\n\nInstallation\n-------------\n```{sh}\n$
  cabal install computational-algebra\n```\n\nIf you once installed the same version
  of this package and want to reinstall, please run `cabal clean` first to avoid the
  GHC's bug.\n\nWhat is this?\n-------------\nThis library provides data-types and
  functions to manipulate polynomials.\nThis is built up with GHC's nice type features.\n\nIt
  contains following things:\n\n* Compute Groebner basis using Buchberger Algorithm\n*
  Ideal membership problem\n* Elimination ideal calculation\n    * This library provides
  the monomial orders of l-th elimination type other than lex order, such as elimination
  order, product order,...\n* Ideal operations\n\t* Saturation Ideal, Quotient ideal,...\n\nThere
  are two interfaces:\n\n* Dependently-typed I/F\n    * Arity-paramaterized polynomials.
  It uses vector representations for monomials.\n     `Algebra.Ring.Polynomial` and
  `Algebra.Algorithms.Groebner`.\n\n* Monomorphic wrapper I/F\n    * Not-so-dependently-typed
  interface to wrap dependently-typed ones. `Algebra.Ring.Polynomial.Monomorphic`
  and `Algebra.Algorithms.Groebner.Monomorphic`.\n\n\nFor more information, please
  read `examples/polymorphic.hs` and `examples/monomorphic.hs`.\n\nKnown Issues\n------------\nDue
  to GHC 7.4.*'s bug, this library contains extra modules and functionalities as follows:\n\n*
  `Monomorphic` data-type and his friends\n    * This is completely separeted as [`monomorphic`](http://hackage.haskell.org/package/monomorphic)
  package. But due to GHC 7.4.1, which is shipped with latest Haskell Platform, I
  include the functionality from this library for a while.\n* Singleton types and
  functions\n    * Because the [`singletons`](http://hackage.haskell.org/package/singletons)
  package is not available in GHC 7.4.1, I provide limited version of the functionalities
  of that package in `Algebra.Internal` module. After new HP released, I will entirely
  rewrite all source codes using `singletons`.\n* Type-level natural numbers and size-parameterized
  vectors\n    * For the similar reason, I include `SNat` and `Vector` data-type in
  `Algebra.Internal` module, which is separated as [`sized-vector`](http://hackage.haskell.org/package/sized-vector)
  package. Their proofs are so messy, so I will entirely rewrite these after new HP
  released with my unreleased package [`equational-reasoning`](https://github.com/konn/equational-reasoning-in-haskell),
  which provides the functionalities similar to Agda's EqReasoning.\n"
license-name: BSD3
