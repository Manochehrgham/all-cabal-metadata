homepage: http://khibino.github.io/haskell-relational-record/
changelog-type: markdown
hash: 218cadf09db5e38191d8aa8a2f558af15463d1f2e9e24806c591b22d86021145
test-bench-deps:
  relational-query: -any
  base: <5
  containers: -any
  quickcheck-simple: -any
  transformers: -any
maintainer: ex8k.hibino@gmail.com
synopsis: Typeful, Modular, Relational, algebraic query engine
changelog: ! "## 0.5.1.1\n\n- Update documentation.\n\n## 0.5.1.0\n\n- Add the arrow
  combinator module and its unit-test cases.\n\n## 0.5.0.3\n\n- Update unit-test cases.\n-
  Add the fixity of `over` operator.\n- Avoid an `a future Prelude name' warning.\n\n##
  0.5.0.2\n\n- Switch libraries to use from test-suites not to depend on Cabal library.\n\n##
  0.5.0.1\n\n- Add this ChangeLog file.\n\n## 0.5.0.0\n\n- Prevent window function
  context expression from using normal SQL expressions.\n- Generalize the result types
  of aggregate and window functions.\n- Allow to embed a integer literal in SQL from
  Haskell Int type.\n- Add SQL LIKE operators.\n- Drop old deprecated functions. (fromMaybe',
  dense_rank, ...)\n- Fix typo.\n  https://github.com/khibino/haskell-relational-record/pull/15\n-
  Fix for \"invalid single-column insert syntax\".\n  https://github.com/khibino/haskell-relational-record/issues/16\n"
basic-deps:
  bytestring: -any
  base: <5
  time: -any
  text: -any
  dlist: -any
  array: -any
  containers: -any
  names-th: -any
  transformers: -any
  persistable-record: -any
  sql-words: ! '>=0.1.1'
  template-haskell: -any
  time-locale-compat: -any
all-versions:
- '0.0.1.0'
- '0.0.1.1'
- '0.0.1.2'
- '0.0.1.3'
- '0.0.1.4'
- '0.0.1.5'
- '0.0.1.6'
- '0.0.1.7'
- '0.0.1.8'
- '0.0.1.9'
- '0.0.1.10'
- '0.1.0.0'
- '0.1.0.1'
- '0.2.0.0'
- '0.2.1.0'
- '0.3.0.0'
- '0.3.0.1'
- '0.3.0.2'
- '0.3.0.3'
- '0.3.0.4'
- '0.4.0.0'
- '0.4.0.1'
- '0.5.0.0'
- '0.5.0.1'
- '0.5.0.2'
- '0.5.0.3'
- '0.5.1.0'
- '0.5.1.1'
author: Kei Hibino
latest: '0.5.1.1'
description-type: haddock
description: ! 'This package contiains typeful relation structure and

  relational-algebraic query building DSL which can

  translate into SQL query.

  Supported query features are below:

  - Type safe query building

  - Restriction, Join, Aggregation

  - Modularized relations

  - Typed placeholders'
license-name: BSD3
