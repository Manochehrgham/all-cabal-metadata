homepage: ''
changelog-type: ''
hash: bb0b3923e57779fa4ce23afcec01e798fd9aaaaadc2c5fc3fb0d214531596705
test-bench-deps: {}
maintainer: Igor Pashev <pashev.igor@gmail.com>
synopsis: Post to 0bin services
changelog: ''
basic-deps:
  bytestring: ! '>=0.10.6.0'
  base: ! '>=4.7 && <5'
  base64-bytestring: ! '>=1.0'
  docopt: ! '>=0.7.0.4'
  memory: ! '>=0.10'
  zerobin: -any
  raw-strings-qq: ! '>=1.0.2'
  cryptonite: ! '>=0.8'
  http-conduit: ! '>=2.1.8'
  aeson: ! '>=0.10'
all-versions:
- '1.1.1'
- '1.2.0'
- '1.5.0'
author: Igor Pashev
latest: '1.5.0'
description-type: markdown
description: ! "About\n=====\nThis is a library and a command-line utility\nto share
  secrets via [\"zerobin\"](https://github.com/sametmax/0bin)\nsites like https://paste.ec\nusing
  client-side encryption with [SJCL](https://crypto.stanford.edu/sjcl/).\n\nThis library
  reimplements encryption part of [SJCL](https://crypto.stanford.edu/sjcl/)\nallowing
  you to post secrets from Haskell programs and shell scripts.\n\nRequirements\n============\nZeroBin
  is written in Haskell with [GHC](http://www.haskell.org/ghc/).\nAll required Haskell
  libraries are listed in [zerobin.cabal](zerobin.cabal).\nUse [cabal-install](http://www.haskell.org/haskellwiki/Cabal-Install)\nto
  fetch and build all pre-requisites automatically.\n\nInstallation\n============\n
  \   $ git clone https://github.com/zalora/zerobin.git\n    $ cd zerobin\n    $ cabal
  install\n\nCommand-line utility\n====================\nThe command-line utility
  `zerobin` encrypts text or file,\npost the encrypted data to https://paste.ec and\nprints
  URI to be shared or error message:\n\n    $ zerobin 'heinrich hertz'\n    https://paste.ec/paste/1j3GBy-7#dg0PXHFglISOhXzRnU4KLWbSAh5jX5KjX4wZEiYM8QA6\n\n\nType
  `zerobin --help` to see usage summary:\n\n    Usage:\n      zerobin [options] TEXT\n\n
  \   Options:\n      -b, --bin=BIN   0bin service [default: https://paste.ec]\n      -f,
  --file      Paste the content of file TEXT instead of plain TEXT\n      -e, --expire=E
  \ Set expiration of paste: once, day, week, month [default: day]\n\n      -h, --help
  \     Show this message\n\n    Examples:\n      zerobin hello                      paste
  \"hello\" for a day\n      zerobin -f /etc/fstab              paste file /etc/fstab
  for a day\n      zerobin -e once hello              paste \"hello\", it will burn
  after reading\n      zerobin -b http://0bin.net hello   paste to 0bin.net\n\n\nHacking\n=======\nThere
  is a simple test program in the [./nodejs](./nodejs) directory.\nIt uses this library
  to encrypt a message and original SJCL\nrunning by [Node.js](https://nodejs.org)
  to decrypt:\n\n    $ git clone https://github.com/zalora/zerobin.git\n    $ cd zerobin\n
  \   $ cabal install --dependencies-only\n    $ cabal install -f nodejs --ghc-option=\"-Werror\"\n
  \   $ # get nodejs and npm, e. g. on Debian; sudo apt-get install nodejs npm\n    $
  npm install sjcl\n    $ ./dist/build/zerobin-nodejs/zerobin-nodejs\n    heinrich
  hertz\n\nFeatures/Bugs/TODOs\n===================\n1. [0bin](https://github.com/sametmax/0bin)
  supports images,\n   `zerobin` can encrypt anything, but only plain text will be
  decrypted.\n2. \"Burn after reading\" (`-e once`) really means \"burn after two
  readings\",\n   because we do not redirect like browser does.\n   You can verify
  your paste before sharing the link ;-)\n3. http://0bin.net does not support `-e
  week`\n\n\n"
license-name: MIT
