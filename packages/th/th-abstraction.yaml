homepage: https://github.com/glguy/th-abstraction
changelog-type: markdown
hash: d827bbe1f08464854c1184b9db0bec4086d412dc1fb310ea84e59de108d63ad4
test-bench-deps:
  base: -any
  th-abstraction: -any
  containers: -any
  template-haskell: -any
maintainer: emertens@gmail.com
synopsis: Nicer interface for reified information about data types
changelog: ! "# Revision history for th-abstraction\n\n## 0.2.2.0 -- 2017-06-10\n\n*
  Fix `freeVariables` on lists not not produce duplicates.\n\n## 0.2.1.0 -- 2017-06-09\n\n*
  Add sensible reify defaults and error messages when we\n  can't backport fixes to
  old GHC Template Haskell output\n  due to hand-written Decs being processed.\n\n##
  0.2.0.0 -- 2017-06-03\n\n* Added `reifyFixityCompat`\n* Added `constructorStrictness`
  field to `ConstructorInfo`\n* Infer more kind signatures when missing on old GHCs\n*
  Added parameter to `normalizeCon`\n* Support GHC back to 7.0.4\n\n## 0.1.3.0 --
  2017-05-27\n\n* Added `resolveInfixT` which uses reified fixity information to resolve
  `UInfixT`\n* Added `asEqualPred` and `asClassPred`\n* Fixed data-instance GADTs\n\n##
  0.1.2.1  -- 2017-05-21\n\n* Add eta reduction fixes to GHC 7.6\n\n## 0.1.2.0  --
  2017-05-21\n\n* Added `arrowKCompat`\n* Added workaround for GHC 7.8 data instance
  eta reduction bug\n* Added kind signatures to datatypeVars\n\n## 0.1.1.0  -- 2017-05-20\n\n*
  Better matching of constraints generated for GADTs across GHC versions\n* Added
  `dataDCompat`\n* Support for giving value constructors to reifyDatatype. This enables\n
  \ data families to be reified easily.\n\n## 0.1.0.0  -- 2017-04-26\n\n* First version.\n"
basic-deps:
  base: ! '>=4.3 && <5'
  containers: ! '>=0.4 && <0.6'
  ghc-prim: -any
  template-haskell: ! '>=2.5 && <2.13'
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.1.2.0'
- '0.1.2.1'
- '0.1.3.0'
- '0.2.0.0'
- '0.2.1.0'
- '0.2.2.0'
author: Eric Mertens
latest: '0.2.2.0'
description-type: markdown
description: ! 'th-abstraction

  ==============


  [![Hackage](https://img.shields.io/hackage/v/th-abstraction.svg)](https://hackage.haskell.org/package/th-abstraction)
  [![Build Status](https://secure.travis-ci.org/glguy/th-abstraction.png?branch=master)](http://travis-ci.org/glguy/th-abstraction)


  This package provides a consistent interface to a subset of Template Haskell.


  Currently the package provides a consistent view of the reified declaration

  information about datatypes, newtypes, data families, and newtype families.

  These interfaces abstract away the differences in the normal and GADT syntax

  used to define these types.


  Contact Information

  -------------------


  Please contact me via GitHub or on the #haskell IRC channel on irc.freenode.net

'
license-name: ISC
