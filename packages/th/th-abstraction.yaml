homepage: https://github.com/glguy/th-abstraction
changelog-type: markdown
hash: 8b1cc9b8d1e34b12c7baf0bf8a06d5c6466a73ded260593a45d7a1ea80ed43ce
test-bench-deps:
  base: -any
  th-abstraction: -any
  containers: -any
  template-haskell: -any
maintainer: emertens@gmail.com
synopsis: Nicer interface for reified information about data types
changelog: ! "# Revision history for th-abstraction\n\n## 0.2.1.0 -- 2017-06-09\n\n*
  Add sensible reify defaults and error messages when we\n  can't backport fixes to
  old GHC Template Haskell output\n  due to hand-written Decs being processed.\n\n##
  0.2.0.0 -- 2017-06-03\n\n* Added `reifyFixityCompat`\n* Added `constructorStrictness`
  field to `ConstructorInfo`\n* Infer more kind signatures when missing on old GHCs\n*
  Added parameter to `normalizeCon`\n* Support GHC back to 7.0.4\n\n## 0.1.3.0 --
  2017-05-27\n\n* Added `resolveInfixT` which uses reified fixity information to resolve
  `UInfixT`\n* Added `asEqualPred` and `asClassPred`\n* Fixed data-instance GADTs\n\n##
  0.1.2.1  -- 2017-05-21\n\n* Add eta reduction fixes to GHC 7.6\n\n## 0.1.2.0  --
  2017-05-21\n\n* Added `arrowKCompat`\n* Added workaround for GHC 7.8 data instance
  eta reduction bug\n* Added kind signatures to datatypeVars\n\n## 0.1.1.0  -- 2017-05-20\n\n*
  Better matching of constraints generated for GADTs across GHC versions\n* Added
  `dataDCompat`\n* Support for giving value constructors to reifyDatatype. This enables\n
  \ data families to be reified easily.\n\n## 0.1.0.0  -- 2017-04-26\n\n* First version.\n"
basic-deps:
  base: ! '>=4.3 && <5'
  containers: ! '>=0.4 && <0.6'
  ghc-prim: -any
  template-haskell: ! '>=2.5 && <2.13'
all-versions:
- '0.1.0.0'
- '0.1.1.0'
- '0.1.2.0'
- '0.1.2.1'
- '0.1.3.0'
- '0.2.0.0'
- '0.2.1.0'
author: Eric Mertens
latest: '0.2.1.0'
description-type: haddock
description: ! 'This package normalizes variations in the interface for

  inspecting datatype information via Template Haskell

  so that packages and support a single, easier to use

  informational datatype while supporting many versions

  of Template Haskell.'
license-name: ISC
