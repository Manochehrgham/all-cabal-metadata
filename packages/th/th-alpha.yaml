changelog-type: ''
hash: a742c6eca1be0798645ad0bf2447e6518620f958954ced1c92772f92db0f0b2b
synopsis: Alpha equivalence for TH Exp
changelog: ''
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.2.0.0'
- '0.2.0.1'
- '0.2.0.2'
latest: '0.2.0.2'
description-type: haddock
description: ! 'Compare TH expressions (or clauses, patterns, etc.) for alpha equivalence.

  That is, compare for equality modulo the renaming of bound variables.


  > areExpAEq [| \x -> x |] [| \y -> y |]

  > -- True


  > do

  >    let x = mkName "x"

  >    let y = mkName "y"

  >    runQ $ (LamE [VarP x] (VarE x)) @= (LamE [VarP y] (VarE y))

  > -- True


  This can be useful when for instance testing libraries that use Template

  Haskell - usually correctness is only defined up to alpha equivalence.'
