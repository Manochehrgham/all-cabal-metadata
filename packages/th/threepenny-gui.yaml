homepage: http://wiki.haskell.org/Threepenny-gui
changelog-type: markdown
hash: c2d14352add48e113530432870116eea357253004aad73049e334dabef40dfe7
test-bench-deps: {}
maintainer: Heinrich Apfelmus <apfelmus at quantentunnel dot de>
synopsis: GUI framework that uses the web browser as a display.
changelog: ! "## Changelog for the `threepenny-gui` package\n\n**0.6.0.3** -- Maintenance
  release.\n\n* Temporary fix for #109, which was causing event handlers to be discarded.
  Unfortunately, this means that elements are currently not garbage collected after
  they have been removed from the DOM tree.\n\n**0.6.0.2** -- Maintenance release.\n\n*
  Remove unused direct dependencies, in particular\n** attoparsec-enumerator\n** utf8-string\n**
  MonadCatchIO-transformers\n** time\n\n**0.6.0.1** -- Maintenance release.\n\n* The
  `ADDR` environment variable is now parsed correctly.\n* Now builds on GHC 7.8 and
  GHC 7.10\n* The example source code in the `samples` folder has been reorganized
  and consolidated.\n\n**0.6.0.0** -- Snapshot release.\n\n* The internals of the
  JavaScript FFI has been reimplemented completely. A new module `Foreign.JavaScript`
  exports a bare JavaScript FFI in case you want to write a custom GUI framework.
  However, the module `Graphics.UI.Threepenny` is *not* compatible with it, even though
  it builds on top of it.\n* The fields of `Config` type for server configuration
  are now prefixed with `js` instead of `tp`. Example: `jsPort`, `jsStatic`.\n* The
  functions `loadFile` and `loadDirectory` have been *removed*, as I felt that the
  `jsStatic` option is sufficient for most use cases.\n\n**0.5.0.0** -- Snapshot release.\n\n*
  Possibility to specify IP address to bind the server to.\n* FFI now supports callbacks
  into Haskell. Remove `callDeferredFunction` function.\n* `Graphics.UI.Threepenny.Canvas.SVG`
  for creating SVG elements and attributes.\n* 2D graphics API in `Graphics.UI.Threepenny.Canvas`
  is beginning to grow.\n* `Bool` is now correctly marshalled to JavaScript.\n* `Text`
  can now be marshalled to JavaScrtip.\n\n**0.4.2.0** -- Maintenance release.\n\n*
  Dependency `bytestring >=0.9.2` is now implemented correctly.\n* Allow newer versions
  of `aeson` dependency.\n* Allow newer versions of `network`, `transformers` and
  `template-haskell` dependencies.\n* Helper scripts in the `samples` directory now
  assume that you use a cabal sandbox for development.\n* The `UI` monad is now an
  instance of the `Applicative` class.\n\n**0.4.1.0** -- Maintenance release.\n\n*
  Dependency on `text` package now from version 0.11 to 1.1.*.\n* Dependency on `aeson`
  package replaces the former dependency on the `json` package.\n* Unicode characters
  are now transmitted correctly to the browser. #75, #62.\n* Change default port number
  to 8023. #64\n\n**0.4.0.2** -- Bugfix release.\n\n* Fix CSS bug for `grid` function.\n\n**0.4.0.1**
  -- Maintenance release.\n\n* Adjust package dependencies.\n\n**0.4.0.0** -- Snapshot
  release.\n\n* New `UI` monad for easier JavaScript FFI and recursion in FRP.\n*
  Garbage collection for DOM elements. (Unfortunately, this doesn't support using
  custom HTML files anymore, see [issue #60][60].)\n* First stab at widgets.\n* Update
  dependency to `websockets-0.8`.\n\n**0.3.0.0** -- Snapshot release.\n\n* Browser
  communication with WebSockets.\n* First stab at FRP integration.\n\n**0.2.0.0**
  -- Snapshot release.\n\n* First stab at easy JavaScript FFI.\n\n**0.1.0.0**\n\n*
  Initial release.\n\n\n\n  [60]: https://github.com/HeinrichApfelmus/threepenny-gui/issues/60"
basic-deps:
  bytestring: ! '>=0.9.2 && <0.11'
  stm: ! '>=2.2 && <2.5'
  base: ! '>=4.3 && <4.9'
  unordered-containers: ==0.2.*
  text: ! '>=0.11 && <1.3'
  filepath: ! '>=1.3.0 && <1.5.0'
  async: ==2.0.*
  websockets: ! '>=0.8 && <0.10'
  data-default: ==0.5.*
  containers: ! '>=0.4.2 && <0.6'
  snap-server: ==0.9.*
  websockets-snap: ! '>=0.8 && <0.10'
  snap-core: ==0.9.*
  vault: ==0.3.*
  network-uri: ! '>=2.6 && <2.7'
  hashable: ! '>=1.1.0 && <1.3'
  transformers: ! '>=0.3.0 && <0.5'
  deepseq: ! '>=1.3.0 && <1.5'
  aeson: ! '>=0.7 && <0.9'
  template-haskell: ! '>=2.7.0 && <2.11'
  safe: ==0.3.*
  vector: ! '>=0.10 && <0.11'
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.2.0.0'
- '0.2.0.1'
- '0.3.0.0'
- '0.3.0.1'
- '0.4.0.0'
- '0.4.0.1'
- '0.4.0.2'
- '0.4.1.0'
- '0.4.2.0'
- '0.5.0.0'
- '0.6.0.1'
- '0.6.0.2'
- '0.6.0.3'
author: Heinrich Apfelmus
latest: '0.6.0.3'
description-type: markdown
description: ! "[![Build Status](https://travis-ci.org/HeinrichApfelmus/threepenny-gui.png)](https://travis-ci.org/HeinrichApfelmus/threepenny-gui)\n\nThreepenny-gui
  is a GUI framework written in Haskell that uses the web browser as a display. It's
  very easy to install. See the\n\n  [**Project homepage**](http://wiki.haskell.org/Threepenny-gui)\n\nfor
  more information on what it does and can do for you as a library user.\n\n## Examples\n\nThe
  library comes with many examples, which can be found in the [samples](https://github.com/HeinrichApfelmus/threepenny-gui/tree/master/samples#readme)
  folder. Follow the link for more information on how to run them.\n\n## Technical
  overview\n\nA program written with Threepenny is essentially a small web server
  that displays the user interface as a web page to any browser that connects to it.\n\n###
  Latency\n\nThe frequent communication between browser and server\nmeans that Threepenny
  is best used as a GUI server running on localhost.\n\nThe communication is done
  over a persistent connection using WebSockets.\n\nIf you want to reduce latency,
  the best option is to generate JavaScript\ncode and run it on the client. Consider
  this approach similar to [a\nshading language.](http://en.wikipedia.org/wiki/Shading_language).
  Some means of producing JavaScript from Haskell might be:\n\n* Fay\n* HJScript\n*
  GHCJS\n* UHC\n\nAlternatively, the JS can be written by the user directly and invoked
  via the JavaScript FFI from Threepenny.\n\n## Future ideas\n\n### HTML rendering
  mode\n\nIt might be nice in the case of search engines to merely generate a DOM
  and render it, so that search engines can read the pages.\n\n### UI libraries\n\n[qooxdoo](http://qooxdoo.org/demo)
  — provides a feature-complete widget set. One could wrap this in a type-safe API
  from Threepenny and get a complete, stable UI framework for free. Most of the \"immediate
  feedback\" like dragging things here, switching tabs there, are taken care of by
  the framework. All that would be left would be to provide the domain configuration
  and business/presentation logic.\n\nThere are plenty more like this, but this is
  the first that springs to\nmind that is good.\n\n## Contributors\n\nMany thanks
  to everyone who contributed, provided feedback or simply wrote an application using
  Threepenny!\n\n* *Heinrich Apfelmus*\n* *Daniel Austin*\n* Daniel Díaz\n* Yuval
  Langer\n* *Ken Friis Larsen*\n* *Daniel Mlot*\n* JP Moresmau\n* Luke Palmer\n* Jens
  Petersen\n* Jaap van der Plas\n* rnons\n* Michael Snoyman\n* *Steve Bigham*\n* tailcalled\n\nSpecial
  thanks to *Chris Done* for starting the precursor project Ji.\n"
license-name: BSD3
