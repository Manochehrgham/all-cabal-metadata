homepage: ''
changelog-type: ''
hash: fcbf2b7edeb4a8f1ef68e0455d89f4c9fc7dfe9b28d3bf5a6d2cec6463716974
test-bench-deps:
  bytestring: ! '>=0.10.6.0 && <0.11'
  base: ==4.8.*
  pipes-bytestring: ! '>=2.1.1 && <2.2'
  hspec: ! '>=2.2.0 && <2.3'
  process: ! '>=1.2.3.0 && <1.3'
  pipes: ! '>=4.1.6 && <4.2'
  dywapitchtrack: ! '>=0.1.0.0 && <0.2'
  transformers: ! '>=0.4.2.0 && <0.5'
maintainer: lortabac@gmx.com
synopsis: Pitch tracking library
changelog: ''
basic-deps:
  bytestring: ! '>=0.10.6.0 && <0.11'
  base: ==4.8.*
  pipes-bytestring: ! '>=2.1.1 && <2.2'
  process: ! '>=1.2.3.0 && <1.3'
  pipes: ! '>=4.1.6 && <4.2'
  dywapitchtrack: ! '>=0.1.0.0 && <0.2'
  transformers: ! '>=0.4.2.0 && <0.5'
all-versions:
- '0.1.0.0'
author: Lorenzo Tabacchini
latest: '0.1.0.0'
description-type: haddock
description: ! 'Pitch tracking library, based on <http://www.schmittmachine.com/dywapitchtrack.html
  dywapitchtrack>.


  See the "PitchTrack" module for an easy, "ready to use" interface,

  or "PitchTrack.Pipes" for Pipes-based components, if you need more flexibility.


  Note that because all parameters are hard-coded into the C library,

  you are limited to the following audio configuration:


  * raw (headerless) format


  * a sampling rate of 44100Hz,


  * a sample size of @sizeof(double)@


  * floating-point encoding


  * one channel (mono)'
license-name: MIT
