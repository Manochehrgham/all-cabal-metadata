homepage: https://github.com/jonschoning/pinboard
changelog-type: markdown
hash: a9abee69d1655b7d8f86b40b481455b7062d770190986a1024b12107957cd453
test-bench-deps: {}
maintainer: jonschoning@gmail.com
synopsis: Access to the Pinboard API
changelog: ! '__v0.8.5__


  replace Pinboard stack with PinboardT transfomer (use mtl style constraints instead
  of a fixed monad transformer stack)


  __v0.7.5__


  replacing/removing io-streams in favor of http-client


  __v0.6.5__


  compatability with both time < 1.5 and time >= 1.5


  __v0.6.4__


  add ability to update a post directly from a Post record (save an existing post)


  __v0.6.3__


  add ToJson instances

  add pretty print function

'
basic-deps:
  http-client: -any
  either: -any
  bytestring: -any
  base: ! '>=4.6 && <5.0'
  time: -any
  unordered-containers: -any
  text: -any
  network: -any
  containers: -any
  old-locale: -any
  http-client-tls: -any
  mtl: ! '>=2.1.3.1'
  transformers: -any
  random: ! '>=1.1'
  http-types: -any
  aeson: -any
  vector: -any
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- '0.6'
- '0.6.1'
- '0.6.2'
- '0.6.2.1'
- '0.6.2.2'
- '0.6.3'
- '0.6.4'
- '0.6.5'
- '0.7.5'
- '0.8.5'
- '0.8.6'
author: Jon Schoning
latest: '0.8.6'
description-type: markdown
description: ! "# Pinboard [![Hackage](https://img.shields.io/hackage/v/pinboard.svg?style=flat)](https://hackage.haskell.org/package/pinboard)\n\nThe
  Pinboard API is a way to interact programatically with\nyour bookmarks, notes and
  other Pinboard data. This\nlibrary wraps the API exposing functions and data\nstructures
  suitable for usage in Haskell programs.\n\n## Hackage page and Haddock documentation\n<http://hackage.haskell.org/package/pinboard>\n\n##
  Pinboard Api documentation\n\n<https://pinboard.in/api/>\n\n## Examples: \n\n###
  getPostsRecent\n``` {.haskell}\n{-# LANGUAGE OverloadedStrings #-}\n\nimport Pinboard\n\nmain
  :: IO ()\nmain = do\n  let config = fromApiToken \"api token\"\n  result <- runPinboard
  config $ getPostsRecent Nothing Nothing\n  case result of\n    Right details ->
  print details\n    Left pinboardError -> print pinboardError\n```\n## Modules\n\n[Pinboard.Client](https://hackage.haskell.org/package/pinboard/docs/Pinboard-Client.html)\n\n
  \ Executes the methods defined in Pinboard.Api\n\n[Pinboard.Api](https://hackage.haskell.org/package/pinboard/docs/Pinboard-Api.html)\n\n
  \ Provides Pinboard Api Methods\n\n[Pinboard.ApiTypes](https://hackage.haskell.org/package/pinboard/docs/Pinboard-ApiTypes.html)\n\n
  \ Pinboard Data Structures returned by the Api\n"
license-name: MIT
