homepage: https://github.com/jonschoning/pinboard
changelog-type: markdown
hash: d197554d89efff13032e82598c2a2a8f82e86b2b3bff7be9797098e8f19e092d
test-bench-deps:
  bytestring: -any
  base: ! '>=4.6 && <5.0'
  time: -any
  unordered-containers: -any
  hspec: ! '>=1.8'
  text: -any
  semigroups: -any
  containers: -any
  mtl: ! '>=2.2.1'
  pinboard: -any
  transformers: ! '>=0.4.0.0'
  QuickCheck: -any
  aeson: -any
maintainer: jonschoning@gmail.com
synopsis: Access to the Pinboard API
changelog: ! '__v0.9.6__


  add http-client bound


  __v0.9.5__


  add JSON roundtrip tests


  __v0.9.4__


  derive generic


  __v0.9.3__


  Add lenses


  __v0.9.2__


  Make data fields strict


  __v0.9.1__


  rename field: postToread -> postToRead


  __v0.9.0__


  refactored Client.hs to simplify parameters


  promote types under .Client subtree to top-level


  __v0.8.5__


  replace Pinboard stack with PinboardT transfomer (use mtl style constraints instead
  of a fixed monad transformer stack)


  __v0.7.5__


  replacing/removing io-streams in favor of http-client


  __v0.6.5__


  compatability with both time < 1.5 and time >= 1.5


  __v0.6.4__


  add ability to update a post directly from a Post record (save an existing post)


  __v0.6.3__


  add ToJson instances

  add pretty print function

'
basic-deps:
  http-client: <0.5.0
  either: -any
  bytestring: -any
  base: ! '>=4.6 && <5.0'
  time: -any
  unordered-containers: -any
  text: -any
  network: -any
  containers: -any
  old-locale: -any
  http-client-tls: -any
  mtl: ! '>=2.2.1'
  transformers: ! '>=0.4.0.0'
  random: ! '>=1.1'
  http-types: -any
  aeson: -any
  profunctors: ! '>=5'
  vector: -any
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- '0.6'
- '0.6.1'
- '0.6.2'
- '0.6.2.1'
- '0.6.2.2'
- '0.6.3'
- '0.6.4'
- '0.6.5'
- '0.7.5'
- '0.8.5'
- '0.8.6'
- '0.8.7'
- '0.8.8'
- '0.8.9'
- '0.8.10'
- '0.9.0'
- '0.9.1'
- '0.9.2'
- '0.9.3'
- '0.9.4'
- '0.9.5'
- '0.9.6'
author: Jon Schoning
latest: '0.9.6'
description-type: markdown
description: ! "# Pinboard [![Hackage](https://img.shields.io/hackage/v/pinboard.svg?style=flat)](https://hackage.haskell.org/package/pinboard)
  [![Build Status](https://travis-ci.org/jonschoning/pinboard.svg?branch=master)](https://travis-ci.org/jonschoning/pinboard)\n\nThe
  Pinboard API is a way to interact programatically with\nyour bookmarks, notes and
  other Pinboard data. This\nlibrary wraps the API exposing functions and data\nstructures
  suitable for usage in Haskell programs.\n\n## Hackage page and Haddock documentation\n<http://hackage.haskell.org/package/pinboard>\n\n##
  Pinboard Api documentation\n\n<https://pinboard.in/api/>\n\n## Examples: \n\n###
  getPostsRecent\n``` {.haskell}\n{-# LANGUAGE OverloadedStrings #-}\n\nimport Pinboard\n\nmain
  :: IO ()\nmain = do\n  let config = fromApiToken \"api token\"\n  result <- runPinboard
  config $ getPostsRecent Nothing Nothing\n  case result of\n    Right details ->
  print details\n    Left pinboardError -> print pinboardError\n```\n\noutput:\n```\nPosts{postsDate
  = 2015 - 10 - 24 16 : 17 : 12 UTC,\n       postsUser = \"jonschoning\",\n       postsPosts
  =\n         [Post{postHref = \"http://www.reddit.com/r/haskell/comments/25vj62/adventure_with_types_in_haskell_simon_peyton/\",\n
  \              postDescription = \"Adventure with Types in Haskell - Simon Peyton
  Jones [1:33:36] : haskell\",\n               postExtended = \"\", \n               postMeta
  = \"3fe9fb05c7c37f7bb66be7b9d85599eb\",\n               postHash = \"c46b717604ef8b126dabeba97b27a36f\",\n
  \              postTime = 2014 - 5 - 19 3 : 35 : 55 UTC, \n               postShared
  = True,\n               postToRead = False,\n               postTags = [\"spj\",
  \"video\", \"haskell\", \"typetheory\"]}]}\n```\n\n### getPostsRecent (using Lenses)\n```
  {.haskell}\n{-# LANGUAGE OverloadedStrings #-}\n\nimport Pinboard\nimport Control.Lens\n\nmain
  :: IO ()\nmain = do\n  let config = fromApiToken \"api token\"\n  result <- runPinboard
  config $ getPostsRecent (Just [\"haskell\"]) (Just 3)\n  mapM_ print (result ^..
  _Right . postsPostsL . traverse . postHrefL)\n\n```\n\noutput:\n```\n\"http://www.stephendiehl.com/posts/production.html\"\n\"https://mail.haskell.org/mailman/listinfo\"\n\"https://en.wikibooks.org/wiki/Haskell/Applicative_functors#A_sliding_scale_of_power\"\n```\n\n\n##
  Modules\n\n[Pinboard.Types](https://hackage.haskell.org/package/pinboard/docs/Pinboard-Types.html)\n\n
  \ Pinboard typeclasses and type aliases\n\n[Pinboard.Client](https://hackage.haskell.org/package/pinboard/docs/Pinboard-Client.html)\n\n
  \ Executes the methods defined in Pinboard.Api\n\n[Pinboard.Api](https://hackage.haskell.org/package/pinboard/docs/Pinboard-Api.html)\n\n
  \ Provides Pinboard Api Methods\n\n[Pinboard.ApiTypes](https://hackage.haskell.org/package/pinboard/docs/Pinboard-ApiTypes.html)\n\n
  \ Pinboard Data Structures returned by the Api\n\n[Pinboard.ApiTypesLens](https://hackage.haskell.org/package/pinboard/docs/Pinboard-ApiTypesLens.html)\n\n
  \ Lens accessors for Pinboard.ApiTypes\n"
license-name: MIT
