homepage: ''
changelog-type: text
hash: 19f55b06ffb13bdda2cd9976450072b71d6aa81076a228496e57e910885afd59
test-bench-deps:
  free: ==4.*
  base: ! '>=4.4 && <5'
  text: -any
  doctest: ! '>=0.10.1'
  pipes-transduce: -any
  pipes: ==4.*
  foldl: ! '>=1.1'
  tasty-hunit: ! '>=0.9.2'
  tasty: ! '>=0.10.1.1'
maintainer: diaz_carrete@yahoo.com
synopsis: Interfacing pipes with foldl folds.
changelog: ! '0.3.1.0

  =======


  - Solved bug in "combined, added a test.


  0.3.0.0

  =======


  - Dropped unneeded deps.


  0.2.3.0

  =======


  - More efficient Applicative for Fold2


  0.2.0.0

  =======


  - Added folds of two Producers.

  - Name changes.

'
basic-deps:
  free: ! '>=4.0'
  void: ! '>=0.6'
  bytestring: ! '>=0.9.2.1'
  pipes-text: ! '>=0.0.1.0'
  base: ! '>=4 && <5'
  pipes-bytestring: -any
  pipes-group: ! '>=1.0.1'
  text: ! '>=0.11.2.0'
  conceit: ! '>=0.4.0.0'
  lens-family-core: ! '>=1.1'
  pipes-parse: -any
  bifunctors: ! '>=5.0'
  pipes: ==4.*
  pipes-concurrency: ! '>=2.0.2'
  foldl: ! '>=1.1'
  transformers: ! '>=0.4.0.0'
  pipes-safe: -any
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.2.3.0'
- '0.3.0.0'
- '0.3.0.1'
- '0.3.1.0'
author: Daniel Diaz
latest: '0.3.1.0'
description-type: markdown
description: ! "## What's in this library?\n\nA pair of fold-like datatypes that consume\n[Producers](http://hackage.haskell.org/package/pipes-4.1.7/docs/Pipes.html#t:Producer)\nfrom
  [pipes](http://hackage.haskell.org/package/pipes) and can be constructed\nin a variety
  of ways, in particular from the more versatile folds in Gabriel\nGonzalez's [foldl](http://hackage.haskell.org/package/foldl)
  package.\n\nThe **Fold1** consumes a single **Producer**, while the **Fold2** datatype\nconsumes
  two **Producer**s concurrently.\n\n## Why was this library created?\n\nI wanted
  a fold-like datatype for Producers that allowed \"bracketing\"\noperations like
  \"withFile\".\n\nI also wanted to be able to fold two Producers concurrently (for
  example, merge\nthe piped stdout & stderr streams of an external process into one
  unified\nstream).\n\nFinally, I wanted the fold-like datatype to have a \"failure
  option\" baked in.\n\nIf you don't need any of that, you are better off using **pipes**
  and/or\n**foldl** by themselves. \n\n## Where can I find working examples for this
  library?\n\nThere are none yet.\n"
license-name: BSD3
