homepage: ''
changelog-type: ''
hash: c23c260bff1178965d87e6fc9f7263877b5f2adc4c0e4c1bd59c55971fff9eb4
test-bench-deps:
  test-framework: ! '>=0.4 && <1'
  base: ==4.*
  test-framework-quickcheck2: ! '>=0.2.0 && <0.4'
  criterion: ! '>=0.6.2.1 && <1.2'
  pipes: ! '>=4.0.0 && <4.2'
  mtl: ! '>=2.1 && <2.3'
  transformers: ! '>=0.2.0.0 && <0.5'
  deepseq: -any
  QuickCheck: ! '>=2.4 && <3'
maintainer: Gabriel439@gmail.com
synopsis: Compositional pipelines
changelog: ''
basic-deps:
  base: ! '>=4.4 && <5'
  mtl: ! '>=2.1 && <2.3'
  mmorph: ! '>=1.0.0 && <1.1'
  transformers: ! '>=0.2.0.0 && <0.5'
all-versions:
- '1.0'
- '1.0.1'
- '1.0.2'
- '2.0.0'
- '2.1.0'
- '2.2.0'
- '2.3.0'
- '2.4.0'
- '2.5.0'
- '3.0.0'
- '3.1.0'
- '3.2.0'
- '3.3.0'
- '4.0.0'
- '4.0.1'
- '4.0.2'
- '4.1.0'
- '4.1.1'
- '4.1.2'
- '4.1.3'
- '4.1.4'
- '4.1.5'
author: Gabriel Gonzalez
latest: '4.1.5'
description-type: haddock
description: ! '`pipes` is a clean and powerful stream processing library that lets
  you build

  and connect reusable streaming components


  Advantages over traditional streaming libraries:


  * /Concise API/: Use simple commands like ''for'', (''>->''), ''await'', and ''yield''


  * /Blazing fast/: Implementation tuned for speed, including shortcut fusion


  * /Lightweight Dependency/: @pipes@ is small and compiles very rapidly,

  including dependencies


  * /Elegant semantics/: Use practical category theory


  * /ListT/: Correct implementation of ''ListT'' that interconverts with pipes


  * /Bidirectionality/: Implement duplex channels


  * /Extensive Documentation/: Second to none!


  Import "Pipes" to use the library.


  Read "Pipes.Tutorial" for an extensive tutorial.'
license-name: BSD3
