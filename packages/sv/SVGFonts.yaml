homepage: ''
changelog-type: markdown
hash: fa46400cce2bd284db0d94cbb41f6f956d9563f300917538d62f7aca5d367bf2
test-bench-deps: {}
maintainer: diagrams-discuss@googlegroups.com
synopsis: Fonts from the SVG-Font format
changelog: ! "1.5.0.0 (19 April 2015)\n-----------------------\n\n- Split functionality
  out of `ReadFont`, into `Fonts` (built-in fonts) and\n  `Text` (rendering text to
  Diagrams).\n- `textSVG'` and `textSVG_` now have the text as a separate argument,\n
  \ distinct from `TextOptions`.\n- `ReadFont` does not use `unsafePerformIO` any
  more. `unsafePerformIO` is\n  now only used to load built-in fonts.\n\n1.4.0.3 (2
  June 2014)\n----------------------\n\n- Allow `diagrams-lib-1.2`.\n\n1.4.0.1 (25
  November 2013)\n--------------------------\n\n- Bump `diagrams-lib` upper bound
  to `< 1.1`.\n\n1.4 (10 September 2013)\n-----------------------\n\n- `FontData`
  can now be written back to SVG using `makeSvgFont` inside of the `WriteFont` module.\n
  \ It is possible to only write back a specfic set of glyphs.\n- The SVG `font-face`
  element is now completely supported.\n  This means all possible attributes are read
  and written back to it.\n  Correct defaults are also set on non optional attributes.
  Some optional attributes are still\n  required though, due to their use in font
  rendering.\n- The `ReadPath` module does not use `unsafePerformIO` anymore. `ReadFont`
  is now the only module with unsafe calls.\n- Minor bug fixes:\n  - `stemh` and `stemv`
  are now optional attributes.\n\n1.3.0.2 (14 August 2013)\n------------------------\n\n-
  remove old comment causing Haddock build to fail\n\n1.3.0.1 (12 August 2013)\n------------------------\n\n-
  fix repo location in .cabal file\n\n1.3: 9 August 2013\n------------------\n\n-
  A bunch of bug fixes, cleanup, and reorganization:\n  - Proper data type for `Kern`
  and `FontData` instead of mega-tuples.\n  - Fixed several `Prelude.read` error on
  `font-face` attributes.\n  - Fixed wrong attribute names.\n  - Switched to `data-default-class`
  instead of `data-default`.\n- Require `diagrams-lib-0.7`.\n"
basic-deps:
  diagrams-lib: ! '>=1.3 && <1.4'
  blaze-svg: ! '>=0.3.3'
  split: -any
  base: ==4.*
  data-default-class: <0.1
  blaze-markup: ! '>=0.5'
  text: -any
  tuple: -any
  parsec: -any
  xml: -any
  containers: ! '>=0.4 && <0.6'
  diagrams-core: ! '>=1.3 && <1.4'
  attoparsec: -any
  vector: -any
  directory: ! '>=1.1'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '1.0'
- '1.1'
- '1.1.1'
- '1.1.2'
- '1.2'
- '1.2.1'
- '1.3'
- '1.3.0.1'
- '1.3.0.2'
- '1.4'
- '1.4.0.1'
- '1.4.0.2'
- '1.4.0.3'
- '1.5.0.0'
author: Tillmann Vogt
latest: '1.5.0.0'
description-type: markdown
description: ! "# SVGFonts\n\nNative font support for the Diagrams library. The SVG-Font
  format is\neasy to parse and was therefore chosen for a font library completely\nwritten
  in Haskell.\n\nYou can convert your own font to SVG with\nhttp://fontforge.sourceforge.net/
  or use the included LinLibertine,\nBitstream.\n\n## Features \n\nComplete implementation
  of the features that fontforge produces (but\nnot the complete SVG format):\n\n*
  Kerning (e.g. the two characters in \"VA\" have a shorter distance than in \"VV\")
  \n* Unicode \n* Ligatures \n* Text boxes with syntax highlighting\n\nXML speed issues
  can be solved by trimming the svg file to only those\ncharacters that are used (or
  maybe binary xml one day)\n\nVersion 1.0 of this library supports texturing which
  would only make\nsense in a Diagrams Backend that does rasterization in Haskell.\n\n##
  Example\n\n```\n{-# LANGUAGE NoMonomorphismRestriction #-}\n\nimport Diagrams.Prelude\nimport
  Diagrams.Backend.Cairo.CmdLine\nimport Graphics.SVGFonts\n\nmain = defaultMain (
  (text' \"Hello World\") <> (rect 8 1) # alignBL )\n\ntext'  t = stroke (textSVG
  t 1) # fc purple # fillRule EvenOdd\ntext'' t = stroke (textSVG_ (TextOpts lin INSIDE_H
  KERN True 1 1) t)\n             # fc purple # fillRule EvenOdd\n\n-- using a local
  font\ntext''' t = do\n    font <- loadFont \"path/to/font.xml\"\n    return $ stroke
  (textSVG' (TextOpts font INSIDE_H KERN False 1 1) t)\n```\n\n## Usage\n\nConvert
  your favourite font (i.e.  .ttf) into a .svg file with\nfontforge (the menu item
  under \"Save All\"). If a font converted on\nyour own doesn't work, try the repair
  options, and if this still\ndoesn't work edit the file by hand or tell me.  Remember
  that a lot of\nfonts are not allowed to be distributed freely.\n"
license-name: BSD3
