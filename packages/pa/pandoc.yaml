changelog-type: ''
hash: f5930846cbbd7c21fcd6f352c4e7f072e3de723400f622d2114a38aa4514c1da
synopsis: Conversion between markup formats
changelog: ''
all-versions:
- '0.4'
- '0.41'
- '0.42'
- '0.43'
- '0.44'
- '0.45'
- '0.46'
- '1.0'
- '1.0.0.1'
- '1.1'
- '1.2'
- '1.2.1'
- '1.3'
- '1.4'
- '1.5'
- '1.5.0.1'
- '1.5.1'
- '1.5.1.1'
- '1.6'
- '1.6.0.1'
- '1.8'
- '1.8.0.1'
- '1.8.0.2'
- '1.8.0.3'
- '1.8.1'
- '1.8.1.1'
- '1.8.1.2'
- '1.8.2'
- '1.8.2.1'
- '1.9'
- '1.9.0.2'
- '1.9.0.3'
- '1.9.0.4'
- '1.9.0.5'
- '1.9.1'
- '1.9.1.1'
- '1.9.1.2'
- '1.9.2'
- '1.9.3'
- '1.9.4'
- '1.9.4.1'
- '1.9.4.2'
- '1.9.4.3'
- '1.9.4.4'
- '1.9.4.5'
- '1.10'
- '1.10.0.1'
- '1.10.0.2'
- '1.10.0.3'
- '1.10.0.4'
- '1.10.0.5'
- '1.10.1'
- '1.11'
- '1.11.1'
- '1.12'
- '1.12.0.1'
- '1.12.0.2'
- '1.12.1'
- '1.12.2'
- '1.12.2.1'
- '1.12.3'
- '1.12.3.1'
- '1.12.3.2'
- '1.12.3.3'
- '1.12.4'
- '1.12.4.2'
- '1.13'
- '1.13.0.1'
- '1.13.1'
- '1.13.2'
- '1.13.2.1'
latest: '1.13.2.1'
description-type: haddock
description: ! 'Pandoc is a Haskell library for converting from one markup

  format to another, and a command-line tool that uses

  this library. It can read markdown and (subsets of) HTML,

  reStructuredText, LaTeX, DocBook, MediaWiki markup, TWiki

  markup, Haddock markup, OPML, Emacs Org-Mode, txt2tags and

  Textile, and it can write markdown, reStructuredText, XHTML,

  HTML 5, LaTeX, ConTeXt, DocBook, OPML, OpenDocument, ODT,

  Word docx, RTF, MediaWiki, DokuWiki, Textile, groff man

  pages, plain text, Emacs Org-Mode, AsciiDoc, Haddock markup,

  EPUB (v2 and v3), FictionBook2, InDesign ICML, and several

  kinds of HTML/javascript slide shows (S5, Slidy, Slideous,

  DZSlides, reveal.js).


  Pandoc extends standard markdown syntax with footnotes,

  embedded LaTeX, definition lists, tables, and other

  features. A compatibility mode is provided for those

  who need a drop-in replacement for Markdown.pl.


  In contrast to existing tools for converting markdown

  to HTML, which use regex substitutions, pandoc has

  a modular design: it consists of a set of readers,

  which parse text in a given format and produce a native

  representation of the document, and a set of writers,

  which convert this native representation into a target

  format. Thus, adding an input or output format requires

  only adding a reader or writer.'
