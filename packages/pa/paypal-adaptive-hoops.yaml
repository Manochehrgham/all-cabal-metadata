homepage: https://github.com/fanjam/paypal-adaptive-hoops
changelog-type: ''
hash: 49738bcfc424f63bc4bc6aef9e51e6c8cf40fcb5257d180041e6271b642a2f5a
test-bench-deps:
  test-framework-hunit: ==0.3.*
  paypal-adaptive-hoops: -any
  bytestring: -any
  test-framework: ==0.8.*
  base: -any
  unordered-containers: ==0.2.*
  text: -any
  HUnit: ==1.2.*
  aeson: -any
maintainer: ian@housejeffries.com
synopsis: Client for a limited part of PayPal's Adaptive Payments API
changelog: ''
basic-deps:
  http-client: ! '>=0.4.2 && <0.5'
  paypal-adaptive-hoops: -any
  bytestring: ! '>=0.10 && <0.11'
  lens-aeson: ! '>=1.0 && <1.1'
  base: ! '>=4.6 && <4.9'
  time: ! '>=1.4 && <1.6'
  text: ! '>=1.1 && <1.3'
  wreq: ! '>=0.3 && <0.4'
  lens: ! '>=4.6 && <5.0'
  transformers: ! '>=0.4 && <0.5'
  errors: ! '>=1.4 && <1.5'
  aeson: ! '>=0.8 && <0.9'
  vector: ! '>=0.10.12 && <0.11'
all-versions:
- '0.5.0.0'
- '0.5.1.0'
- '0.5.2.0'
- '0.5.3.0'
- '0.6.0.0'
- '0.7.0.0'
- '0.8.0.0'
- '0.9.0.0'
- '0.10.0.0'
- '0.10.0.1'
- '0.10.0.2'
- '0.11.0.0'
author: Ian Grant Jeffries
latest: '0.11.0.0'
description-type: markdown
description: ! '# Intro


  A high-level Haskell client for a limited part of PayPal''s [Adaptive Payments API](https://developer.paypal.com/docs/classic/products/adaptive-payments/).


  Covers only sending, receiving, and looking up payments. Only supports handling
  a single payment per request, and doesn''t cover sending payments that involve more
  than two parties.


  PayPal has other APIs like the [PayPal REST API](https://developer.paypal.com/docs/api/),
  but the PayPal REST API doesn''t support sending payments.


  # PayPal Credentials


  Getting production approval for the Adaptive Payments API takes some time. You should
  start the process well before you actually need to go into production. Detailed
  instructions for doing so are out of the scope of this project, but you can get
  started [here](https://developer.paypal.com/docs/classic/lifecycle/goingLive/).


  # Future Plans


  Only supports USD. More currencies would be a nice-to-have.


  # Local Tests


  `cabal test local`


  # Integration Tests


  Requires an internet connection, a PayPal sandbox app account, and a PayPal sandbox
  test user account. The test accounts should have balances between a few dollars
  and a million dollars (they send pennies around, but expect million dollar transaction
  attempts to fail from lack of funds).


  1. `cp sandbox-template.json sandbox.json`


  2. Fill out `sandbox.json` with your credentials.


  3. `cabal test remote`

'
license-name: MIT
