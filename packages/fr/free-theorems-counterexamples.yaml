changelog-type: ''
hash: 45b98d9737e39f4629fae6ddee5bf942ef821601de5ef75dbf91b1c3855ad634
synopsis: Automatically Generating Counterexamples to Naive Free Theorems
changelog: ''
all-versions:
- '0.3'
- '0.3.0.1'
- '0.3.0.2'
- '0.3.1.0'
latest: '0.3.1.0'
description-type: haddock
description: ! "This program is to verify (or to put into question) strictness conditions\non
  free theorems that arise if a polymorphic lambda calculus is\tenriched by\ngeneral
  recursion.\nGiven a type the program either returns an instance of the corresponding\nunrestricted
  free theorem that does not hold and thereby verifies the need\nof the additional
  restrictions or it returns without finding such an\ninstantiation and thereby suggests
  (but not proves) that the strictness\nconditions are superfluous.\nThe underlying
  algorithm is described in \\\"Automatically Generating\nCounterexamples to Naive
  Free Theorems\\\" (FLOPS'10) by Daniel Seidel and Janis\nVoigtl√§nder.\nA webinterface
  for the program is also available at\n<http://www-ps.iai.uni-bonn.de/cgi-bin/exfind.cgi>.\n\nRelated
  to this package you may be interested in the online free theorem generator\nat <http://www-ps.iai.uni-bonn.de/ft>
  that is also available offline via\n<http://hackage.haskell.org/cgi-bin/hackage-scripts/package/free-theorems-webui>.\nAlso
  interesting may be the tool polyseq that generates \\\"optimal\\\" free theorems
  in a\npolymorphic lambda calculus with selective strictness.\nPolyseq can be downloaded
  at\n<http://hackage.haskell.org/cgi-bin/hackage-scripts/package/polyseq>\nbut the
  functionality is as well provided via a webinterface at\n<http://www-ps.iai.uni-bonn.de/cgi-bin/polyseq.cgi>."
