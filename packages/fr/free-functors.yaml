changelog-type: text
hash: 5a1ba84edb648dda26ad9bb90782e7a00d12238f4156a957e1fa4fc2b4e465ca
test-bench-deps: {}
synopsis: Provides free functors that are adjoint to functors that forget class constraints.
changelog: ! "CHANGELOG\n\n0.6.4 -> 0.6.4.1\n  - Raise lower bounds of template-haskell\n\n0.6.3.3
  -> 0.6.4\n  - Updated to algebraic-classes 0.6\n  - Updated to template-haskell-2.10.0.0\n\n0.6.3.2
  -> 0.6.3.3\n  - Updated to void 0.7\n\n0.6.3.1 -> 0.6.3.2\n  - Updated to constraints
  0.4\n\n0.6.2 -> 0.6.3.1\n  - Updated to comonad 4.2\n  - Updated to transformers
  0.4.1.0\n\n0.6.1.1 -> 0.6.2\n  - Updated to template-haskell-2.9.0.0\n  - Added
  instance Applicative (HFree Monad f)\n\n0.6.1 -> 0.6.1.1\n  - Added a changelog\n\n0.6
  -> 0.6.1\n  - Updated to comonad-4.0\n  - Added convert to Data.Functor.HCofree\n"
basic-deps:
  void: ! '>=0.4 && <0.8'
  base: ==4.8.*
  comonad: ! '>=4.0 && <4.3'
  constraints: ! '>=0.3.2 && <0.5'
  transformers: ! '>=0.2.0.0 && <0.5'
  template-haskell: ==2.10.0.*
  algebraic-classes: ==0.6.*
all-versions:
- '0'
- '0.1'
- '0.1.1'
- '0.1.2'
- '0.2'
- '0.3'
- '0.4'
- '0.4.1'
- '0.5'
- '0.6'
- '0.6.1'
- '0.6.1.1'
- '0.6.2'
- '0.6.3'
- '0.6.3.1'
- '0.6.3.2'
- '0.6.3.3'
- '0.6.4'
- '0.6.4.1'
latest: '0.6.4.1'
description-type: haddock
description: ! 'A free functor is a left adjoint to a forgetful functor. It used to
  be the case

  that the only category that was easy to work with in Haskell was Hask itself, so

  there were no interesting forgetful functors.


  But the new ConstraintKinds feature of GHC provides an easy way of creating

  subcategories of Hask. That brings interesting opportunities for free (and cofree)
  functors.


  The examples directory contains an implementation of non-empty lists as free semigroups,

  and automata as free actions. The standard example of free higher order functors
  is free monads,

  and this definition can be found in Data.Functor.HFree.'
