changelog-type: ''
hash: 9a9b8f044b0cef8636ca88e47df406fc961b9a80f91745369c312f369b740222
synopsis: Monads for free
changelog: ''
all-versions:
- '0.1.0'
- '0.1.1'
- '0.2.0'
- '0.2.1'
- '0.2.2'
- '0.2.3'
- '1.8.0'
- '1.8.0.1'
- '1.8.0.3'
- '1.8.0.4'
- '2.0'
- '2.0.1'
- '2.0.1.1'
- '2.0.2'
- '2.0.3'
- '2.1'
- '2.1.1'
- '2.1.1.1'
- '2.2'
- '3.0'
- '3.1'
- '3.1.1'
- '3.2'
- '3.3'
- '3.3.0.1'
- '3.3.0.2'
- '3.3.1'
- '3.4'
- '3.4.1'
- '3.4.2'
- '4.0'
- '4.1'
- '4.2'
- '4.4'
- '4.5'
- '4.6'
- '4.6.1'
- '4.7'
- '4.7.1'
- '4.8'
- '4.8.0.1'
- '4.9'
- '4.10.0.1'
- '4.11'
latest: '4.11'
description-type: haddock
description: ! 'Free monads are useful for many tree-like structures and domain specific
  languages.


  If @f@ is a ''Functor'' then the free ''Monad'' on @f@ is the type

  of trees whose nodes are labeled with the constructors of @f@. The word

  \"free\" is used in the sense of \"unrestricted\" rather than \"zero-cost\":

  @Free f@ makes no constraining assumptions beyond those given by @f@ and the

  definition of ''Monad''. As used here it is a standard term from the

  mathematical theory of adjoint functors.


  Cofree comonads are dual to free monads. They provide convenient ways to talk

  about branching streams and rose-trees, and can be used to annotate syntax

  trees. The cofree comonad can be seen as a stream parameterized by a ''Functor''

  that controls its branching factor.


  More information on free monads, including examples, can be found in the

  following blog posts:

  <http://comonad.com/reader/2008/monads-for-free/>

  <http://comonad.com/reader/2011/free-monads-for-less/>'
