homepage: https://github.com/rodrigosetti/swagger-test
changelog-type: ''
hash: 46b27ae91e0fd64a473e539379b701e5ff2a6a9dc06ea47b8868e3cae2234096
test-bench-deps: {}
maintainer: rodrigosetti@gmail.com
synopsis: Testing of Swagger APIs
changelog: ''
basic-deps:
  http-client: -any
  insert-ordered-containers: -any
  bytestring: -any
  case-insensitive: -any
  base: ! '>=4.7 && <5'
  unordered-containers: -any
  text: -any
  syb: -any
  filepath: -any
  lens: -any
  binary: -any
  http-client-tls: -any
  swagger2: -any
  attoparsec: -any
  optparse-applicative: -any
  random: -any
  scientific: -any
  QuickCheck: ==2.10.*
  http-types: -any
  aeson: -any
  http-media: -any
  vector: -any
  swagger-test: -any
all-versions:
- '0.1.0'
author: Rodrigo Setti
latest: '0.1.0'
description-type: markdown
description: ! "# swagger-test\n\nThis is a tool for\n[Property Based Testing](https://en.wikipedia.org/wiki/Property_testing)\nof
  [swagger](https://swagger.io) APIs.\n\nIt basically allow you to approximate the
  computation of the following\nproposition:\n\n> valid(response, schema), response
  = execute(request), ∀ request ∈ schema\n\nWhich translates to:\n\n> For all valid
  requests that can be derived from my Swagger schema, the\n> API response obtained
  from executing that request is valid according to the\n> same Swagger schema.\n\nThe
  tool exposes several ways to configure get value from parts of it, for\nexample,
  you may be interested in getting just a random valid request from the\nschema (use
  the `generate` command), or validating if a given response (from a\nparticular operation)
  is valid (use the `validate` command), or, run one sample\ninstance of the full
  proposition, which picks a random request and validate it's\nresulting response
  (use the `request` command).\n\nThe generator random request values are reproducible
  by re-using the same _seed_\nvalue, or one can focus on a particular operation by
  specifying the operation\nid.\n\nThe tool also simplifies integration with other
  systems by allowing to configure\noutput formats as standard HTTP message, JSON,
  or curl. Additionally, there\nare Haskell modules exposed as a library if one wants
  to build on top of it.\n\n## Command Line Interface\n\n*swagger-test* supports three
  commands:\n\n * `generate` - generates a new random valid request from Swagger schema.\n
  * `validate` - validate a response to a given operation id, according to the\n   schema.\n
  * `request` - generate and make the request, then validates the response\n   (combines
  generate and validate).\n\n```console\nswagger-test --help\n```\n\n```\nTesting
  tool for Swagger APIs\n\nUsage: swagger-test [-s|--schema FILENAME] COMMAND\n  Generate
  Swagger requests and validates responses\n\nAvailable options:\n  -s,--schema FILENAME
  \    swagger JSON schema file to read\n                           from (default:
  \"swagger.json\")\n  -h,--help                Show this help text\n\nAvailable commands:\n
  \ generate                 Generate a random request according to Schema\n  validate
  \                Validate a response against Schema\n  request                  Generate,
  make the request, and validate response\n```\n\n### Sub-commands\n\n#### Generate\n\n```\nUsage:
  swagger-test generate [--seed N] [-o|--operation ID]\n                             [--request-format
  http|curl|none|json] [-i|--info]\n                             [--size N]\n  Generate
  a request\n\nAvailable options:\n  --seed N                 specify the seed for
  the random generator\n  -o,--operation ID        specify a operation id to test
  (default pick\n                           randomly)\n  --request-format http|curl|none|json\n
  \                          output format of the HTTP request (default: http)\n  -i,--info
  \               render information about seed and operation id\n  --size N                 control
  the size of the generated\n                           request (default: 30)\n  -h,--help
  \               Show this help text\n```\n\n#### Validate\n\n```\nUsage: swagger-test
  validate [FILENAME] (-o|--operation ID)\n  Validate a response\n\nAvailable options:\n
  \ FILENAME                 http response file to read from (default=stdin)\n  -o,--operation
  ID        specify a operation id to test (default pick\n                           randomly)\n
  \ -h,--help                Show this help text\n```\n\n#### Request\n\n```\nUsage:
  swagger-test request [--seed N] [-o|--operation ID]\n                            [--request-format
  http|curl|none|json]\n                            [--response-format http|json|none]
  [-i|--info]\n                            [--size N]\n  Generate, make the request,
  and validate response\n\nAvailable options:\n  --seed N                 specify
  the seed for the random generator\n  -o,--operation ID        specify a operation
  id to test (default pick\n                           randomly)\n  --request-format
  http|curl|none|json\n                           output format of the HTTP request
  (default: none)\n  --response-format http|json|none\n                           output
  format of the HTTP request (default: none)\n  -i,--info                render information
  about seed and operation id\n  --size N                 control the size of the
  generated\n                           request (default: 30)\n  -h,--help                Show
  this help text\n```\n"
license-name: BSD3
