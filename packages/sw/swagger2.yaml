homepage: https://github.com/GetShopTV/swagger2
changelog-type: markdown
hash: dbbae6a2ff27fd977d013d56cc36c4fef7f089cb8f88965b4c6c6ec22b50bebd
test-bench-deps:
  base: ==4.*
  unordered-containers: -any
  hspec: -any
  text: -any
  doctest: -any
  HUnit: -any
  containers: -any
  lens: -any
  swagger2: -any
  aeson-qq: -any
  QuickCheck: -any
  Glob: -any
  aeson: -any
  vector: -any
maintainer: nickolay@getshoptv.com
synopsis: Swagger 2.0 data model
changelog: ! "1.2.1\n---\n\n* Minor change:\n    * Change `_SwaggerItemsPrimitive`
  type from a `Prism'` to a more restrictive `Review`-like `Optic'`.\n\n* Fixes:\n
  \   * Fix build for GHC 8.0-rc1.\n\n1.2\n---\n* Minor changes (see [#36](https://github.com/GetShopTV/swagger2/pull/36)):\n
  \ * Change default `ToSchema` instance for unit data types (i.e. types with one
  nullable constructor like `data Unit = Unit`):\n    now these types are treated
  like sum types with only one alternative;\n  * Add generic `ToParamSchema` instance
  for unit data types;\n  * Add `items: []` to schema for `()` (making it a valid
  schema).\n\n* Fixes:\n    * Do not omit `items: []` from `Schema` JSON;\n    * Do
  not generate unused definitions for nested `newtype`s (see [#38](https://github.com/GetShopTV/swagger2/pull/38)).\n\n1.1.1\n---\n*
  Fixes:\n    * `CollectionFormat Param` -> `CollectionFormat ParamOtherSchema`;\n
  \     this change was necessary after putting `CollectionFormat` to `SwaggerItems`.\n\n1.1\n---\n*
  Major changes:\n    * Put `CollectionFormat` in one place (see [`3cc860d`](https://github.com/GetShopTV/swagger2/commit/3cc860dd3f002ab984f4d0e4ce1d1799f985832e)).\n\n*
  Minor changes:\n    * Use Swagger formats for `Int32`, `Int64`, `Float`, `Double`,
  `Day` and `ZonedTime` (see [#32](https://github.com/GetShopTV/swagger2/pull/32));\n
  \   * Export `HeaderName`, `TagName`, `HttpStatusCode` type synonyms;\n    * Add
  `ToParamSchema` instances for `[a]`, `Set a` and `HashSet a`;\n    * Add `Monoid`
  instances for `Header` and `Example`.\n\n* Fixes:\n    * Use overwrite strategy
  for `HashMap` `SwaggerMonoid` instances by default.\n\n1.0\n---\n* Major changes:\n
  \   * Add `Data` and `Typeable` instances for `Data.Swagger` types;\n    * Merge
  `ParamType`/`ItemsType`/`SchemaType` into `SwaggerType` GADT;\n    * Merge collection
  format types into `CollectionFormat` GADT;\n    * Introduce `SwaggerItems` GADT,
  replacing `Items` and `SchemaItems` in `ParamSchema` (see [#24](https://github.com/GetShopTV/swagger2/pull/24));\n
  \   * Move type, format and items fields to `ParamSchema` (former `SchemaComon`);\n
  \   * Prepend reference path automatically (see [commit 49d1fad](https://github.com/GetShopTV/swagger2/commit/49d1fadd2100644e70c442667180d0d73e107a5f))\n
  \     and thus remove `\"#/definitions/\"` from user code, leaving much clearer
  `Reference \"Name\"`;\n    * Change `Data.Swagger.Schema` (see [#19](https://github.com/GetShopTV/swagger2/pull/19)):\n
  \       * Change the only method of `ToSchema` to `declareNamedSchema` which should
  produce a `NamedSchema`\n          along with a list of schema definitions used
  to produce it;\n        * Add `declareSchema`, `declareSchemaRef`;\n        * Replace
  `genericTo*` helpers with `genericDeclare*` helpers;\n        * Add `paramSchemaTo[Named]Schema`
  helpers to facilitate code reuse for primitive schemas;\n        * Add helpers for
  inlining `Schema` references dynamically (see [#23](https://github.com/GetShopTV/swagger2/pull/23));\n
  \   * Add `ToParamSchema` class (see [#17](https://github.com/GetShopTV/swagger2/pull/17))
  with\n        * generic default implementation and\n        * instances for some
  base types compliant with `http-api-data` instances;\n    * Add `Data.Swagger.Declare`
  module with\n        * `DeclareT` monad transformer;\n        * `MonadDeclare` type
  class;\n        * various helpers;\n    * Rename parameter-related types:\n        *
  `Parameter` -> `Param`;\n        * `ParameterSchema` -> `ParamAnySchema`;\n        *
  `ParameterOtherSchema` -> `ParamOtherSchema`;\n        * `ParameterLocation` ->
  `ParamLocation`;\n        * `SchemaCommon` -> `ParamSchema`;\n        * `parameter*`
  fields renamed to `param*` fields;\n        * `schemaCommon*` fields renamed to
  `paramSchema*` fields;\n        * `HasSchemaCommon` -> `HasParamSchema`.\n\n* Minor
  changes:\n    * Replace TH-generated JSON instances with `Generic`-based (see [#25](https://github.com/GetShopTV/swagger2/pull/25));\n
  \   * Drop `template-haskell` dependency;\n    * Omit empty array/object properties
  from `toJSON` output ([#22](https://github.com/GetShopTV/swagger2/pull/22));\n    *
  Remove `minLength` property from schemas for `time` types;\n    * Move `SchemaOptions`
  to `Data.Swagger.SchemaOptions`;\n    * Remove `useReferences` from `SchemaOptions`
  (see [#23](https://github.com/GetShopTV/swagger2/pull/23));\n    * Place all internal
  submodules under `Data.Swagger.Internal`;\n    * Better documentation (see [#26](https://github.com/GetShopTV/swagger2/pull/26)).\n\n0.4.1\n---\n*
  Fixes:\n    * Use `PackageImports` for `Data.HashSet` to avoid test failure on stackage
  (see [#15](https://github.com/GetShopTV/swagger2/issues/15));\n    * Add an upper
  version bound for `aeson` due to `aeson-0.10.0.0` bug (see [bos/aeson#293](https://github.com/bos/aeson/issues/293));\n
  \   * Switch to Cabal-based multi GHC Travis config.\n\n0.4\n---\n* Remove `Swagger`/`swagger`
  prefixes;\n* Add `ToSchema` type class with default generic implementation;\n* Add
  configurable generic `ToSchema` helpers;\n* Add `doctest` test suite;\n* Fixes:\n
  \   * Fix `HasSchemaCommon` instance for `Schema`;\n    * Change `minimum`, `maximum`
  and `multipleOf` properties to be any number,\n      not necessarily an integer;\n
  \   * Fix all warnings.\n\n0.3\n---\n* Fixes:\n    * Fix `SwaggerMonoid Text` instance;\n
  \   * Wrap `Bool` in `Maybe` everywhere;\n    * These changes make all `Data.Swagger`
  `Monoid` instances obey monoid laws\n      (previously right identity law was broken
  by some instances).\n\n0.2\n---\n* Add `Data.Swagger.Lens`;\n* Support references;\n*
  Fixes:\n    * Fix `FromJSON SwaggerHost` instance;\n    * Add missing `Maybe`s for
  field types;\n    * Decode petstore `swagger.json` successfully.\n"
basic-deps:
  base: ! '>=4.8 && <4.9'
  time: -any
  unordered-containers: -any
  text: -any
  network: -any
  containers: -any
  lens: -any
  mtl: -any
  hashable: -any
  scientific: -any
  aeson: -any
  http-media: -any
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.4.1'
- '1.0'
- '1.1'
- '1.1.1'
- '1.2'
- '1.2.1'
author: Nickolay Kudasov
latest: '1.2.1'
description-type: markdown
description: ! '# swagger2


  [![Hackage](https://img.shields.io/hackage/v/swagger2.svg)](http://hackage.haskell.org/package/swagger2)

  [![Build Status](https://travis-ci.org/GetShopTV/swagger2.svg?branch=master)](https://travis-ci.org/GetShopTV/swagger2)


  Swagger 2.0 data model.


  The original Swagger 2.0 specification is available at http://swagger.io/specification/.


  ## Usage


  This library is inteded to be used for decoding and encoding Swagger 2.0 API specifications
  as well as manipulating them.


  Please refer to [haddock documentation](http://hackage.haskell.org/package/swagger2).


  Some examples can be found in [`examples/` directory](/examples).


  ## Trying out


  All generated swagger specifications can be interactively viewed on [Swagger Editor](http://editor.swagger.io/).


  Ready-to-use specification can be served as JSON and interactive API documentation

  can be displayed using [Swagger UI](https://github.com/swagger-api/swagger-ui).


  Many Swagger tools, including server and client code generation for many languages,
  can be found on

  [Swagger''s Tools and Integrations page](http://swagger.io/open-source-integrations/).


  ## Contributing


  We are happy to receive bug reports, fixes, documentation enhancements, and other
  improvements.


  Please report bugs via the [github issue tracker](https://github.com/GetShopTV/swagger2/issues).


  *GetShopTV Team*


'
license-name: BSD3
