changelog-type: ''
hash: 4eb55c537abeb4c4961ad04ebe44a2c3309255640b6aed79a988a390c518c4e5
test-bench-deps:
  bytestring: ! '>=0.9.2.1'
  base: -any
  hspec: ! '>=1.8.3'
  criterion: ! '>=0.8.0.0'
  conduit: -any
  HUnit: ! '>=1.2'
  hemokit: -any
  mtl: -any
  vector: ! '>=0.9'
synopsis: Haskell port of the Emokit EEG project
changelog: ''
basic-deps:
  svgcairo: ! '>=0.12.1.1'
  bytestring: ! '>=0.9.2.1'
  split: ! '>=0.2.2'
  base: ==4.*
  time: ! '>=1.4'
  base64-bytestring: ! '>=1.0.0.1'
  hidapi: ! '>=0.1.2'
  network-simple: ! '>=0.3.0 && <0.4.0.1'
  text: ! '>=0.11.1.1'
  cairo: ! '>=0.12.4'
  websockets: ! '>=0.8.0.0'
  conduit: ! '>=1'
  hemokit: -any
  robot: ! '>=1.3.0.1'
  deepseq-generics: ! '>=0.1'
  vector-fftw: ! '>=0.1.3.1'
  cipher-aes: ! '>=0.2.0'
  mtl: ! '>=2.1.2'
  gtk: ! '>=0.12.4'
  pretty-show: ! '>=1.0'
  transformers: ! '>=0.3.0.0'
  optparse-applicative: ! '>=0.7.0 && <0.10.0'
  deepseq: ! '>=1.2'
  aeson: ! '>=0.6.1.0'
  vector: ! '>=0.9'
all-versions:
- '0.4.0'
- '0.4.1'
- '0.4.2'
- '0.5'
- '0.5.1'
- '0.6.0'
- '0.6.1'
- '0.6.2'
- '0.6.3'
- '0.6.4'
- '0.6.5'
latest: '0.6.5'
description-type: markdown
description: ! "hemokit\n=======\n\nHaskell library and tool suite for the [Emotiv](http://emotiv.com)
  Epoc EEG, inspired by the [Emokit](https://github.com/openyou/emokit) code.\n\nIt
  currently only works on Linux and Windows - patches for other platforms are welcome,
  they should be trivial.\n\n\nDownload\n--------\n\nYou can download [pre-built binaries
  here](https://github.com/nh2/hemokit/releases), or build it yourself via [`cabal
  install hemokit`](http://hackage.haskell.org/package/hemokit).\n\n\nLibrary Features\n----------------\n\n*
  device discovery via [hidapi](https://github.com/vahokif/haskell-hidapi)\n* decryption
  of the raw data (one-to-one port from from Emokit)\n* convenient access to sensor
  values, gyro, qualities, battery, and raw data\n\n\nPrograms\n--------\n\nHemokit
  comes with example programs to\n\n* `hemokit-dump` print out the current EEG data\n*
  `hemokit-mouse` move the cursor using the gyro\n\nNote that we have to use `sudo`
  in most of the cases because the HIDAP-hidraw implementation reads directly from
  a device file.\n\n\nhemokit-dump - Examples\n-----------------------\n\n*hemokit-dump*
  can print EEG data, format it as JSON, serve it via TCP or Websockets, and read
  from real devices and dump files.\n\n\n* Output EEG *cumulative state* for an automatically
  found device:\n\n  ```bash\n  sudo hemokit-dump\n  ```\n\n* Select one of many connected
  EEGs by serial number:\n\n  ```bash\n  sudo hemokit-dump --serial SN...GM\n  ```\n\n*
  Output only the data the device sends (no cumulative state), and format the output
  as JSON:\n\n  ```bash\n  sudo hemokit-dump --mode packets --format json\n  ```\n\n
  \ The `--format` flag allows you to change the way the output is printed.\n  The
  output of `--mode state --format spaced` is especially easy to work with.\n\n* Instead
  of from a real device, read data recorded to a file, and serve it via JSON over
  a TCP server on port `1234`:\n\n  ```bash\n  sudo cat /dev/hidraw1 > encrypted.dump
  \ # Dump data to a file\n  sudo hemokit-dump --from-file encrypted.dump --serial
  SN...GM --serve 0.0.0.0:1234 --format json\n  ```\n\n  Here you **have** to specify
  the serial since HIDAPI is not used to obtain it automatically.\n  \n  If you prefer
  a Websockets server over a raw TCP server, use `ws://0.0.0.0:1234` instead.\n\n*
  Output decrypted raw data to stdout:\n\n  ```bash\n  sudo hemokit-dump --mode raw\n
  \ ```\n\n* Both print the data from the EEG **and** store the original data for
  later use:\n\n  ```bash\n  sudo cat /dev/hidraw1 | tee >(hemokit-dump --from-file
  - --serial SN...GM --format json) > encrypted.dump\n  ```\n\n  We use `tee` and
  shell process substitution to duplicate the data stream, and tell *hemokit-dump*
  to read from `-` (stdin).\n"
