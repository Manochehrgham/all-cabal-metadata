homepage: https://github.com/redneb/hs-adler32
changelog-type: markdown
hash: 54ad0974420fa6e3e91419893d1b675449a6bc1b90b27905f22c7cf1ec500475
test-bench-deps:
  bytestring: -any
  base: -any
  hspec: ! '>=2'
  adler32: -any
maintainer: Marios Titas <rednebΑΤgmxDΟΤcom>
synopsis: An implementation of Adler-32, supporting rolling checksum operation
changelog: ! '#### 0.1.1.0 *2016-01-25*


  * Introduce the `adler32Update''` method to the `Adler32Src` class.

'
basic-deps:
  bytestring: ! '>=0.10.2'
  base: ! '>=4.6 && <5'
all-versions:
- '0.1.0.0'
- '0.1.1.0'
author: Marios Titas <rednebΑΤgmxDΟΤcom>
latest: '0.1.1.0'
description-type: haddock
description: ! 'This package provides an implementation of the Adler-32 checksum algorithm.

  In supports a rolling checksum mode, i.e. the checksum of a sliding window

  of the input message can be computed efficiently. It also supports

  compounding, i.e. the checksum of the concatenation of two messages can be

  efficiently computed from the checksums of the two parts.


  By default, the highly optimized implementation of Adler-32 from @zlib@

  will be used. This can be disabled in which case a pure haskell

  implementation will be used instead. The haskell version is 2 to 3 times

  slower on my system.'
license-name: BSD3
