homepage: https://projects.zubr.me/wiki/adblock2privoxy
changelog-type: text
hash: abb98118a9e99ac3b1751f4864b2d71078486576a96a7746a92dc6aa4e4500ba
test-bench-deps: {}
maintainer: Alexey Zubritskiy <adblock2privoxy@zubr.me>
synopsis: Convert adblock config files to privoxy format
changelog: ! "1.3.0\n\t\t* Build and packaging process refactoring\n\t\t* Build script
  for windows\n\t\t* Installation documentation\n\t\t* CSS server domain changed from
  hardcoded 'privoxy.zubr.me' to configurable one (ticket #1)\n\t\t* Element hiding
  CSS generation is skipped if the domain is not specified\n\t\t* Task files contains
  output paths, so it's possible to run ab2p with single parameter: task file name\n\t\t*
  Bugfixes for tickets #7, #8, #9\n1.2.4\n\t    * Documentation and bugfixes\n\n1.1.0\n
  \       * Tasks support to update privoxy config from same sources\n        * HTTP(s)
  supported to get adblock files\n        * Redirect comment support\n        * Sources
  expiration check \n\n1.0.0\n        * First public version\n        * Supports filenames
  in command-line\n        * Page elements blocking\n        * URLs blocking\n        *
  Popups blocking\n        * Adblock options: script, image, stylesheet, object, xmlhttprequest,
  object-subrequest, subdocument,document, elemhide, other, popup, third-party, domain=...,
  match-case, donottrack    "
basic-deps:
  MissingH: -any
  base: ! '>=4 && <5'
  time: ! '>=1.4'
  text: ! '>=0.11'
  strict: ! '>=0.3'
  filepath: -any
  network: ! '>=2.4'
  parsec: -any
  containers: -any
  old-locale: ! '>=1.0'
  network-uri: -any
  mtl: -any
  parsec-permutation: -any
  http-conduit: -any
  directory: -any
all-versions:
- '1.0.0'
- '1.1.0'
- '1.2.0'
- '1.2.1'
- '1.2.2'
- '1.2.3'
- '1.2.4'
- '1.2.5'
- '1.3.0'
- '1.3.1'
- '1.3.2'
- '1.3.3'
author: Alexey Zubritsky <adblock2privoxy@zubr.me>
latest: '1.3.3'
description-type: text
description: ! "===============\nAdblock2Privoxy \n===============\n\n**Convert adblock
  config files to privoxy format**\n\nSynopsis\n--------\n\n    adblock2privoxy [OPTION...]
  [URL...]\n\nObjectives\n----------\n\nAdBlock Plus browser plugin has great block
  lists provided by big community,\nbut it is client software and cannot work on a
  server as a proxy.\n\nPrivoxy proxy has good potential to block ads at server side,
  \nbut it experiences acute shortage of updated block lists.\n\nThis software converts
  adblock lists to privoxy config files format.   \n\nAlmost all adblock features
  are supported including\n\n* block/unblock requests (on privoxy)\n\n  * all syntax
  features are supported except for regex templates matching host name\n\n* hide/unhide
  page elements (via CSS)\n\n  * all syntax features are supported\n\n* all block
  request options except for outdated ones:\n\n  * Supported: script, image, stylesheet,
  object, xmlhttprequest, object-subrequest, subdocument,document, elemhide, other,
  popup, third-party, domain=..., match-case, donottrack\n  * Unsupported: collapse,
  background, xbl, ping and dtd\n  \nTested with privoxy version 3.0.21.\nElement
  hiding feature requires a webserver to serve CSS files. See Nginx and Apache config
  examples provided.\n\nDescription\n-----------\n\nAdblock files specified by [URL]...
  are converted to privoxy config files and auxiliarly elemHide CSS files. Local file
  names and http(s) addresses are accepted as URLs. \n\nIf no source URLs are specified,
  task file is used to determine sources: previously processed sources are processed
  again if any of them is expired. Nothing is done if all sources in the task file
  are up to date. \n\nOptions\n-------\n  \n  -v         --version           \n      Show
  version number\n  -p PATH    --privoxyDir=PATH    \n      Privoxy config output
  path\n  -w PATH    --webDir=PATH       \n      Css files output path\n  -d DOMAIN
  \ --domainCSS=DOMAIN   \n      Domain of CSS web server (required for Element Hide
  functionality)\n  -t PATH    --taskFile=PATH     \n      Path to task file containing
  urls to process and options.\n  -f         --forced            \n      Run even
  if no sources are expired\n\nIf taskFile is not specified explicilty, [privoxyDir]/ab2p.task
  is used.\n\nIf task file exists and privoxyDir, webDir or domainCSS is not specified,
  corresponding value is taken from task file.\n\nIf webDir is not specified (and
  cannot be taken from task file), privoxyDir value is used for webDir.\n\nIf domainCSS
  is not specified (and cannot be taken from task file), Element Hide functionality
  become disabled (and no webserver is needed). \n\ndomainCSS can contain just IP
  address if no CSS web server has no associated domain.  \n\nUsage\n-----\n\nExample
  of first run::\n\n    adblock2privoxy -p /etc/privoxy -w /var/www/privoxy -d www.example.com
  -t my_ab2b.task https://easylist-downloads.adblockplus.org/easylist.txt https://easylist-downloads.adblockplus.org/advblock.txt
  my_custom.txt\n\nExample of subsequent runs::\n\n    adblock2privoxy -t my_ab2b.task\n\nThe
  app generates following files\n\n\t* privoxyDir: \n\n\t\t* ab2p.system.action\n\t\t*
  ab2p.action\n\t\t* ab2p.system.filter\n\t\t* ab2p.filter\n\n\t* webDir: \n\n\t\t*
  ab2p.common.css\n\t\t* ab2p.css\n\t\t* [lot of directories for all levels of domain
  names] \n\n\t* taskFile:\n\n    * special file containing execution details. It
  can be reused to update privoxy config from same sources with same options. \n\nHow
  to apply results\n--------------------\n\n1. Install privoxy. Optionally setup it
  as transparent proxy\n\n2. Change privoxy config file. Add following lines::\n\n
  \   actionsfile ab2p.system.action\n    actionsfile ab2p.action\n    filterfile
  ab2p.system.filter\n    filterfile ab2p.filter\n\n3. Install nginx or apache webserver\n\n
  \  Nginx config example::\n\n    server {\n            listen 80;\n            #ab2p
  css domain name (optional, should be equal to domainCSS parameter)\n            server_name
  www.example.com;\n\n            #root = webDir parameter value \n            root
  /var/www/privoxy; \n\n            location ~ ^/[^/.]+\\..+/ab2p.css$ {\n              \t#
  first reverse domain names order\n    \t\t\trewrite ^/([^/]*?)\\.([^/.]+)(?:\\.([^/.]+))?(?:\\.([^/.]+))?(?:\\.([^/.]+))?(?:\\.([^/.]+))?(?:\\.([^/.]+))?(?:\\.([^/.]+))?(?:\\.([^/.]+))?/ab2p.css$
  /$9/$8/$7/$6/$5/$4/$3/$2/$1/ab2p.css last;\n            }\n\n            location
  ~ (^.*/+)[^/]+/+ab2p.css {\n              \t# then try to get CSS for current domain\n
  \             \t# if it is unavailable - get CSS for parent domain\n              \ttry_files
  $uri $1ab2p.css;\n            } \n    }\n\n\n   Apache config example::\n\n    <VirtualHost
  *:80>\n            #ab2p css domain name (optional, should be equal to domainCSS
  parameter)\n            ServerName www.example.com \n\n            #root = webDir
  parameter value \n            DocumentRoot /var/www/privoxy\n\n\n            RewriteEngine
  on\n\n            # first reverse domain names order\n            RewriteRule ^/([^/]*?)\\.([^/.]+)(?:\\.([^/.]+))?(?:\\.([^/.]+))?(?:\\.([^/.]+))?(?:\\.([^/.]+))?(?:\\.([^/.]+))?(?:\\.([^/.]+))?(?:\\.([^/.]+))?/ab2p.css$
  /$9/$8/$7/$6/$5/$4/$3/$2/$1/ab2p.css [N]\n\n            # then try to get CSS for
  current domain\n            # if it is unavailable - get CSS for parent domain\n
  \           RewriteCond %{DOCUMENT_ROOT}/%{REQUEST_FILENAME} !-f\n            RewriteRule
  (^.*/+)[^/]+/+ab2p.css$ $1ab2p.css [N]\n    </VirtualHost>\n\n4) Find out abdlock
  config files to use. Some download locations\n\n  * `EasyList <https://easylist.adblockplus.org/en/>`_\n
  \ * `Russian AD list <https://code.google.com/p/ruadlist/>`_\n\n5) Run adblock2privoxy
  providing privoxy dir, web dir, domain and adblock input file urls\n\n6) Restart
  privoxy and apache to load updated configs\n\nClone repository from http://projects.zubr.me/adblock2privoxy.git"
license-name: GPL-3
