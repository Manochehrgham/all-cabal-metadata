changelog-type: markdown
hash: 27ba34e440d9fa09d8a8d0b5b4c722205107e966d08006349a646b59afad5459
test-bench-deps:
  base: -any
  doctest: ==0.9.*
  wuss: -any
synopsis: Secure WebSocket (WSS) clients
changelog: ! '# Change log


  ## v1.0.0 (2015-04-15)


  -   Initially released.


  ## v0.0.0 (2015-04-15)


  -   Initially created.

'
basic-deps:
  bytestring: -any
  base: ==4.*
  network: -any
  websockets: ==0.9.*
  connection: ==0.2.*
all-versions:
- '1.0.0'
latest: '1.0.0'
description-type: markdown
description: ! "<h1 align=\"center\">\n    <a href=\"http://taylor.fausak.me/wuss/\">\n
  \       Wuss\n    </a>\n</h1>\n\n<p align=\"center\">\n    Secure WebSocket (WSS)
  clients in Haskell.\n</p>\n\n<p align=\"center\">\n    <a href=\"https://hackage.haskell.org/package/wuss\"><img
  alt=\"Version\" src=\"https://img.shields.io/hackage/v/wuss.svg?label=version&amp;style=flat-square\"></a>\n
  \   <a href=\"https://travis-ci.org/tfausak/wuss\"><img alt=\"Build\" src=\"https://img.shields.io/travis/tfausak/wuss/master.svg?label=build&amp;style=flat-square\"></a>\n
  \   <a href=\"http://packdeps.haskellers.com/feed?needle=wuss\"><img alt=\"Dependencies\"
  src=\"https://img.shields.io/hackage-deps/v/wuss.svg?label=dependencies&amp;style=flat-square\"></a>\n</p>\n\n<hr>\n\nWuss
  is a library that lets you easily create secure WebSocket clients over the\nWSS
  protocol.\n\n-   [Installation](#installation)\n-   [Usage](#usage)\n\n## Installation\n\nTo
  add Wuss as a dependency to your package, add it to your Cabal file.\n\n```\nbuild-depends:
  wuss ==1.*\n```\n\nFor other use cases, install it with Cabal.\n\n``` sh\n$ cabal
  install 'wuss ==1.*'\n```\n\nWuss uses [Semantic Versioning][]. See [the change
  log][] for a detailed list\nof changes.\n\n## Usage\n\n``` hs\nimport Wuss\n\nimport
  Control.Concurrent (forkIO)\nimport Control.Monad (forever, unless, void)\nimport
  Data.Text (Text, pack)\nimport Network.WebSockets (ClientApp, receiveData, sendClose,
  sendTextData)\n\nmain :: IO ()\nmain = runSecureClient \"echo.websocket.org\" 443
  \"/\" ws\n\nws :: ClientApp ()\nws connection = do\n    putStrLn \"Connected!\"\n\n
  \   void . forkIO . forever $ do\n        message <- receiveData connection\n        print
  (message :: Text)\n\n    let loop = do\n            line <- getLine\n            unless
  (null line) $ do\n                sendTextData connection (pack line)\n                loop\n
  \   loop\n\n    sendClose connection (pack \"Bye!\")\n```\n\nFor more information
  about Wuss, please read [the Haddock documentation][].\n\n[semantic versioning]:
  http://semver.org/spec/v2.0.0.html\n[the change log]: CHANGELOG.md\n[the haddock
  documentation]: https://hackage.haskell.org/package/wuss\n"
