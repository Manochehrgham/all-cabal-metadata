changelog-type: ''
hash: 2361e556c2fe0ab7a415b5088d23fca7b660985f71214276056fdc89164f21dc
synopsis: Global optimization using Differential Evolution
changelog: ''
all-versions:
- '0.0.1'
- '0.0.2'
latest: '0.0.2'
description-type: haddock
description: ! 'Plain Differential Evolution algorithm for optimizing

  real-valued functions. For further info, see

  Differential evolution: a practical approach

  to global optimization By Kenneth V. Price,

  Rainer M. Storn, and Jouni A. Lampinen.


  This Library is optimized and should achieve runtimes

  with factor of 2 from c.

  For optimal performance, pay some attention to

  rts memory parameters.


  Example in GHCi:


  >import Data.Vector.Unboxed as VUB

  >import Numeric.Optimization.Algorithms.DifferentialEvolution

  >

  >let fitness = VUB.sum . VUB.map (*2)

  >

  >de (defaultParams fitness ((VUB.replicate 60 0), (VUB.replicate 60 0)))'
