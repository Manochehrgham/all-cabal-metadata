homepage: http://github.com/ekmett/discrimination/
changelog-type: markdown
hash: 034929e93d33bdd670812953e77d44c6be85ed6a378b5cd911646becac93328d
test-bench-deps: {}
maintainer: Edward A. Kmett <ekmett@gmail.com>
synopsis: Fast generic linear-time sorting, joins and container construction.
changelog: ! "## 0.1\n\n* `grouping` is now productive. This means it can start spitting
  out results as it goes! To do this I created the `promises` package and switched
  to using it behind the scenes for many combinators that consume a `Group`. This
  has a bunch of knock-on effects:\n  * `grouping` is now working properly with respect
  to its law!\n  * `grouping` now uses an American-flag style top-down radix sort
  rather than a bottom up radix sort for all operations. This is sadly required for
  productivity. This will use a lot more memory for intermediate arrays, as we don't
  get to return them to storage after we're done.\n  * We now use much smaller intermediate
  arrays for `grouping`. Should we do the same for `sorting`?\n\n## 0\n\n* Initialized
  repository\n"
basic-deps:
  void: ! '>=0.5 && <1'
  base: ! '>=4.7 && <5'
  semigroups: ! '>=0.16.2 && <1'
  array: ! '>=0.5 && <0.6'
  containers: ! '>=0.4 && <0.6'
  promises: ! '>=0.2 && <0.3'
  ghc-prim: -any
  contravariant: ! '>=1.3.1 && <2'
  transformers: ! '>=0.2 && <0.5'
  deepseq: ! '>=1.3 && <1.5'
  primitive: ! '>=0.6 && <0.7'
  profunctors: ! '>=5 && <6'
  vector: ! '>=0.10 && <0.11'
all-versions:
- '0'
- '0.1'
author: Edward A. Kmett
latest: '0.1'
description-type: markdown
description: ! 'discrimination

  ==============


  [![Build Status](https://secure.travis-ci.org/ekmett/discrimination.png?branch=master)](http://travis-ci.org/ekmett/discrimination)


  This package provides linear time sorting, partitioning, and joins for a wide array
  of Haskell data types. This work is based on a

  "final encoding" of the ideas presented in [multiple](http://www.diku.dk/hjemmesider/ansatte/henglein/papers/henglein2011a.pdf)
  [papers](http://www.diku.dk/hjemmesider/ansatte/henglein/papers/henglein2011c.pdf)
  and [talks](https://www.youtube.com/watch?v=sz9ZlZIRDAg) by [Fritz Henglein](http://www.diku.dk/hjemmesider/ansatte/henglein/).


  By adopting a final encoding we can enjoy many instances for standard classes, lawfully,
  without quotienting.


  Contact Information

  -------------------


  Contributions and bug reports are welcome!


  Please feel free to contact me through github or on the #haskell IRC channel on
  irc.freenode.net.


  -Edward Kmett

'
license-name: BSD3
