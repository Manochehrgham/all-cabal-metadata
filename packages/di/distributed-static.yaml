changelog-type: ''
hash: b5c1d5551c2dac5991817adf9e0825c5792d94224fd475e78f462ebb66b286c3
synopsis: Compositional, type-safe, polymorphic static values and closures
changelog: ''
all-versions:
- '0.1.0.0'
- '0.2.0.0'
- '0.2.1'
- '0.2.1.1'
- '0.3.0.0'
- '0.3.1.0'
latest: '0.3.1.0'
description-type: haddock
description: ! '/Towards Haskell in the Cloud/ (Epstein et al, Haskell

  Symposium 2011) introduces the concept of /static/ values:

  values that are known at compile time. In a distributed

  setting where all nodes are running the same executable,

  static values can be serialized simply by transmitting a

  code pointer to the value. This however requires special

  compiler support, which is not yet available in ghc. We

  can mimick the behaviour by keeping an explicit mapping

  (''RemoteTable'') from labels to values (and making sure

  that all distributed nodes are using the same

  ''RemoteTable''). In this module we implement this mimickry

  and various extensions: type safety (including for

  polymorphic static values) and compositionality.'
