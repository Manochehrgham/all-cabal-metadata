homepage: http://projects.haskell.org/diagrams/
changelog-type: markdown
hash: 3eb18cd1b842442077693e5d97cc9f34aa9b1cdb35aea5b8f4ae636c35e6b5a7
test-bench-deps: {}
maintainer: diagrams-discuss@googlegroups.com
synopsis: HTML5 canvas backend for diagrams drawing EDSL
changelog: ! '## [v1.3.0.2](https://github.com/diagrams/diagrams-html5/tree/v1.3.0.2)
  (2015-07-19)


  [Full Changelog](https://github.com/diagrams/diagrams-html5/compare/v1.3.0.1...v1.3.0.2)


  ## [v1.3.0.1](https://github.com/diagrams/diagrams-html5/tree/v1.3.0.1) (2015-05-26)


  [Full Changelog](https://github.com/diagrams/diagrams-html5/compare/v1.3...v1.3.0.1)


  ## [1.3](http://github.com/diagrams/diagrams-html5/tree/v1.3) (19 April 2015)


  - initial release

'
basic-deps:
  NumInstances: ! '>=1.0 && <1.5'
  diagrams-lib: ! '>=1.3 && <1.4'
  split: ! '>=0.2 && <0.3'
  base: ! '>=4.6 && <4.9'
  data-default-class: ! '>=0.0.1 && <0.1'
  text: ! '>=1.0 && <1.3'
  containers: ! '>=0.3 && <0.6'
  lens: ! '>=4.0 && <4.13'
  mtl: ! '>=2.0 && <3.0'
  cmdargs: ! '>=0.6 && <0.11'
  static-canvas: ! '>=0.2 && <0.3'
  diagrams-core: ! '>=1.3 && <1.4'
  optparse-applicative: ! '>=0.10 && <0.12'
  statestack: ! '>=0.2 && <0.3'
all-versions:
- '1.3'
- '1.3.0.1'
- '1.3.0.2'
author: Jeffrey Rosenbluth
latest: '1.3.0.2'
description-type: markdown
description: ! "diagrams-html5\n===============\n\ndiagrams-html5 is an HTML5 Canvas
  backend for **diagrams** based on the static-canvas\nhttps://github.com/jeffreyrosenbluth/static-canvas
  package.\n\n**diagrams** is a powerful, flexible, declarative domain-specific language
  for \ncreating vector graphics, using the Haskell programming language.\n\n[diagrams-lib]:
  http://hackage.haskell.org/package/diagrams%2Dlib\n\n# Installation\n\n```\ncabal
  update && cabal install diagrams-html5\n```\n\n# Usage\n\nA simple example that
  uses _diagrams-html5_ to draw a the Sierpinski triangle.\n\n![Sierpinksi](http://i.imgur.com/FBaSTYd.png)\n\n```haskell\nimport
  Diagrams.Prelude\nimport Diagrams.Backend.Html5.CmdLine\n\nsierpinski 1 = eqTriangle
  1\nsierpinski n =     s\n                  ===\n               (s ||| s) # centerX\n
  \ where s = sierpinski (n-1)\n\nexample :: Diagram B\nexample = sierpinski 7 # center
  # lw none # fc black\n\nmain = mainWith $ example # frame 0.1\n```\n\nSave this
  to file named `Sierpinski.hs` and compile this program:\n\n```\nghc Sierpinski.hs\n```\n\nThis
  will generate an executable which, when run creates an html file\ncontaining the
  HTML5 Canvas code to generate the diagram.\n\n```\n$ ./Sierpinski -o sierpinski.html
  -w 400\n```\n\nYou _must_ pass an output file name with a `.html` extension.\n\n```\nUsage:
  ./Sierpinksi [-w|--width WIDTH] [-h|--height HEIGHT] [-o|--output OUTPUT] [--loop]
  [-s|--src ARG] [-i|--interval INTERVAL]\n  Command-line diagram generation.\n\nAvailable
  options:\n  -?,--help                Show this help text\n  -w,--width WIDTH         Desired
  WIDTH of the output image\n  -h,--height HEIGHT       Desired HEIGHT of the output
  image\n  -o,--output OUTPUT       OUTPUT file\n  -l,--loop                Run in
  a self-recompiling loop\n  -s,--src ARG             Source file to watch\n  -i,--interval
  INTERVAL   When running in a loop, check for changes every INTERVAL seconds.\n```\n"
license-name: BSD3
