homepage: ''
changelog-type: ''
hash: e3f2234288142af4cafe3a3bb42758da3a3fb5c2ec98dc75660747db23e2ac22
test-bench-deps: {}
maintainer: diagrams-discuss@googlegroups.com
synopsis: A pandoc filter to express diagrams inline using the haskell EDSL _diagrams_
changelog: ''
basic-deps:
  diagrams-lib: ! '>=1.3 && <1.4'
  base: ! '>=4.6 && <4.9'
  diagrams-cairo: ! '>=1.3 && <1.4'
  filepath: ! '>=1.3 && <1.5'
  pandoc-types: ! '>=1.12.4.5 && <1.13'
  diagrams-builder: ! '>=0.7 && <0.8'
  linear: ! '>=1.10 && <1.20'
  optparse-applicative: ! '>=0.11 && <0.12'
  directory: ! '>=1.2 && <1.3'
all-versions:
- '0.1'
author: Daniel Bergey
latest: '0.1'
description-type: markdown
description: ! "[![Build Status](https://travis-ci.org/diagrams/diagrams-pandoc.svg?branch=master)](https://travis-ci.org/diagrams/diagrams-pandoc)\n\nA
  [pandoc](http://johnmacfarlane.net/pandoc/) filter to express\ndiagrams inline using
  the haskell EDSL\n[diagrams](http://projects.haskell.org/diagrams/).\n\n## Usage\n\nCreate
  an input file called `demo.md` with the following text:\n\n``` markdown\n    This
  is how to draw a circle:\n    ~~~ diagram\n    example = circle 1\n    ~~~\n```\n\nInstall
  diagrams-pandoc, then run pandoc as follows:\n\n``` shell\n    pandoc -t html demo.md
  --filter diagrams-pandoc -o demo.html -s\n```\n\nThe file demo.html should now have
  an img tag pointing at a PNG of a circle.\n\n## Details\n\n`diagrams-pandoc` compiles
  code blocks containing diagrams expressions\nand includes the resulting images in
  the pandoc markup.  It is meant\nto be run as a\n[pandoc filter](http://johnmacfarlane.net/pandoc/scripting.html)
  as\nshown above.\n\n`diagrams-pandoc` is aware of two code block classes.  A block
  with\nthe `diagram` class will be replaced by the resulting image---the code\nwill
  not appear in the output.  A block with the `diagram-haskell`\nclass will produce
  both an image and a (syntax highlighted) code\nblock.  The input block is replaced
  by image appears before the code\nblock, and the `diagram-haskell` class is replaced
  by the `haskell`\nclass, so that pandoc can perform syntax highlighting as usual.\n\nI
  have only tested with pandoc's markdown reader.  In particular, the\nrst reader
  does not attach classes to code blocks, only to Div elements.\n\n## Installing\n\n`diagrams-pandoc`
  is not yet on Hackage.  To install, clone this\nrepository, and install with cabal.\n\n```
  shell\n    git clone https://github.com/bergey/diagrams-pandoc.git\n    cd diagrams-pandoc\n
  \   cabal install\n```\n\n## TODO\n\n* use pandoc output type to pick an image file
  format\n* for formats which are more human-readable (eg, markdown, rst), leave\n
  \ code block alone?\n* provide command-line flags to override default behavior\n*
  add Backends besides Cairo\n* Support RST by handling `Div class=diagram [CodeBlock
  foo bar]` the same as `CodeBlock class=diagram bar`\n"
license-name: BSD3
