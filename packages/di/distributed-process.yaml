changelog-type: text
hash: 878d39859608b5442ba095e7f00b565e624920cd170580d171c71fbecc9a8e19
test-bench-deps:
  bytestring: ! '>=0.9 && <0.11'
  base: ! '>=4.4 && <5'
  distributed-process: -any
  binary: ! '>=0.6.3 && <0.8'
  network-transport-tcp: ! '>=0.3 && <0.5'
synopsis: ! 'Cloud Haskell: Erlang-style concurrency in Haskell'
changelog: ! "2014-12-09  Tim Watson  <watson.timothy@gmail.com>  0.5.2\n\n* Fix docstring
  for `register`\n* Added Data instance to ProcessId, LocalProcessId and NodeId\n*
  Add static serialiation dictionary for 'Static', for completeness\n* Add Closure
  static serialization dictionary\n* Replacement for modifyMVarMasked for GHC <= 7.4\n*
  Document the use of built-in trace flags\n* Make forkProcess exception-safe\n* Make
  -Wall clean\n\n2014-08-13  Tim Watson  <watson.timothy@gmail.com>  0.5.1\n\n* Fix
  cabal docs (thanks Markus Barenhoff)\n* Expose lifted version of Control.Exception.mask_
  (thanks Alexander Vershilov)\n\n2014-05-30  Tim Watson  <watson.timothy@gmail.com>
  \ 0.5.0\n\n* Dependency on STM implicitly changed from 1.3 to 1.4, but was not reflected
  in the cabal file\n* Race condition in local monitoring when using call\n* mask
  now works correctly if unmask is called by another process\n* Improve efficiency
  of local message passing\n* nsend uses local communication channels\n* Link Node
  Controller and Network Listener\n* Label spawned processes using labelThread\n*
  Relaxed upper bound on syb in the cabal manifest\n* Bump binary version to include
  0.7.*\n* Exposed process info\n* Exposed node statistics\n* Moved tests to https://github.com/haskell-distributed/distributed-process-tests\n*
  Added \"polymorphic expect\"\n* Exposed Message type and broaden scope of polymorphic
  expect\n* Added Management API (for working with internal/system events)\n* Tracing
  can no longer be disabled\n* We now report node statistics for monitoring/management\n*
  Node.runProcess now propagates exceptions to its caller\n* Added simple micro benchmarks\n\n2013-01-27
  \ Tim Watson  <watson.timothy@gmail.com>  0.4.2\n\n* Improved exception handling
  for deferred type checked exit reasons\n* Add matchChan primitive (thanks Simon
  Marlow)\n* Expose deferred message handling/checking for AbstractMessage\n* Add
  `getProcessInfo' API\n* Add `trace' API backed by the GHC eventlog\n\n2012-11-22
  \ Edsko de Vries  <edsko@well-typed.com>  0.4.1\n\n* Make behaviour of 'register'
  more Erlang-like (register will now fail if the\nname is already registered).  Patch
  by Jeff Epstein.\n* Functor, Applicative, Alternative and Monad instances for ReceivePort\n*
  Add support for receiveChanTimeout\n* Improved documentation\n* Avoid name clashes
  in the TH generation for closures\n* Relax package bounds to allow for Binary 0.6\n\n2012-10-23
  \ Edsko de Vries  <edsko@well-typed.com>  0.4.0.2\n\n* Fix race condition in spawn\n\n2012-10-04
  \ Edsko de Vries  <edsko@well-typed.com>  0.4.0.1\n\n* Relax package boundaries\n\n2012-10-03
  \ Edsko de Vries  <edsko@well-typed.com>  0.4.0\n\n* Improved treatment of network
  failure, using new failure semantics of\nNetwork.Transport.\n* Make NodeId Typeable\n*
  Extend Template Haskell support with \"remotableDec\" so that you can refer to\n$(mkClosure
  'f) within the body of \"f\".\n* Fix bug in spawnChannelLocal\n* Numerous memory
  leaks plugged\n* Relax upper bound on dependency on 'network'\n* New primitive 'matchAny'\n*
  Remove 'whereisRemote' (see comment of 'whereisRemoteAsync') \n\n2012-08-16  Edsko
  de Vries  <edsko@well-typed.com>  0.3.1\n\n* Fix memory leaks\n* Make Template Haskell
  support optional\n* Relax dependency constraints\n\n2012-08-07  Edsko de Vries  <edsko@well-typed.com>
  \ 0.3.0\n\n* Extract 'static' into a separate package (C.D.Static)\n* Use new package
  rank1dynamic to proper runtime checks for polymorphic values\n\n2012-08-02  Edsko
  de Vries  <edsko@well-typed.com>  0.2.3.0\n\n* Expose the constructors of Closure\n*
  Add instance (Typeable a => Serializable (Static a)) and make sure we only\nuse
  the internal representation of Static where really necessary\n* Improved docs\n\n2012-07-31
  \ Edsko de Vries  <edsko@well-typed.com>  0.2.2.0\n\n* Add exception handling primitives\n*
  Fix runProcess: if the process threw an exception, a 'waiting indefinitely on\nMVar'
  exception would be thrown.\n\n2012-07-21  Edsko de Vries  <edsko@well-typed.com>
  \ 0.2.1.4\n\n* Bugfix in the node controller\n(one way this bug materialized: when
  using the SimpleLocalnet backend,\nslave nodes could not be reused)\n* Improved
  documentation in Control.Distributed.Process.Closure\n\n2012-07-20  Edsko de Vries
  \ <edsko@well-typed.com>  0.2.1.3\n\n* Improve docs\n* Local versions of spawn\n\n2012-07-16
  \ Edsko de Vries  <edsko@well-typed.com>  0.2.1.2\n\n* Base 4.6 compatibility\n*
  Relax constraints on bytestring and containers\n\n2012-07-16  Edsko de Vries  <edsko@well-typed.com>
  \ 0.2.1.1\n\n* Relax upper bound on 'time' dependency\n\n2012-07-11  Edsko de Vries
  \ <edsko@well-typed.com>  0.2.1\n\n* Complete redesign of the underlying implementation
  of static values and\nclosures. \n\n* Add support for 'spawnChannel' \n\n2012-07-09
  \ Edsko de Vries  <edsko@well-typed.com>  0.2.0.1\n\n* Bugfix: Continue processing
  messages when a connection breaks.\n\n2012-07-07  Edsko de Vries  <edsko@well-typed.com>
  \ 0.2.0\n\n* Initial release.\n"
basic-deps:
  bytestring: ! '>=0.9 && <0.11'
  stm: ! '>=2.4 && <2.5'
  base: ! '>=4.4 && <5'
  time: ! '>=1.2 && <1.5'
  syb: ! '>=0.3 && <0.5'
  containers: ! '>=0.4 && <0.5'
  data-accessor: ! '>=0.2 && <0.3'
  binary: ! '>=0.6.3 && <0.8'
  ghc-prim: ! '>=0.2 && <0.4'
  old-locale: ! '>=1.0 && <1.1'
  rank1dynamic: ! '>=0.1 && <0.3'
  mtl: ! '>=2.0 && <2.3'
  hashable: ! '>=1.2.0.5 && <1.3'
  network-transport: ! '>=0.4.1.0 && <0.5'
  transformers: ! '>=0.2 && <0.5'
  random: ! '>=1.0 && <1.2'
  deepseq: ==1.3.0.0
  distributed-static: ! '>=0.2 && <0.4'
  template-haskell: ! '>=2.7 && <2.8'
all-versions:
- '0.2.0'
- '0.2.0.1'
- '0.2.1'
- '0.2.1.1'
- '0.2.1.2'
- '0.2.1.3'
- '0.2.1.4'
- '0.2.2.0'
- '0.2.3.0'
- '0.3.0'
- '0.3.1'
- '0.4.0'
- '0.4.0.1'
- '0.4.0.2'
- '0.4.1'
- '0.4.2'
- '0.5.0'
- '0.5.1'
- '0.5.2'
- '0.5.3'
latest: '0.5.3'
description-type: haddock
description: ! 'This is an implementation of Cloud Haskell, as described in

  /Towards Haskell in the Cloud/ by Jeff Epstein, Andrew Black,

  and Simon Peyton Jones

  (<http://research.microsoft.com/en-us/um/people/simonpj/papers/parallel/>),

  although some of the details are different. The precise message

  passing semantics are based on /A unified semantics for future Erlang/

  by Hans Svensson, Lars-&#xc5;ke Fredlund and Clara Benac Earle.

  You will probably also want to install a Cloud Haskell backend such

  as distributed-process-simplelocalnet.'
