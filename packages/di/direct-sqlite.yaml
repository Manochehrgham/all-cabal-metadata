homepage: https://github.com/IreneKnapp/direct-sqlite
changelog-type: text
hash: 9ef7fb34bba06f3858489dbe8e33941e236b55fb22802993760c385fc1d15210
test-bench-deps:
  bytestring: -any
  base: -any
  text: -any
  direct-sqlite: -any
  HUnit: -any
  base16-bytestring: -any
  temporary: -any
  directory: -any
maintainer: Janne Hellsten <jjhellst@gmail.com>
synopsis: Low-level binding to SQLite3.  Includes UTF8 and BLOB support.
changelog: ! "v2.3.21\r\n\t* Update sqlite to 3.20.1\r\n\t* Add -DSQLITE_ENABLE_FTS5
  to build options\r\n\r\nv2.3.20\r\n\t* Enable use of usleep (thanks @dbdbdb)\r\n\t*
  Add sqlite3.h and sqlite3ext.h to install-includes (thanks @duog)\r\n\r\nv2.3.19\r\n\t*
  Upgrade embedded sqlite3 library to 3.15.2.\r\n\r\nv2.3.18\r\n\t* Upgrade embedded
  sqlite3 library to 3.15.0.\r\n\r\n\t* Fix regressions in the test suite that were
  either introduced by changes\r\n\t  in GHC 8 and/or stuff we missed in previous
  releases.\r\n\r\nv2.3.17\r\n\t* Use a randomly created temp file for test database
  when running\r\n\tunit tests instead of a hardcoded file under 'dist/'.  Hopefully\r\n\tfixes
  https://github.com/IreneKnapp/direct-sqlite/issues/60\r\n\r\nv2.3.16\r\n\t* Add
  an Eq instance for SQLError\r\n\r\nv2.3.15\r\n\t* Add support for the online backup
  API\r\n\r\n\t* Add support for incremental blob I/O\r\n\r\n\t* Add support for zeroblobs\r\n\r\n\t*
  Add support for enabling/disabling the shared cache mode\r\n\r\n\t* Add low-level
  bindings to sqlite3_wal_hook\r\n\r\n\t* Add function for retrieving the db handle
  from a custom function\r\n\t  context.\r\n\r\n\t* Add bindings for sqlite3_errcode\r\n\r\n\t*
  Improve Travis CI coverage to cover more GHC versions (GHC 7.4 and higher)\r\n\r\n\t*
  Big thanks to Mario Titas and Marcin Tolysz for the above!\r\n\r\nv2.3.14\r\n\t*
  Add custom functions, aggregates and collations.\r\n\r\n\t* Upgrade the bundled
  SQLite3 library to 3.8.5.\r\n\r\n\t* Add bindings for controlling whether extension
  loading is\r\n\t  enabled or disabled.\r\n\r\n\t* Bump text and bytestring versions
  (actually, risking it and\r\n\t  removing upper bounds)\r\n\r\nv2.3.13\r\n\t* Add
  support for named parameters to queries.  Split this changelog into\r\n\t  a separate
  file (preserving its history).\r\n\r\nv2.3.12\r\n\t* Upgrade bundled SQLite3 to
  3.8.4.1.\r\n\r\nv2.3.11\r\n\r\n\t* Add support for URI filenames, and default to
  having them\r\n\t  on. Among other things, this enables using in-memory databases.\r\n\r\nv2.3.10\r\n\r\n\t*
  Add support for compiling the bundled SQLite3 with URI filename\r\n\t  support.
  Specifying flags that would have affected the bundled\r\n\t  SQLite3 no longer causes
  build failure if the \"systemlib\" flag\r\n\t  is specified.\r\n\r\nv2.3.9\r\n\r\n\t*
  Update bounds on the requirement on the \"text\" library.\r\n\r\nv2.3.8\r\n\r\n\t*
  Upgrade bundled SQLite3 to 3.8.1.\r\n\r\nv2.3.7\r\n\r\n\t* Fix a test failure related
  to 64-bit math on column indices.\r\n\r\nv2.3.6\r\n\r\n\t* Re-apply the stat64 hack
  after upgrade to the bundled\r\nSQLite3.  Oops!\r\n\r\nv2.3.5\r\n\r\n\t* Add support
  to compile bundled SQLite3 with full-text\r\n\t  search.  Upgrade bundled SQLite3
  to 3.7.17.\r\n\r\nv2.3.4\r\n\r\n\t* Work around a linker error on some systems;
  add column-name\r\n\t  reporting.\r\n\r\nv2.3.3.1\r\n\r\n\t* Upgrade bundled SQLite3
  to 3.7.15.2.\r\n\r\nv2.3.3\r\n\r\n\t* Add trace support, as a feature for debugging.\r\n\r\nv2.3.2\r\n\r\n\t*
  Add execPrint, execWithCallback, and interruptibly functions.\r\n\t  Add bindings
  for sqlite3_last_insert_rowid and sqlite3_changes.\r\n\t  Change the Show instance
  of the Utf8 newtype to better match the\r\n\t  IsString instance.\r\n\r\nv2.3.1\r\n\r\n\t*
  Upgrade the bundled SQLite3 to 3.7.15.  Add bindings for\r\n\t  sqlite3_interrupt.
  \ Export Int rather than CInt.\r\n\r\nv2.3\r\n\r\n\t* Mark some FFI calls \"unsafe\",
  for a substantial performance\r\n\t  benefit.\r\n\r\nv2.2.1\r\n\r\n\t* Bump down
  text library version to match with the latest Haskell\r\n\t  Platform.\r\n\r\nv2.2\r\n\r\n\t*
  Actually does what version 2.1 claimed to, since the author made\r\n\t  a mistake
  with git.\r\n\r\nv2.1\r\n\r\n\t* Improves handling of invalid UTF-8 and changes
  error handling to\r\n\t  be more complete.  It also adds a build flag to build against
  the\r\n\t  system sqlite instead of the bundled one, optionally\r\n\t  (disabled
  by default).\r\n\r\nv2.0\r\n\r\n\t* Uses Text for strings instead of String.\r\n\r\nv1.1.0.1\r\n\r\n\t*
  Switches to the Faction packaging system and makes\r\n\t  no other changes.\r\n\r\nv1.1\r\n\r\n\t*
  Adds the SQLite amalgamation file (version 3.7.5) to the\r\n\t  project, so that
  there are no external dependencies.\r\n\r\n"
basic-deps:
  bytestring: ! '>=0.9.2.1'
  base: ! '>=4.1 && <5'
  text: ! '>=0.11'
all-versions:
- '1.0'
- '1.1'
- '2.0'
- '2.1'
- '2.2'
- '2.2.1'
- '2.3'
- '2.3.1'
- '2.3.2'
- '2.3.3'
- '2.3.3.1'
- '2.3.4'
- '2.3.5'
- '2.3.6'
- '2.3.7'
- '2.3.8'
- '2.3.9'
- '2.3.11'
- '2.3.12'
- '2.3.13'
- '2.3.14'
- '2.3.15'
- '2.3.16'
- '2.3.17'
- '2.3.18'
- '2.3.19'
- '2.3.20'
- '2.3.21'
author: Irene Knapp <irene.knapp@icloud.com>
latest: '2.3.21'
description-type: haddock
description: ! 'This package is not very different from the other SQLite3 bindings
  out

  there, but it fixes a few deficiencies I was finding.  As compared to

  bindings-sqlite3, it is slightly higher-level, in that it supports

  marshalling of data values to and from the database.  In particular, it

  supports strings encoded as UTF8, and BLOBs represented as ByteStrings.'
license-name: BSD3
