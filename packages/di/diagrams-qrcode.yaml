changelog-type: ''
hash: 6f3dd7ed07cd6d77b7222297eed2ce3498c9ff3f4d1a7e9df7331e1629544b1c
test-bench-deps: {}
synopsis: Draw QR codes to SVG, PNG, PDF or PS files.
changelog: ''
basic-deps:
  diagrams-lib: ==1.2.*
  base: ! '>=4.5 && <4.8'
  array: -any
  diagrams-core: ==1.2.*
  colour: -any
all-versions:
- '1.0'
- '1.0.1'
- '1.1'
- '1.1.1'
- '1.1.2'
- '1.2'
latest: '1.2'
description-type: markdown
description: ! "diagrams-qrcode\n===============\n\nThis library is able to draw diagrams
  of QR codes using the\n`diagrams` library.  In order to create the QR code itself,
  you\nmay use either the `haskell-qrencode` library or `qrcode`\nlibrary, both are
  supported.  In order to draw and save the\ndiagram to a file, we suggest using either
  the `diagrams-svg`\nlibrary (pure Haskell, fast, SVG output only) or the\n`diagrams-cairo`
  library (requires Cairo, supports many different\noutput targets, including SVG,
  PNG, PDF, PS and directly onto a\nGUI).\n\nFor example:\n\n```\n$ cabal install
  diagrams-qrcode haskell-qrencode diagrams-svg diagrams\n$ cd examples/\n$ echo 'https://github.com/meteficha/diagrams-qrcode/'
  | \\\n  runhaskell using-haskell-qrencode.hs > qrcode.svg\n$ xdg-open qrcode.svg\n```\n\n![qrcode.png](https://raw.github.com/meteficha/diagrams-qrcode/master/examples/qrcode.png)\n"
