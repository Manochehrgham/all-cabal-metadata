changelog-type: text
hash: 7fe121165bc480aae2b99e86951212a16f004165d81937f7eb3c284cdb82b359
test-bench-deps: {}
synopsis: Win32 DHCP Server Management API
changelog: ! '0.3.1

  =====


  * updated documentation

  * internal refactoring


  0.3

  ===


  * Update to support GHC 7.6 - 7.10

  * Expose freeDHCP function


  0.2.1

  =====


  * bug fix: Internal memory structures were not being freed properly.


  0.2

  ===


  * All functions throw Win32Exception exceptions.

  * strict Text values are favored over String

  * drop dependency on safe

'
basic-deps:
  Win32-errors: ! '>=0.2 && <0.3'
  base: ! '>=4.6 && <4.9'
  text: ! '>=0.11 && <1.3'
  Win32: ! '>=2.2 && <2.4'
all-versions:
- '0.1'
- '0.2'
- '0.2.1'
- '0.3'
- '0.3.1'
latest: '0.3.1'
description-type: haddock
description: ! 'This package provides a partial binding to the Win32 DHCP Server Management

  API. Its purpose is to query and control a Microsoft DHCP server. Enough

  functionality is defined so so that Ipv4 client lease and reservation

  records can be manipulated programmatically._Only 32-bit versions of GHC are

  supported at this time._


  Here are a few notes on the required environment:


  * Only 32-bit executables are supported. This is mainly because pointers

  are assumed to be 4 bytes wide in a few places. Support for 64-bit

  executables may be added in the future.


  * All library calls should be supported on Windows 7 or above.


  /Simple Example and Usage/


  @

  \-\- Print all MAC addresses with an active client lease

  module Main where


  import Data.Ip

  import Data.Mac

  import qualified Data.Text.IO as T

  import System.Win32.DHCP


  main :: IO ()

  main = do

  &#x20;   api <- loadDHCP

  &#x20;   clients <- enumClients api context

  &#x20;   let macs = map (showMac \":\" . clientHardwareAddress) clients

  &#x20;   mapM_ T.putStrLn macs

  &#x20; where

  &#x20;   Right subnet = readIp \"192.168.1.0\"

  &#x20;   context = Context \"192.168.1.5\" subnet

  @'
