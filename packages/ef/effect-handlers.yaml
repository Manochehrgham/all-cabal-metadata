changelog-type: ''
hash: 34355d6c4d9dfaeedad2c3e89dc59beeeec18d6e7e017c6bf815921740225ad6
synopsis: A library for writing extensible algebraic effects and handlers. Similar
  to extensible-effects but with deep handlers.
changelog: ''
all-versions:
- '0.1.0.0'
- '0.1.0.1'
- '0.1.0.2'
- '0.1.0.3'
- '0.1.0.4'
- '0.1.0.5'
- '0.1.0.6'
latest: '0.1.0.6'
description-type: haddock
description: ! 'This is an extensible effects library for Haskell taking inspiration
  from the Eff language <http://www.eff-lang.org/>.


  See these papers for the ideas and theory behind the library:


  - O. Kammar et al: Handlers in Action! <http://homepages.inf.ed.ac.uk/slindley/papers/handlers.pdf>

  - A. Bauer, M. Pretnar: Programming with Algebraic Effects and Handlers <http://arxiv.org/abs/1203.1539>

  - O Kiselyov, A Sabry, C Swords: Extensible Effects <http://dl.acm.org/citation.cfm?id=2503791>


  Implementation wise it''s most close to @extensible-effects@ <http://hackage.haskell.org/package/extensible-effects>
  (also see the Extensible Effects paper) but it implements deep handlers instead
  of shallow.


  @

  import Control.Effects.Cont.Eff

  import Control.Effects.Cont.Reader

  import Control.Effects.Cont.Exception


  program = do

  &#32;&#32;v <- ask

  &#32;&#32;if v < 15

  &#32;&#32;then throw $ show v

  &#32;&#32;else return (v+1)


  run n = runPure . handle exceptionHandler . handle (readerHandler n)


  res :: Integer -> Either String Integer

  res n = run n program

  @'
